{"version":3,"file":"index-5db0944b.js","sources":["../../node_modules/@notionhq/client/build/src/utils.js","../../node_modules/@notionhq/client/build/src/logging.js","../../node_modules/@notionhq/client/build/src/errors.js","../../node_modules/@notionhq/client/build/src/api-endpoints.js","../../node_modules/node-fetch/browser.js","../../node_modules/@notionhq/client/build/src/Client.js","../../node_modules/@notionhq/client/build/src/helpers.js","../../node_modules/@notionhq/client/build/src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isObject = exports.pick = exports.assertNever = void 0;\n/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param value The variable with no remaining values\n */\nfunction assertNever(value) {\n    throw new Error(`Unexpected value should never occur: ${value}`);\n}\nexports.assertNever = assertNever;\nfunction pick(base, keys) {\n    const entries = keys.map(key => [key, base === null || base === void 0 ? void 0 : base[key]]);\n    return Object.fromEntries(entries);\n}\nexports.pick = pick;\nfunction isObject(o) {\n    return typeof o === \"object\" && o !== null;\n}\nexports.isObject = isObject;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logLevelSeverity = exports.makeConsoleLogger = exports.LogLevel = void 0;\nconst utils_1 = require(\"./utils\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"debug\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"ERROR\"] = \"error\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nfunction makeConsoleLogger(name) {\n    return (level, message, extraInfo) => {\n        console[level](`${name} ${level}:`, message, extraInfo);\n    };\n}\nexports.makeConsoleLogger = makeConsoleLogger;\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nfunction logLevelSeverity(level) {\n    switch (level) {\n        case LogLevel.DEBUG:\n            return 20;\n        case LogLevel.INFO:\n            return 40;\n        case LogLevel.WARN:\n            return 60;\n        case LogLevel.ERROR:\n            return 80;\n        default:\n            return (0, utils_1.assertNever)(level);\n    }\n}\nexports.logLevelSeverity = logLevelSeverity;\n//# sourceMappingURL=logging.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildRequestError = exports.APIResponseError = exports.UnknownHTTPResponseError = exports.isHTTPResponseError = exports.RequestTimeoutError = exports.isNotionClientError = exports.ClientErrorCode = exports.APIErrorCode = void 0;\nconst utils_1 = require(\"./utils\");\n/**\n * Error codes returned in responses from the API.\n */\nvar APIErrorCode;\n(function (APIErrorCode) {\n    APIErrorCode[\"Unauthorized\"] = \"unauthorized\";\n    APIErrorCode[\"RestrictedResource\"] = \"restricted_resource\";\n    APIErrorCode[\"ObjectNotFound\"] = \"object_not_found\";\n    APIErrorCode[\"RateLimited\"] = \"rate_limited\";\n    APIErrorCode[\"InvalidJSON\"] = \"invalid_json\";\n    APIErrorCode[\"InvalidRequestURL\"] = \"invalid_request_url\";\n    APIErrorCode[\"InvalidRequest\"] = \"invalid_request\";\n    APIErrorCode[\"ValidationError\"] = \"validation_error\";\n    APIErrorCode[\"ConflictError\"] = \"conflict_error\";\n    APIErrorCode[\"InternalServerError\"] = \"internal_server_error\";\n    APIErrorCode[\"ServiceUnavailable\"] = \"service_unavailable\";\n})(APIErrorCode = exports.APIErrorCode || (exports.APIErrorCode = {}));\n/**\n * Error codes generated for client errors.\n */\nvar ClientErrorCode;\n(function (ClientErrorCode) {\n    ClientErrorCode[\"RequestTimeout\"] = \"notionhq_client_request_timeout\";\n    ClientErrorCode[\"ResponseError\"] = \"notionhq_client_response_error\";\n})(ClientErrorCode = exports.ClientErrorCode || (exports.ClientErrorCode = {}));\n/**\n * Base error type.\n */\nclass NotionClientErrorBase extends Error {\n}\n/**\n * @param error any value, usually a caught error.\n * @returns `true` if error is a `NotionClientError`.\n */\nfunction isNotionClientError(error) {\n    return (0, utils_1.isObject)(error) && error instanceof NotionClientErrorBase;\n}\nexports.isNotionClientError = isNotionClientError;\n/**\n * Narrows down the types of a NotionClientError.\n * @param error any value, usually a caught error.\n * @param codes an object mapping from possible error codes to `true`\n * @returns `true` if error is a `NotionClientError` with a code in `codes`.\n */\nfunction isNotionClientErrorWithCode(error, codes) {\n    return isNotionClientError(error) && error.code in codes;\n}\n/**\n * Error thrown by the client if a request times out.\n */\nclass RequestTimeoutError extends NotionClientErrorBase {\n    constructor(message = \"Request to Notion API has timed out\") {\n        super(message);\n        this.code = ClientErrorCode.RequestTimeout;\n        this.name = \"RequestTimeoutError\";\n    }\n    static isRequestTimeoutError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.RequestTimeout]: true,\n        });\n    }\n    static rejectAfterTimeout(promise, timeoutMS) {\n        return new Promise((resolve, reject) => {\n            const timeoutId = setTimeout(() => {\n                reject(new RequestTimeoutError());\n            }, timeoutMS);\n            promise\n                .then(resolve)\n                .catch(reject)\n                .then(() => clearTimeout(timeoutId));\n        });\n    }\n}\nexports.RequestTimeoutError = RequestTimeoutError;\nclass HTTPResponseError extends NotionClientErrorBase {\n    constructor(args) {\n        super(args.message);\n        this.name = \"HTTPResponseError\";\n        const { code, status, headers, rawBodyText } = args;\n        this.code = code;\n        this.status = status;\n        this.headers = headers;\n        this.body = rawBodyText;\n    }\n}\nconst httpResponseErrorCodes = {\n    [ClientErrorCode.ResponseError]: true,\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\nfunction isHTTPResponseError(error) {\n    if (!isNotionClientErrorWithCode(error, httpResponseErrorCodes)) {\n        return false;\n    }\n    return true;\n}\nexports.isHTTPResponseError = isHTTPResponseError;\n/**\n * Error thrown if an API call responds with an unknown error code, or does not respond with\n * a property-formatted error.\n */\nclass UnknownHTTPResponseError extends HTTPResponseError {\n    constructor(args) {\n        var _a;\n        super({\n            ...args,\n            code: ClientErrorCode.ResponseError,\n            message: (_a = args.message) !== null && _a !== void 0 ? _a : `Request to Notion API failed with status: ${args.status}`,\n        });\n        this.name = \"UnknownHTTPResponseError\";\n    }\n    static isUnknownHTTPResponseError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.ResponseError]: true,\n        });\n    }\n}\nexports.UnknownHTTPResponseError = UnknownHTTPResponseError;\nconst apiErrorCodes = {\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\n/**\n * A response from the API indicating a problem.\n * Use the `code` property to handle various kinds of errors. All its possible values are in `APIErrorCode`.\n */\nclass APIResponseError extends HTTPResponseError {\n    constructor() {\n        super(...arguments);\n        this.name = \"APIResponseError\";\n    }\n    static isAPIResponseError(error) {\n        return isNotionClientErrorWithCode(error, apiErrorCodes);\n    }\n}\nexports.APIResponseError = APIResponseError;\nfunction buildRequestError(response, bodyText) {\n    const apiErrorResponseBody = parseAPIErrorResponseBody(bodyText);\n    if (apiErrorResponseBody !== undefined) {\n        return new APIResponseError({\n            code: apiErrorResponseBody.code,\n            message: apiErrorResponseBody.message,\n            headers: response.headers,\n            status: response.status,\n            rawBodyText: bodyText,\n        });\n    }\n    return new UnknownHTTPResponseError({\n        message: undefined,\n        headers: response.headers,\n        status: response.status,\n        rawBodyText: bodyText,\n    });\n}\nexports.buildRequestError = buildRequestError;\nfunction parseAPIErrorResponseBody(body) {\n    if (typeof body !== \"string\") {\n        return;\n    }\n    let parsed;\n    try {\n        parsed = JSON.parse(body);\n    }\n    catch (parseError) {\n        return;\n    }\n    if (!(0, utils_1.isObject)(parsed) ||\n        typeof parsed[\"message\"] !== \"string\" ||\n        !isAPIErrorCode(parsed[\"code\"])) {\n        return;\n    }\n    return {\n        ...parsed,\n        code: parsed[\"code\"],\n        message: parsed[\"message\"],\n    };\n}\nfunction isAPIErrorCode(code) {\n    return typeof code === \"string\" && code in apiErrorCodes;\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\n// cspell:disable-file\n// Note: This is a generated file.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.oauthToken = exports.listComments = exports.createComment = exports.search = exports.createDatabase = exports.listDatabases = exports.queryDatabase = exports.updateDatabase = exports.getDatabase = exports.appendBlockChildren = exports.listBlockChildren = exports.deleteBlock = exports.updateBlock = exports.getBlock = exports.getPageProperty = exports.updatePage = exports.getPage = exports.createPage = exports.listUsers = exports.getUser = exports.getSelf = void 0;\nexports.getSelf = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [],\n    path: () => `users/me`,\n};\nexports.getUser = {\n    method: \"get\",\n    pathParams: [\"user_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `users/${p.user_id}`,\n};\nexports.listUsers = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `users`,\n};\nexports.createPage = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n    path: () => `pages`,\n};\nexports.getPage = {\n    method: \"get\",\n    pathParams: [\"page_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}`,\n};\nexports.updatePage = {\n    method: \"patch\",\n    pathParams: [\"page_id\"],\n    queryParams: [],\n    bodyParams: [\"properties\", \"icon\", \"cover\", \"archived\"],\n    path: (p) => `pages/${p.page_id}`,\n};\nexports.getPageProperty = {\n    method: \"get\",\n    pathParams: [\"page_id\", \"property_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}/properties/${p.property_id}`,\n};\nexports.getBlock = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.updateBlock = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"embed\",\n        \"type\",\n        \"archived\",\n        \"bookmark\",\n        \"image\",\n        \"video\",\n        \"pdf\",\n        \"file\",\n        \"audio\",\n        \"code\",\n        \"equation\",\n        \"divider\",\n        \"breadcrumb\",\n        \"table_of_contents\",\n        \"link_to_page\",\n        \"table_row\",\n        \"heading_1\",\n        \"heading_2\",\n        \"heading_3\",\n        \"paragraph\",\n        \"bulleted_list_item\",\n        \"numbered_list_item\",\n        \"quote\",\n        \"to_do\",\n        \"toggle\",\n        \"template\",\n        \"callout\",\n        \"synced_block\",\n        \"table\",\n    ],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.deleteBlock = {\n    method: \"delete\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.listBlockChildren = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\nexports.appendBlockChildren = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\"children\", \"after\"],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\nexports.getDatabase = {\n    method: \"get\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `databases/${p.database_id}`,\n};\nexports.updateDatabase = {\n    method: \"patch\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"title\",\n        \"description\",\n        \"icon\",\n        \"cover\",\n        \"properties\",\n        \"is_inline\",\n        \"archived\",\n    ],\n    path: (p) => `databases/${p.database_id}`,\n};\nexports.queryDatabase = {\n    method: \"post\",\n    pathParams: [\"database_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [\"sorts\", \"filter\", \"start_cursor\", \"page_size\", \"archived\"],\n    path: (p) => `databases/${p.database_id}/query`,\n};\nexports.listDatabases = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `databases`,\n};\nexports.createDatabase = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\n        \"parent\",\n        \"properties\",\n        \"icon\",\n        \"cover\",\n        \"title\",\n        \"description\",\n        \"is_inline\",\n    ],\n    path: () => `databases`,\n};\nexports.search = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n    path: () => `search`,\n};\nexports.createComment = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"rich_text\", \"discussion_id\"],\n    path: () => `comments`,\n};\nexports.listComments = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"block_id\", \"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `comments`,\n};\nexports.oauthToken = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"grant_type\", \"code\", \"redirect_uri\", \"external_account\"],\n    path: () => `oauth/token`,\n};\n//# sourceMappingURL=api-endpoints.js.map","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Client_auth, _Client_logLevel, _Client_logger, _Client_prefixUrl, _Client_timeoutMs, _Client_notionVersion, _Client_fetch, _Client_agent, _Client_userAgent;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logging_1 = require(\"./logging\");\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"./utils\");\nconst api_endpoints_1 = require(\"./api-endpoints\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst package_json_1 = require(\"../package.json\");\nclass Client {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        _Client_auth.set(this, void 0);\n        _Client_logLevel.set(this, void 0);\n        _Client_logger.set(this, void 0);\n        _Client_prefixUrl.set(this, void 0);\n        _Client_timeoutMs.set(this, void 0);\n        _Client_notionVersion.set(this, void 0);\n        _Client_fetch.set(this, void 0);\n        _Client_agent.set(this, void 0);\n        _Client_userAgent.set(this, void 0);\n        /*\n         * Notion API endpoints\n         */\n        this.blocks = {\n            /**\n             * Retrieve block\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getBlock.path(args),\n                    method: api_endpoints_1.getBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update block\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateBlock.path(args),\n                    method: api_endpoints_1.updateBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Delete block\n             */\n            delete: (args) => {\n                return this.request({\n                    path: api_endpoints_1.deleteBlock.path(args),\n                    method: api_endpoints_1.deleteBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            children: {\n                /**\n                 * Append block children\n                 */\n                append: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.appendBlockChildren.path(args),\n                        method: api_endpoints_1.appendBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n                /**\n                 * Retrieve block children\n                 */\n                list: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.listBlockChildren.path(args),\n                        method: api_endpoints_1.listBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.databases = {\n            /**\n             * List databases\n             *\n             * @deprecated Please use `search`\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listDatabases.path(),\n                    method: api_endpoints_1.listDatabases.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a database\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getDatabase.path(args),\n                    method: api_endpoints_1.getDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Query a database\n             */\n            query: (args) => {\n                return this.request({\n                    path: api_endpoints_1.queryDatabase.path(args),\n                    method: api_endpoints_1.queryDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Create a database\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createDatabase.path(),\n                    method: api_endpoints_1.createDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update a database\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateDatabase.path(args),\n                    method: api_endpoints_1.updateDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.pages = {\n            /**\n             * Create a page\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createPage.path(),\n                    method: api_endpoints_1.createPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a page\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getPage.path(args),\n                    method: api_endpoints_1.getPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update page properties\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updatePage.path(args),\n                    method: api_endpoints_1.updatePage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updatePage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updatePage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            properties: {\n                /**\n                 * Retrieve page property\n                 */\n                retrieve: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.getPageProperty.path(args),\n                        method: api_endpoints_1.getPageProperty.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.users = {\n            /**\n             * Retrieve a user\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getUser.path(args),\n                    method: api_endpoints_1.getUser.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getUser.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getUser.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List all users\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listUsers.path(),\n                    method: api_endpoints_1.listUsers.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listUsers.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listUsers.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Get details about bot\n             */\n            me: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getSelf.path(),\n                    method: api_endpoints_1.getSelf.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getSelf.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getSelf.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.comments = {\n            /**\n             * Create a comment\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createComment.path(),\n                    method: api_endpoints_1.createComment.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createComment.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createComment.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List comments\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listComments.path(),\n                    method: api_endpoints_1.listComments.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listComments.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listComments.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        /**\n         * Search\n         */\n        this.search = (args) => {\n            return this.request({\n                path: api_endpoints_1.search.path(),\n                method: api_endpoints_1.search.method,\n                query: (0, utils_1.pick)(args, api_endpoints_1.search.queryParams),\n                body: (0, utils_1.pick)(args, api_endpoints_1.search.bodyParams),\n                auth: args === null || args === void 0 ? void 0 : args.auth,\n            });\n        };\n        this.oauth = {\n            /**\n             * Get token\n             */\n            token: (args) => {\n                return this.request({\n                    path: api_endpoints_1.oauthToken.path(),\n                    method: api_endpoints_1.oauthToken.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.oauthToken.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.oauthToken.bodyParams),\n                    auth: {\n                        client_id: args.client_id,\n                        client_secret: args.client_secret,\n                    },\n                });\n            },\n        };\n        __classPrivateFieldSet(this, _Client_auth, options === null || options === void 0 ? void 0 : options.auth, \"f\");\n        __classPrivateFieldSet(this, _Client_logLevel, (_a = options === null || options === void 0 ? void 0 : options.logLevel) !== null && _a !== void 0 ? _a : logging_1.LogLevel.WARN, \"f\");\n        __classPrivateFieldSet(this, _Client_logger, (_b = options === null || options === void 0 ? void 0 : options.logger) !== null && _b !== void 0 ? _b : (0, logging_1.makeConsoleLogger)(package_json_1.name), \"f\");\n        __classPrivateFieldSet(this, _Client_prefixUrl, ((_c = options === null || options === void 0 ? void 0 : options.baseUrl) !== null && _c !== void 0 ? _c : \"https://api.notion.com\") + \"/v1/\", \"f\");\n        __classPrivateFieldSet(this, _Client_timeoutMs, (_d = options === null || options === void 0 ? void 0 : options.timeoutMs) !== null && _d !== void 0 ? _d : 60000, \"f\");\n        __classPrivateFieldSet(this, _Client_notionVersion, (_e = options === null || options === void 0 ? void 0 : options.notionVersion) !== null && _e !== void 0 ? _e : Client.defaultNotionVersion, \"f\");\n        __classPrivateFieldSet(this, _Client_fetch, (_f = options === null || options === void 0 ? void 0 : options.fetch) !== null && _f !== void 0 ? _f : node_fetch_1.default, \"f\");\n        __classPrivateFieldSet(this, _Client_agent, options === null || options === void 0 ? void 0 : options.agent, \"f\");\n        __classPrivateFieldSet(this, _Client_userAgent, `notionhq-client/${package_json_1.version}`, \"f\");\n    }\n    /**\n     * Sends a request.\n     *\n     * @param path\n     * @param method\n     * @param query\n     * @param body\n     * @returns\n     */\n    async request({ path, method, query, body, auth, }) {\n        this.log(logging_1.LogLevel.INFO, \"request start\", { method, path });\n        // If the body is empty, don't send the body in the HTTP request\n        const bodyAsJsonString = !body || Object.entries(body).length === 0\n            ? undefined\n            : JSON.stringify(body);\n        const url = new URL(`${__classPrivateFieldGet(this, _Client_prefixUrl, \"f\")}${path}`);\n        if (query) {\n            for (const [key, value] of Object.entries(query)) {\n                if (value !== undefined) {\n                    if (Array.isArray(value)) {\n                        value.forEach(val => url.searchParams.append(key, decodeURIComponent(val)));\n                    }\n                    else {\n                        url.searchParams.append(key, String(value));\n                    }\n                }\n            }\n        }\n        // Allow both client ID / client secret based auth as well as token based auth.\n        let authorizationHeader;\n        if (typeof auth === \"object\") {\n            // Client ID and secret based auth is **ONLY** supported when using the\n            // `/oauth/token` endpoint. If this is the case, handle formatting the\n            // authorization header as required by `Basic` auth.\n            const unencodedCredential = `${auth.client_id}:${auth.client_secret}`;\n            const encodedCredential = Buffer.from(unencodedCredential).toString(\"base64\");\n            authorizationHeader = { authorization: `Basic ${encodedCredential}` };\n        }\n        else {\n            // Otherwise format authorization header as `Bearer` token auth.\n            authorizationHeader = this.authAsHeaders(auth);\n        }\n        const headers = {\n            ...authorizationHeader,\n            \"Notion-Version\": __classPrivateFieldGet(this, _Client_notionVersion, \"f\"),\n            \"user-agent\": __classPrivateFieldGet(this, _Client_userAgent, \"f\"),\n        };\n        if (bodyAsJsonString !== undefined) {\n            headers[\"content-type\"] = \"application/json\";\n        }\n        try {\n            const response = await errors_1.RequestTimeoutError.rejectAfterTimeout(__classPrivateFieldGet(this, _Client_fetch, \"f\").call(this, url.toString(), {\n                method: method.toUpperCase(),\n                headers,\n                body: bodyAsJsonString,\n                agent: __classPrivateFieldGet(this, _Client_agent, \"f\"),\n            }), __classPrivateFieldGet(this, _Client_timeoutMs, \"f\"));\n            const responseText = await response.text();\n            if (!response.ok) {\n                throw (0, errors_1.buildRequestError)(response, responseText);\n            }\n            const responseJson = JSON.parse(responseText);\n            this.log(logging_1.LogLevel.INFO, `request success`, { method, path });\n            return responseJson;\n        }\n        catch (error) {\n            if (!(0, errors_1.isNotionClientError)(error)) {\n                throw error;\n            }\n            // Log the error if it's one of our known error types\n            this.log(logging_1.LogLevel.WARN, `request fail`, {\n                code: error.code,\n                message: error.message,\n            });\n            if ((0, errors_1.isHTTPResponseError)(error)) {\n                // The response body may contain sensitive information so it is logged separately at the DEBUG level\n                this.log(logging_1.LogLevel.DEBUG, `failed response body`, {\n                    body: error.body,\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Emits a log message to the console.\n     *\n     * @param level The level for this message\n     * @param args Arguments to send to the console\n     */\n    log(level, message, extraInfo) {\n        if ((0, logging_1.logLevelSeverity)(level) >= (0, logging_1.logLevelSeverity)(__classPrivateFieldGet(this, _Client_logLevel, \"f\"))) {\n            __classPrivateFieldGet(this, _Client_logger, \"f\").call(this, level, message, extraInfo);\n        }\n    }\n    /**\n     * Transforms an API key or access token into a headers object suitable for an HTTP request.\n     *\n     * This method uses the instance's value as the default when the input is undefined. If neither are defined, it returns\n     * an empty object\n     *\n     * @param auth API key or access token\n     * @returns headers key-value object\n     */\n    authAsHeaders(auth) {\n        const headers = {};\n        const authHeaderValue = auth !== null && auth !== void 0 ? auth : __classPrivateFieldGet(this, _Client_auth, \"f\");\n        if (authHeaderValue !== undefined) {\n            headers[\"authorization\"] = `Bearer ${authHeaderValue}`;\n        }\n        return headers;\n    }\n}\nexports.default = Client;\n_Client_auth = new WeakMap(), _Client_logLevel = new WeakMap(), _Client_logger = new WeakMap(), _Client_prefixUrl = new WeakMap(), _Client_timeoutMs = new WeakMap(), _Client_notionVersion = new WeakMap(), _Client_fetch = new WeakMap(), _Client_agent = new WeakMap(), _Client_userAgent = new WeakMap();\nClient.defaultNotionVersion = \"2022-06-28\";\n//# sourceMappingURL=Client.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFullComment = exports.isFullUser = exports.isFullPageOrDatabase = exports.isFullDatabase = exports.isFullPage = exports.isFullBlock = exports.collectPaginatedAPI = exports.iteratePaginatedAPI = void 0;\n/**\n * Returns an async iterator over the results of any paginated Notion API.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * for await (const block of iteratePaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })) {\n *   // Do something with block.\n * }\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function* iteratePaginatedAPI(listFn, firstPageArgs) {\n    let nextCursor = firstPageArgs.start_cursor;\n    do {\n        const response = await listFn({\n            ...firstPageArgs,\n            start_cursor: nextCursor,\n        });\n        yield* response.results;\n        nextCursor = response.next_cursor;\n    } while (nextCursor);\n}\nexports.iteratePaginatedAPI = iteratePaginatedAPI;\n/**\n * Collect all of the results of paginating an API into an in-memory array.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * const blocks = await collectPaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })\n * // Do something with blocks.\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function collectPaginatedAPI(listFn, firstPageArgs) {\n    const results = [];\n    for await (const item of iteratePaginatedAPI(listFn, firstPageArgs)) {\n        results.push(item);\n    }\n    return results;\n}\nexports.collectPaginatedAPI = collectPaginatedAPI;\n/**\n * @returns `true` if `response` is a full `BlockObjectResponse`.\n */\nfunction isFullBlock(response) {\n    return \"type\" in response;\n}\nexports.isFullBlock = isFullBlock;\n/**\n * @returns `true` if `response` is a full `PageObjectResponse`.\n */\nfunction isFullPage(response) {\n    return \"url\" in response;\n}\nexports.isFullPage = isFullPage;\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse`.\n */\nfunction isFullDatabase(response) {\n    return \"title\" in response;\n}\nexports.isFullDatabase = isFullDatabase;\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse` or a full\n * `PageObjectResponse`.\n */\nfunction isFullPageOrDatabase(response) {\n    if (response.object === \"database\") {\n        return isFullDatabase(response);\n    }\n    else {\n        return isFullPage(response);\n    }\n}\nexports.isFullPageOrDatabase = isFullPageOrDatabase;\n/**\n * @returns `true` if `response` is a full `UserObjectResponse`.\n */\nfunction isFullUser(response) {\n    return \"type\" in response;\n}\nexports.isFullUser = isFullUser;\n/**\n * @returns `true` if `response` is a full `CommentObjectResponse`.\n */\nfunction isFullComment(response) {\n    return \"created_by\" in response;\n}\nexports.isFullComment = isFullComment;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFullPageOrDatabase = exports.isFullComment = exports.isFullUser = exports.isFullPage = exports.isFullDatabase = exports.isFullBlock = exports.iteratePaginatedAPI = exports.collectPaginatedAPI = exports.isNotionClientError = exports.RequestTimeoutError = exports.UnknownHTTPResponseError = exports.APIResponseError = exports.ClientErrorCode = exports.APIErrorCode = exports.LogLevel = exports.Client = void 0;\nvar Client_1 = require(\"./Client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return Client_1.default; } });\nvar logging_1 = require(\"./logging\");\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return logging_1.LogLevel; } });\nvar errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"APIErrorCode\", { enumerable: true, get: function () { return errors_1.APIErrorCode; } });\nObject.defineProperty(exports, \"ClientErrorCode\", { enumerable: true, get: function () { return errors_1.ClientErrorCode; } });\nObject.defineProperty(exports, \"APIResponseError\", { enumerable: true, get: function () { return errors_1.APIResponseError; } });\nObject.defineProperty(exports, \"UnknownHTTPResponseError\", { enumerable: true, get: function () { return errors_1.UnknownHTTPResponseError; } });\nObject.defineProperty(exports, \"RequestTimeoutError\", { enumerable: true, get: function () { return errors_1.RequestTimeoutError; } });\n// Error helpers\nObject.defineProperty(exports, \"isNotionClientError\", { enumerable: true, get: function () { return errors_1.isNotionClientError; } });\nvar helpers_1 = require(\"./helpers\");\nObject.defineProperty(exports, \"collectPaginatedAPI\", { enumerable: true, get: function () { return helpers_1.collectPaginatedAPI; } });\nObject.defineProperty(exports, \"iteratePaginatedAPI\", { enumerable: true, get: function () { return helpers_1.iteratePaginatedAPI; } });\nObject.defineProperty(exports, \"isFullBlock\", { enumerable: true, get: function () { return helpers_1.isFullBlock; } });\nObject.defineProperty(exports, \"isFullDatabase\", { enumerable: true, get: function () { return helpers_1.isFullDatabase; } });\nObject.defineProperty(exports, \"isFullPage\", { enumerable: true, get: function () { return helpers_1.isFullPage; } });\nObject.defineProperty(exports, \"isFullUser\", { enumerable: true, get: function () { return helpers_1.isFullUser; } });\nObject.defineProperty(exports, \"isFullComment\", { enumerable: true, get: function () { return helpers_1.isFullComment; } });\nObject.defineProperty(exports, \"isFullPageOrDatabase\", { enumerable: true, get: function () { return helpers_1.isFullPageOrDatabase; } });\n//# sourceMappingURL=index.js.map"],"names":["utils","assertNever","value","pick","base","keys","entries","key","isObject","o","exports","utils_1","require$$0","LogLevel","makeConsoleLogger","name","level","message","extraInfo","logLevelSeverity","APIErrorCode","ClientErrorCode","NotionClientErrorBase","isNotionClientError","error","isNotionClientErrorWithCode","codes","RequestTimeoutError","promise","timeoutMS","resolve","reject","timeoutId","HTTPResponseError","args","code","status","headers","rawBodyText","httpResponseErrorCodes","isHTTPResponseError","UnknownHTTPResponseError","_a","apiErrorCodes","APIResponseError","buildRequestError","response","bodyText","apiErrorResponseBody","parseAPIErrorResponseBody","body","parsed","isAPIErrorCode","apiEndpoints","p","getGlobal","global","globalObject","module","__classPrivateFieldSet","this","receiver","state","kind","f","__classPrivateFieldGet","_Client_auth","_Client_logLevel","_Client_logger","_Client_prefixUrl","_Client_timeoutMs","_Client_notionVersion","_Client_fetch","_Client_agent","_Client_userAgent","Client_1","logging_1","errors_1","require$$1","require$$2","api_endpoints_1","require$$3","node_fetch_1","require$$4","package_json_1","require$$5","Client","options","_b","_c","_d","_e","_f","path","method","query","auth","bodyAsJsonString","url","val","authorizationHeader","unencodedCredential","Buffer","responseText","responseJson","authHeaderValue","helpers","iteratePaginatedAPI","listFn","firstPageArgs","nextCursor","collectPaginatedAPI","results","item","isFullBlock","isFullPage","isFullDatabase","isFullPageOrDatabase","isFullUser","isFullComment","helpers_1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}