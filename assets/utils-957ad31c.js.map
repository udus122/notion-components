{"version":3,"file":"utils-957ad31c.js","sources":["../../src/utils.ts"],"sourcesContent":["import type { DatabaseObject } from \"./types/notion/database.js\";\nimport type { PageObject } from \"./types/notion/pages/page.js\";\nimport type { Properties } from \"./types/notion/pages/properties/properties.js\";\nimport type { TitlePropertyItemObject } from \"./types/notion/pages/properties/title.js\";\nimport type { RichText } from \"./types/notion/richText/richText.js\";\nimport type {\n  DatabaseObjectResponse,\n  PageObjectResponse,\n  RichTextItemResponse,\n} from \"@notionhq/client/build/src/api-endpoints.js\";\n\nexport const splitTitleAndOtherProperties = (\n  properties: Properties | PageObjectResponse[\"properties\"]\n) => {\n  let title: TitlePropertyItemObject | undefined;\n  const other: Properties = {};\n\n  Object.entries(properties).forEach(([key, value]) => {\n    if (isTitleProperty(value)) {\n      title = value;\n    } else {\n      other[key] = value;\n    }\n  });\n\n  return { title, other };\n};\n\nexport const extractTitle = (\n  pageOrDatabase: PageObject | PageObjectResponse | DatabaseObjectResponse\n): RichText | RichTextItemResponse[] => {\n  if (pageOrDatabase.object === \"page\") {\n    const { title } = splitTitleAndOtherProperties(pageOrDatabase.properties);\n    return title?.title ?? [];\n  }\n\n  if (pageOrDatabase.object === \"database\") {\n    return pageOrDatabase.title;\n  }\n\n  return [];\n};\n\nexport const isTitleProperty = (\n  property: PageObjectResponse[\"properties\"][string] | Properties[string]\n): property is TitlePropertyItemObject => property.type === \"title\";\n\nexport const selectPropertyById = <\n  T extends DatabaseObject[\"properties\"] | PageObject[\"properties\"]\n>(\n  properties: T,\n  id: string\n): T | undefined => {\n  const name = Object.keys(properties).find((key) => properties[key].id === id);\n  if (name) {\n    const selected = properties[name];\n    return { [name]: selected } as T;\n  }\n  return;\n};\n\nexport const selectPropertyByName = <\n  T extends DatabaseObject[\"properties\"] | PageObject[\"properties\"]\n>(\n  properties: T,\n  key: string\n): T | undefined => {\n  const selected = properties[key];\n  if (selected) {\n    return { [key]: selected } as T;\n  }\n  return;\n};\n\nexport const selectProperties = <\n  T extends DatabaseObject[\"properties\"] | PageObject[\"properties\"]\n>(\n  properties: T,\n  selector: Array<string>\n): T => {\n  const selected = selector.reduce((prev, keyOrId) => {\n    const selectedByName = selectPropertyByName(properties, keyOrId);\n    if (selectedByName) {\n      return { ...prev, ...selectedByName };\n    }\n\n    const selectedById = selectPropertyById(properties, keyOrId);\n    if (selectedById) {\n      return { ...prev, ...selectedById };\n    }\n\n    return { ...prev };\n  }, {} as T);\n\n  return selected;\n};\n"],"names":["splitTitleAndOtherProperties","properties","title","other","key","value","isTitleProperty","extractTitle","pageOrDatabase","property","selectPropertyById","id","name","selected","selectPropertyByName","selectProperties","selector","prev","keyOrId","selectedByName","selectedById"],"mappings":"AAWa,MAAAA,EACXC,GACG,CACC,IAAAC,EACJ,MAAMC,EAAoB,CAAA,EAEnB,cAAA,QAAQF,CAAU,EAAE,QAAQ,CAAC,CAACG,EAAKC,CAAK,IAAM,CAC/CC,EAAgBD,CAAK,EACfH,EAAAG,EAERF,EAAMC,CAAG,EAAIC,CACf,CACD,EAEM,CAAE,MAAAH,EAAO,MAAAC,EAClB,EAEaI,EACXC,GACsC,CAClC,GAAAA,EAAe,SAAW,OAAQ,CACpC,KAAM,CAAE,MAAAN,CAAU,EAAAF,EAA6BQ,EAAe,UAAU,EACjE,OAAAN,GAAA,YAAAA,EAAO,QAAS,EACzB,CAEI,OAAAM,EAAe,SAAW,WACrBA,EAAe,MAGjB,EACT,EAEaF,EACXG,GACwCA,EAAS,OAAS,QAE/CC,EAAqB,CAGhCT,EACAU,IACkB,CAClB,MAAMC,EAAO,OAAO,KAAKX,CAAU,EAAE,KAAMG,GAAQH,EAAWG,CAAG,EAAE,KAAOO,CAAE,EAC5E,GAAIC,EAAM,CACF,MAAAC,EAAWZ,EAAWW,CAAI,EAChC,MAAO,CAAE,CAACA,CAAI,EAAGC,EACnB,CAEF,EAEaC,EAAuB,CAGlCb,EACAG,IACkB,CACZ,MAAAS,EAAWZ,EAAWG,CAAG,EAC/B,GAAIS,EACF,MAAO,CAAE,CAACT,CAAG,EAAGS,EAGpB,EAEaE,EAAmB,CAG9Bd,EACAe,IAEiBA,EAAS,OAAO,CAACC,EAAMC,IAAY,CAC5C,MAAAC,EAAiBL,EAAqBb,EAAYiB,CAAO,EAC/D,GAAIC,EACF,MAAO,CAAE,GAAGF,EAAM,GAAGE,GAGjB,MAAAC,EAAeV,EAAmBT,EAAYiB,CAAO,EAC3D,OAAIE,EACK,CAAE,GAAGH,EAAM,GAAGG,GAGhB,CAAE,GAAGH,EACd,EAAG,CAAO,CAAA"}