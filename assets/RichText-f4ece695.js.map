{"version":3,"file":"RichText-f4ece695.js","sources":["../../src/components/Mapper/Link.tsx","../../src/components/Mapper/RichText.tsx","../../src/components/RichText/RichText.tsx"],"sourcesContent":["import { type LinkProps } from \"../../types/notion/link.js\";\n\nimport { LinkContext } from \"./hooks.js\";\n\nimport type { FC, ComponentType, ReactNode } from \"react\";\n\nexport const LinkProvider: FC<{\n  link?: ComponentType<LinkProps>;\n  children: ReactNode;\n}> = ({ link, children }) => {\n  if (!link) {\n    return children;\n  }\n\n  return <LinkContext.Provider value={link}>{children}</LinkContext.Provider>;\n};\n","import { RichTextItemContext, useMapper } from \"./hooks.js\";\n\nimport type { RichTextItemMapper } from \"../../types/notion/mapper/richTextItem.js\";\nimport type { FC, ReactNode } from \"react\";\n\nexport const RichTextItemProvider: FC<{\n  mapper?: RichTextItemMapper;\n  children: ReactNode;\n}> = ({ mapper, children }) => {\n  if (!mapper) {\n    return children;\n  }\n\n  const { richTextItemMapper } = useMapper();\n\n  return (\n    <RichTextItemContext.Provider value={{ ...richTextItemMapper, ...mapper }}>\n      {children}\n    </RichTextItemContext.Provider>\n  );\n};\n","import { AnnotationItemProvider } from \"../Mapper/Annotation.js\";\nimport { LinkProvider } from \"../Mapper/Link.js\";\nimport { RichTextItemProvider } from \"../Mapper/RichText.js\";\n\nimport { RichTextItem } from \"./RichTextItem.js\";\n\nimport type { LinkProps } from \"../../types/notion/link.js\";\nimport type { AnnotationItemMapper } from \"../../types/notion/mapper/annotationItem.js\";\nimport type { RichTextItemMapper } from \"../../types/notion/mapper/richTextItem.js\";\nimport type { RichTextItem as RichTextItemType } from \"../../types/notion/richText/richTextItem.js\";\n\ntype Props = {\n  richText: Array<RichTextItemType>;\n  richTextItemMapper?: RichTextItemMapper;\n  annotationMapper?: AnnotationItemMapper;\n  LinkComponent?: React.ComponentType<LinkProps>;\n};\n\nexport const RichText: React.FC<Props> = ({\n  richText,\n  richTextItemMapper,\n  annotationMapper,\n  LinkComponent,\n}) => {\n  if (!richText) return null;\n\n  return (\n    <span className=\"notion-rich-text\">\n      <RichTextItemProvider mapper={richTextItemMapper}>\n        <AnnotationItemProvider mapper={annotationMapper}>\n          <LinkProvider link={LinkComponent}>\n            {richText.map((item, index) => (\n              <RichTextItem\n                key={item?.id ?? `${index}-${item.plain_text}`}\n                richText={item}\n              />\n            ))}\n          </LinkProvider>\n        </AnnotationItemProvider>\n      </RichTextItemProvider>\n    </span>\n  );\n};\n"],"names":["LinkProvider","link","children","jsx","LinkContext","RichTextItemProvider","mapper","richTextItemMapper","useMapper","RichTextItemContext","RichText","richText","annotationMapper","LinkComponent","AnnotationItemProvider","item","index","RichTextItem"],"mappings":"gMAMO,MAAAA,EAAA,CAAA,CAAA,KAAAC,EAAA,SAAAC,KAILD,EAIAE,EAAAA,IAAAC,EAAA,SAAA,CAAA,MAAAH,EAAA,SAAAC,CAAA,CAAA,EAHEA,gTCNG,MAAAG,EAAA,CAAA,CAAA,OAAAC,EAAA,SAAAJ,KAAA,CAIL,GAAA,CAAAI,EACE,OAAAJ,EAGF,KAAA,CAAA,mBAAAK,GAAAC,IAEA,OAAAL,MAAAM,EAAA,SAAA,CAAA,MAAA,CAAA,GAAAF,EAAA,GAAAD,GAAA,SAAAJ,CAAA,CAAA,CAKF,kTCFO,MAAAQ,EAAA,CAAA,CAAmC,SAAAC,EACxC,mBAAAJ,EACA,iBAAAK,EACA,cAAAC,CAEF,IACEF,EAEAR,EAAA,IAAA,OAAA,CAAA,UAAA,mBAAA,SAAAA,MAAAE,EAAA,CAAA,OAAAE,EAAA,SAAAJ,EAAA,IAAAW,EAAA,CAAA,OAAAF,EAAA,SAAAT,MAAAH,EAAA,CAAA,KAAAa,EAAA,SAAAF,EAAA,IAAA,CAAAI,EAAAC,IAAAb,EAAA,IAMYc,EAAC,CAAA,SAAAF,CAEW,GAAAA,GAAA,YAAAA,EAAA,KAAA,GAAAC,CAAA,IAAAD,EAAA,UAAA,EADkC,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAT3C"}