{"version":3,"file":"Breadcrumb-190f95f2.js","sources":["../../src/components/Blocks/Breadcrumb.tsx"],"sourcesContent":["import { Fragment } from \"react\";\n\nimport { extractTitleProperty } from \"../../utils.js\";\nimport { useMapper } from \"../Mapper/hooks.js\";\n\nimport { Icon } from \"./Icon.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { BreadcrumbBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<BreadcrumbBlockObject>;\n\nexport const Breadcrumb: React.FC<Props> = ({ block }) => {\n  const { Link } = useMapper();\n  return (\n    <div id={block.id} className=\"notion_breadcrumb\">\n      {block.breadcrumb.parents.map((pageOrDatabase, index, array) => {\n        return (\n          <Fragment key={pageOrDatabase.id}>\n            <Link href={`/${pageOrDatabase.id}`}>\n              <span className=\"notion_breadcrumb_title\">\n                <Icon icon={pageOrDatabase.icon} />{\" \"}\n                {extractTitleProperty(pageOrDatabase)\n                  ?.map((t) => t.plain_text)\n                  .join(\"\")}\n              </span>\n            </Link>\n            {index !== array.length - 1 && (\n              <span className=\"notion_breadcrumb_separator\">/</span>\n            )}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n};\n"],"names":["Breadcrumb","block","Link","useMapper","jsx","pageOrDatabase","index","array","jsxs","Fragment","Icon","_a","extractTitleProperty","t"],"mappings":"6MAYO,MAAAA,EAAA,CAAA,CAAA,MAAAC,KAAA,CACL,KAAA,CAAA,KAAAC,GAAAC,IACA,OAAAC,EAAAA,IAAA,MAAA,CAAA,GAAAH,EAAA,GAAA,UAAA,oBAAA,SAAAA,EAAA,WAAA,QAAA,IAAA,CAAAI,EAAAC,EAAAC,IAAA,OAGM,OAAAC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEIL,EAAA,IAAAF,EAAA,CAAA,KAAA,IAAAG,EAAA,EAAA,GAAA,SAAAG,EAAA,KAAA,OAAA,CAAA,UAAA,0BAAA,SAAA,CAEIJ,EAAAA,IAAAM,EAAA,CAAA,KAAAL,EAAA,IAAA,CAAA,EAAiC,KAAGM,EAAAC,EAAAP,CAAA,IAAA,YAAAM,EAAA,IAAAE,GAAAA,EAAA,YAAA,KAAA,GAG1B,CAAA,CAAA,CAAA,CAAA,EAEdP,IAAAC,EAAA,OAAA,GAAAH,EAAA,IAAA,OAAA,CAAA,UAAA,8BAAA,SAAA,GAAA,CAAA,CAEiD,GAAAC,EAAA,EAAA,CAEnD,CAAA,CAAA,CAAA,CAKV"}