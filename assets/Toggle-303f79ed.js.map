{"version":3,"file":"Toggle-303f79ed.js","sources":["../../src/components/Mapper/Block.tsx","../../src/components/Blocks/BulletedListItem.tsx","../../src/components/Blocks/BulletedList.tsx","../../src/components/Blocks/Callout.tsx","../../src/components/Blocks/ColumnList.tsx","../../src/components/Blocks/Heading1.tsx","../../src/components/Blocks/Heading2.tsx","../../src/components/Blocks/Heading3.tsx","../../src/components/Blocks/NumberedListItem.tsx","../../src/components/Blocks/NumberedList.tsx","../../src/components/Blocks/Paragraph.tsx","../../src/components/Blocks/Quote.tsx","../../src/components/Blocks/SyncedBlock.tsx","../../src/components/Blocks/ToDo.tsx","../../src/components/Blocks/Unsupported.tsx","../../src/components/Blocks/Block.tsx","../../src/components/Blocks/BlockList.tsx","../../src/components/Blocks/Toggle.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { BlockContext, useMapper } from \"./hooks.js\";\n\nexport const BlockProvider: React.FC<{\n  mapper?: object;\n  children: React.ReactNode;\n}> = ({ mapper, children }) => {\n  if (!mapper) {\n    return children;\n  }\n\n  const { blockMapper } = useMapper();\n\n  return (\n    <BlockContext.Provider value={{ ...blockMapper, ...mapper }}>\n      {children}\n    </BlockContext.Provider>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { BulletedListItemBlockObject } from \"../../types/notion.js\";\nimport type React from \"react\";\n\ntype Props = BlockProps<BulletedListItemBlockObject>;\n\nexport const BulletedListItem: React.FC<Props> = ({ block }) => {\n  return (\n    <li\n      id={block.id}\n      className={`notion_bulleted_list_item notion_color_${block.bulleted_list_item.color}`}\n    >\n      <RichText richText={block.bulleted_list_item.rich_text} />\n      <div>\n        {block.bulleted_list_item.children && (\n          <BlockList blocks={block.bulleted_list_item.children} />\n        )}\n      </div>\n    </li>\n  );\n};\n","import { BulletedListItem } from \"./BulletedListItem.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { BulletedListBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<BulletedListBlockObject>;\n\nexport const BulletedList: React.FC<Props> = ({ block, blocks }) => {\n  return (\n    <ul className=\"notion_bulleted_list\">\n      {block.bulleted_list.items.map((item) => {\n        return <BulletedListItem key={item.id} block={item} blocks={blocks} />;\n      })}\n    </ul>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\nimport { Icon } from \"./Icon.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { CalloutBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<CalloutBlockObject>;\n\nexport const Callout: React.FC<Props> = ({ block }) => {\n  return (\n    <div\n      id={block.id}\n      className={`notion_callout notion_color_${block.callout.color}`}\n    >\n      <span className=\"notion_callout_icon\">\n        <Icon icon={block.callout.icon} />\n      </span>\n      <div className=\"notion_callout_content\">\n        <span>\n          <RichText richText={block.callout.rich_text} />\n        </span>\n        {block.callout.children && (\n          <BlockList blocks={block.callout.children} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ColumnListBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<ColumnListBlockObject>;\n\nexport const ColumnList: React.FC<Props> = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion_column_list\">\n      {block.column_list.columns &&\n        block.column_list.columns.map(\n          (column) =>\n            column.column.children && (\n              <div key={column.id} className=\"notion_column\">\n                <BlockList blocks={column.column.children} />\n              </div>\n            )\n        )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { Heading1BlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<Heading1BlockObject>;\n\nexport const Heading1: React.FC<Props> = ({ block }) => {\n  return (\n    <>\n      {block.heading_1.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion_heading notion_heading_1 notion_toggle notion_color_${block.heading_1.color}`}\n        >\n          <summary className=\"notion_toggle_summary\">\n            <h1>\n              <RichText richText={block.heading_1.rich_text} />\n            </h1>\n          </summary>\n          <div className=\"notion_toggle_details\">\n            {block.heading_1.children && (\n              <BlockList blocks={block.heading_1.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion_heading notion_heading_1 notion_color_${block.heading_1.color}`}\n        >\n          <RichText richText={block.heading_1.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { Heading2BlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<Heading2BlockObject>;\n\nexport const Heading2: React.FC<Props> = ({ block }) => {\n  return (\n    <>\n      {block.heading_2.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion_heading notion_heading_2 notion_toggle notion_color_${block.heading_2.color}`}\n        >\n          <summary className=\"notion_toggle_summary\">\n            <h2>\n              <RichText richText={block.heading_2.rich_text} />\n            </h2>\n          </summary>\n          <div className=\"notion_toggle_details\">\n            {block.heading_2.children && (\n              <BlockList blocks={block.heading_2.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion_heading notion_heading_2 notion_color_${block.heading_2.color}`}\n        >\n          <RichText richText={block.heading_2.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { Heading3BlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<Heading3BlockObject>;\n\nexport const Heading3: React.FC<Props> = ({ block }) => {\n  return (\n    <>\n      {block.heading_3.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion_heading notion_heading_3 notion_toggle notion_color_${block.heading_3.color}`}\n        >\n          <summary className=\"notion_toggle_summary\">\n            <h3>\n              <RichText richText={block.heading_3.rich_text} />\n            </h3>\n          </summary>\n          <div className=\"notion_toggle_details\">\n            {block.heading_3.children && (\n              <BlockList blocks={block.heading_3.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion_heading notion_heading_3 notion_color_${block.heading_3.color}`}\n        >\n          <RichText richText={block.heading_3.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { NumberedListItemBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<NumberedListItemBlockObject>;\n\nexport const NumberedListItem: React.FC<Props> = ({ block }) => {\n  return (\n    <li\n      id={block.id}\n      className={`notion_numbered_list_item notion_color_${block.numbered_list_item.color}`}\n    >\n      <RichText richText={block.numbered_list_item.rich_text} />\n      <div>\n        {block.numbered_list_item.children && (\n          <BlockList blocks={block.numbered_list_item.children} />\n        )}\n      </div>\n    </li>\n  );\n};\n","import { NumberedListItem } from \"./NumberedListItem.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { NumberedListBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<NumberedListBlockObject>;\n\nexport const NumberedList: React.FC<Props> = ({ block, blocks }) => {\n  return (\n    <ol className=\"notion_numbered_list\">\n      {block.numbered_list.items.map((item) => {\n        return <NumberedListItem key={item.id} block={item} blocks={blocks} />;\n      })}\n    </ol>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ParagraphBlockObject } from \"../../types/notion.js\";\nimport type React from \"react\";\n\ntype Props = BlockProps<ParagraphBlockObject>;\n\nexport const Paragraph: React.FC<Props> = ({ block }) => {\n  return (\n    <div\n      id={block.id}\n      className={`notion_paragraph notion_color_${block.paragraph.color}`}\n    >\n      <p>\n        <RichText richText={block.paragraph.rich_text} />\n      </p>\n      {block.paragraph.children && (\n        <div className={\"notion_paragraph_children\"}>\n          <BlockList blocks={block.paragraph.children} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { QuoteBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<QuoteBlockObject>;\n\nexport const Quote: React.FC<Props> = ({ block }) => {\n  return (\n    <blockquote\n      id={block.id}\n      className={`notion_quote notion_color_${block.quote.color}`}\n    >\n      <RichText richText={block.quote.rich_text} />\n      {block.quote.children && (\n        <div className={\"notion_quote_children\"}>\n          <BlockList blocks={block.quote.children} />\n        </div>\n      )}\n    </blockquote>\n  );\n};\n","import { Block, type BlockProps } from \"./Block.js\";\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { SyncedBlockBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<SyncedBlockBlockObject>;\n\nexport const SyncedBlock: React.FC<Props> = ({ block, blocks }) => {\n  return (\n    <div className=\"notion_synced_block\">\n      {block.synced_block.synced_from === null\n        ? block.synced_block.children && (\n            <div className={\"notion_synced_block_original\"}>\n              <BlockList blocks={block.synced_block.children} />\n            </div>\n          )\n        : block.synced_block.synced_from.block && (\n            <div className={\"notion_synced_block_duplicated\"}>\n              <Block\n                block={block.synced_block.synced_from.block}\n                blocks={blocks}\n              />\n            </div>\n          )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ToDoBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<ToDoBlockObject>;\n\nexport const ToDo: React.FC<Props> = ({ block }) => {\n  const isChecked = block.to_do.checked;\n  return (\n    <div\n      id={block.id}\n      className={`notion_to_do notion_color_${block.to_do.color}`}\n    >\n      <div className=\"notion_to_do_content\">\n        <span className=\"notion_to_do_icon\">\n          {isChecked ? <CheckedBox /> : <CheckBox />}\n        </span>\n        <span className={`notion_to_do_text ${isChecked ? \"checked\" : \"\"}`}>\n          <RichText richText={block.to_do.rich_text} />\n        </span>\n      </div>\n      {block.to_do.children && (\n        <div className=\"notion_to_do_children\">\n          <BlockList blocks={block.to_do.children} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst CheckBox = () => (\n  <span className=\"notion_checkbox\">\n    <svg viewBox=\"0 0 16 16\">\n      <path d=\"M1.5,1.5 L1.5,14.5 L14.5,14.5 L14.5,1.5 L1.5,1.5 Z M0,0 L16,0 L16,16 L0,16 L0,0 Z\"></path>\n    </svg>\n  </span>\n);\n\nconst CheckedBox = () => (\n  <span className=\"notion_checkbox checked\">\n    <svg viewBox=\"0 0 14 14\">\n      <polygon points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"></polygon>\n    </svg>\n  </span>\n);\n","import type { BlockProps } from \"./Block.js\";\nimport type { BlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<BlockObject>;\n\nexport const Unsupported: React.FC<Props> = ({ block }) => {\n  console.warn(`${block.type} is not supported`);\n  return null;\n};\n","import { Audio } from \"../Blocks/Audio.js\";\nimport { Bookmark } from \"../Blocks/Bookmark.js\";\nimport { Breadcrumb } from \"../Blocks/Breadcrumb.js\";\nimport { BulletedList } from \"../Blocks/BulletedList.js\";\nimport { BulletedListItem } from \"../Blocks/BulletedListItem.js\";\nimport { Callout } from \"../Blocks/Callout.js\";\nimport { ChildDatabase } from \"../Blocks/ChildDatabase.js\";\nimport { ChildPage } from \"../Blocks/ChildPage.js\";\nimport { Code } from \"../Blocks/Code.js\";\nimport { ColumnList } from \"../Blocks/ColumnList.js\";\nimport { Divider } from \"../Blocks/Divider.js\";\nimport { Embed } from \"../Blocks/Embed.js\";\nimport { Equation } from \"../Blocks/Equation.js\";\nimport { File } from \"../Blocks/File.js\";\nimport { Heading1 } from \"../Blocks/Heading1.js\";\nimport { Heading2 } from \"../Blocks/Heading2.js\";\nimport { Heading3 } from \"../Blocks/Heading3.js\";\nimport { Image } from \"../Blocks/Image.js\";\nimport { LinkPreview } from \"../Blocks/LinkPreview.js\";\nimport { LinkToPage } from \"../Blocks/LinkToPage.js\";\nimport { NumberedList } from \"../Blocks/NumberedList.js\";\nimport { NumberedListItem } from \"../Blocks/NumberedListItem.js\";\nimport { Paragraph } from \"../Blocks/Paragraph.js\";\nimport { Pdf } from \"../Blocks/Pdf.js\";\nimport { Quote } from \"../Blocks/Quote.js\";\nimport { SyncedBlock } from \"../Blocks/SyncedBlock.js\";\nimport { Table } from \"../Blocks/Table.js\";\nimport { TableOfContents } from \"../Blocks/TableOfContents.js\";\nimport { ToDo } from \"../Blocks/ToDo.js\";\nimport { Toggle } from \"../Blocks/Toggle.js\";\nimport { Unsupported } from \"../Blocks/Unsupported.js\";\nimport { Video } from \"../Blocks/Video.js\";\nimport { useMapper } from \"../Mapper/hooks.js\";\n\nimport type {\n  BlockObject,\n  Heading1BlockObject,\n  Heading2BlockObject,\n  Heading3BlockObject,\n  ToggleBlockObject,\n} from \"../../types/notion.js\";\n\nexport type BlockProps<T extends BlockObject> = {\n  block: T;\n  blocks: Array<BlockObject>;\n};\n\nexport type TogglableBlockObjectComponent =\n  | ToggleBlockObject\n  | Heading1BlockObject\n  | Heading2BlockObject\n  | Heading3BlockObject;\n\ntype Props = BlockProps<BlockObject>;\n\nexport const Block: React.FC<Props> = ({ block, blocks = [] }) => {\n  return (\n    <div className=\"notion_block\">\n      <BlockComponent block={block} blocks={blocks} />\n    </div>\n  );\n};\n\nconst BlockComponent: React.FC<Props> = ({ block, blocks }) => {\n  const { blockMapper } = useMapper();\n\n  const mapper = {\n    audio: Audio,\n    bookmark: Bookmark,\n    breadcrumb: Breadcrumb,\n    bulleted_list: BulletedList,\n    bulleted_list_item: BulletedListItem,\n    callout: Callout,\n    child_database: ChildDatabase,\n    child_page: ChildPage,\n    code: Code,\n    column: Unsupported,\n    column_list: ColumnList,\n    divider: Divider,\n    embed: Embed,\n    equation: Equation,\n    file: File,\n    heading_1: Heading1,\n    heading_2: Heading2,\n    heading_3: Heading3,\n    image: Image,\n    link_preview: LinkPreview,\n    link_to_page: LinkToPage,\n    numbered_list: NumberedList,\n    numbered_list_item: NumberedListItem,\n    paragraph: Paragraph,\n    pdf: Pdf,\n    quote: Quote,\n    synced_block: SyncedBlock,\n    table: Table,\n    table_of_contents: TableOfContents,\n    table_row: Unsupported,\n    template: Unsupported,\n    to_do: ToDo,\n    toggle: Toggle,\n    unsupported: Unsupported,\n    video: Video,\n    ...blockMapper,\n  };\n\n  switch (block.type) {\n    case \"audio\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"bookmark\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"breadcrumb\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"bulleted_list\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"bulleted_list_item\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"callout\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"child_database\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"child_page\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"code\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"column\": {\n      console.warn(\n        `top level column block is not supported. column block must be child of column_list block.`\n      );\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"column_list\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"divider\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"embed\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"equation\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"file\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"heading_1\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"heading_2\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"heading_3\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"image\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"link_preview\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"link_to_page\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"numbered_list\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"numbered_list_item\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"paragraph\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"pdf\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"quote\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"synced_block\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"table\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"table_of_contents\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"table_row\": {\n      console.warn(\n        `top level table_row block is not supported. table_row block must be child of table block.`\n      );\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"template\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"to_do\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"toggle\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"unsupported\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"video\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    default: {\n      // @ts-expect-error: to log when an unexpected 'block.type' is encountered, which is not in the type.\n      console.warn(`${block.type as { type: never }} is never.`);\n      return null;\n    }\n  }\n};\n","import React from \"react\";\n\nimport { type LinkProps } from \"../Link.js\";\nimport { AnnotationProvider } from \"../Mapper/Annotation.js\";\nimport { BlockProvider } from \"../Mapper/Block.js\";\nimport { LinkProvider } from \"../Mapper/Link.js\";\nimport { RichTextItemProvider } from \"../Mapper/RichText.js\";\n\nimport { Block } from \"./Block.js\";\n\nimport type { BlockObject } from \"../../types/notion.js\";\n\ntype Props = {\n  blocks: Array<BlockObject>;\n  blockMapper?: object;\n  richTextItemMapper?: object;\n  annotationMapper?: object;\n  LinkComponent?: React.ComponentType<LinkProps>;\n};\n\nexport const BlockList: React.FC<Props> = function ({\n  blocks,\n  blockMapper,\n  richTextItemMapper,\n  annotationMapper,\n  LinkComponent,\n}) {\n  return (\n    <div className=\"notion_block_list\">\n      <BlockProvider mapper={blockMapper}>\n        <RichTextItemProvider mapper={richTextItemMapper}>\n          <AnnotationProvider mapper={annotationMapper}>\n            <LinkProvider link={LinkComponent}>\n              {blocks.map((block) => {\n                return <Block key={block.id} block={block} blocks={blocks} />;\n              })}\n            </LinkProvider>\n          </AnnotationProvider>\n        </RichTextItemProvider>\n      </BlockProvider>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ToggleBlockObject } from \"../../types/notion.js\";\n\ntype Props = BlockProps<ToggleBlockObject>;\n\nexport const Toggle: React.FC<Props> = ({ block }) => {\n  return (\n    <details\n      id={block.id}\n      className={`notion_toggle notion_color_${block.toggle.color}`}\n    >\n      <summary className=\"notion_toggle_summary\">\n        <RichText richText={block.toggle.rich_text} />\n      </summary>\n      <div className=\"notion_toggle_details\">\n        {block.toggle.children && <BlockList blocks={block.toggle.children} />}\n      </div>\n    </details>\n  );\n};\n"],"names":["BlockProvider","mapper","children","blockMapper","useMapper","jsx","BlockContext","BulletedListItem","block","jsxs","RichText","BlockList","BulletedList","blocks","item","Callout","Icon","ColumnList","column","Heading1","Fragment","Heading2","Heading3","NumberedListItem","NumberedList","Paragraph","Quote","SyncedBlock","Block","ToDo","isChecked","CheckedBox","CheckBox","Unsupported","BlockComponent","Audio","Bookmark","Breadcrumb","ChildDatabase","ChildPage","Code","Divider","Embed","Equation","File","Image","LinkPreview","LinkToPage","Pdf","Table","TableOfContents","Toggle","Video","BlockComponent2","richTextItemMapper","annotationMapper","LinkComponent","RichTextItemProvider","AnnotationProvider","LinkProvider"],"mappings":"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"}