{"version":3,"file":"RichTextItem-c2df46cf.js","sources":["../../src/components/Mapper/Link.tsx","../../src/components/Mapper/RichText.tsx","../../src/components/RichText/RichText.tsx","../../src/components/Blocks/Audio.tsx","../../src/components/Mapper/Block.tsx","../../src/components/Blocks/Bookmark.tsx","../../src/utils.ts","../../src/components/Blocks/Breadcrumb.tsx","../../src/components/Blocks/BlockList.tsx","../../src/components/Blocks/BulletedListItem.tsx","../../src/components/Blocks/BulletedList.tsx","../../src/components/Blocks/Callout.tsx","../../src/components/Blocks/Code.tsx","../../src/components/Blocks/Column.tsx","../../src/components/Blocks/ColumnList.tsx","../../src/components/Blocks/Embed.tsx","../../src/components/Blocks/File.tsx","../../src/components/Blocks/Heading1.tsx","../../src/components/Blocks/Heading2.tsx","../../src/components/Blocks/Heading3.tsx","../../src/components/Blocks/Image.tsx","../../src/components/Blocks/LinkToPage.tsx","../../src/components/Blocks/NumberedListItem.tsx","../../src/components/Blocks/NumberedList.tsx","../../src/components/Blocks/Paragraph.tsx","../../src/components/Blocks/Pdf.tsx","../../src/components/Blocks/Quote.tsx","../../src/components/Blocks/SyncedBlock.tsx","../../src/components/Blocks/Table.tsx","../../src/components/Blocks/TableRow.tsx","../../src/components/Blocks/Template.tsx","../../src/components/Blocks/ToDo.tsx","../../src/components/Blocks/Toggle.tsx","../../src/components/Blocks/Unsupported.tsx","../../src/components/Blocks/Video.tsx","../../src/components/Blocks/Block.tsx","../../src/components/Blocks/Renderer.tsx","../../src/components/Common/Title.tsx","../../src/components/Mapper/Property.tsx","../../src/components/Common/RelationItem.tsx","../../src/components/Property/Relation.tsx","../../src/components/Property/RichText.tsx","../../src/components/Property/Title.tsx","../../src/components/Property/PropertyItem.tsx","../../src/components/Property/PropertyIcon.tsx","../../src/components/Property/PropertyName.tsx","../../src/components/Property/Property.tsx","../../src/components/Property/Properties.tsx","../../src/components/Database/Gallery/Card.tsx","../../src/components/Database/Gallery/Gallery.tsx","../../src/components/Database/List/ListItem.tsx","../../src/components/Database/List/List.tsx","../../src/components/Database/Table/Header.tsx","../../src/components/Database/Table/Title.tsx","../../src/components/Database/Table/Row.tsx","../../src/components/Database/Table/Table.tsx","../../src/components/Database/Database.tsx","../../src/components/Page/PageMeta.tsx","../../src/components/Page/Page.tsx","../../src/components/RichText/Mention.tsx","../../src/components/RichText/RichTextItem.tsx"],"sourcesContent":["import { type LinkProps } from \"../../types/notion/common/link.js\";\n\nimport { LinkContext } from \"../hooks.js\";\n\nimport type { FC, ComponentType, ReactNode } from \"react\";\n\nexport const LinkProvider: FC<{\n  link?: ComponentType<LinkProps>;\n  children: ReactNode;\n}> = ({ link, children }) => {\n  if (!link) {\n    return children;\n  }\n\n  return <LinkContext.Provider value={link}>{children}</LinkContext.Provider>;\n};\n","import { RichTextItemContext, useMapper } from \"../hooks.js\";\n\nimport type { RichTextItemMapper } from \"../../types/notion/mapper/richTextItem.js\";\nimport type { FC, ReactNode } from \"react\";\n\nexport const RichTextItemProvider: FC<{\n  mapper?: RichTextItemMapper;\n  children: ReactNode;\n}> = ({ mapper, children }) => {\n  if (!mapper) {\n    return children;\n  }\n\n  const { richTextItemMapper } = useMapper();\n\n  return (\n    <RichTextItemContext.Provider value={{ ...richTextItemMapper, ...mapper }}>\n      {children}\n    </RichTextItemContext.Provider>\n  );\n};\n","import { AnnotationItemProvider } from \"../Mapper/Annotation.js\";\nimport { LinkProvider } from \"../Mapper/Link.js\";\nimport { RichTextItemProvider } from \"../Mapper/RichText.js\";\n\nimport { RichTextItem } from \"./RichTextItem.js\";\n\nimport type { RichTextComponent } from \"../../types/notion/richText/richText.js\";\n\nexport const RichText: RichTextComponent = ({\n  richText,\n  richTextItemMapper,\n  annotationMapper,\n  LinkComponent,\n}) => {\n  if (!richText) return null;\n\n  return (\n    <span className=\"notion-rich-text\">\n      <RichTextItemProvider mapper={richTextItemMapper}>\n        <AnnotationItemProvider mapper={annotationMapper}>\n          <LinkProvider link={LinkComponent}>\n            {richText.map((item, index) => (\n              <RichTextItem\n                key={item?.id ?? `${index}-${item.plain_text}`}\n                richText={item}\n              />\n            ))}\n          </LinkProvider>\n        </AnnotationItemProvider>\n      </RichTextItemProvider>\n    </span>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { AudioBlock } from \"../../types/notion/blocks/audio.js\";\n\nexport const Audio: AudioBlock = ({ block }) => {\n  const audioUrl =\n    block.audio.type == \"external\"\n      ? block.audio.external.url\n      : block.audio.type == \"file\"\n      ? block.audio.file.url\n      : \"\";\n  return (\n    <div id={block.id} className=\"notion-block notion-audio\">\n      <audio controls src={audioUrl}>\n        Your browser does not support HTML5 audios. You can download audio file\n        <a href={audioUrl}>here</a>.\n      </audio>\n      <div className=\"notion-caption notion-audio-caption\">\n        <RichText richText={block.audio.caption} />\n      </div>\n    </div>\n  );\n};\n","import { BlockContext, useMapper } from \"../hooks.js\";\n\nimport type { BlockMapper } from \"../../types/notion/mapper/block.js\";\nimport type { FC, ReactNode } from \"react\";\n\nexport const BlockProvider: FC<{\n  mapper?: BlockMapper;\n  children: ReactNode;\n}> = ({ mapper, children }) => {\n  if (!mapper) {\n    return children;\n  }\n\n  const { blockMapper } = useMapper();\n\n  return (\n    <BlockContext.Provider value={{ ...blockMapper, ...mapper }}>\n      {children}\n    </BlockContext.Provider>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { BookmarkBlock } from \"../../types/notion/blocks/bookmark.js\";\n\nexport const Bookmark: BookmarkBlock = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion-block notion-bookmark\">\n      <a href={block.bookmark.url} target=\"_blank\">\n        <div className=\"notion-bookmark-container\">\n          <div className=\"notion-bookmark-content\">\n            <div className=\"notion-bookmark-title\">\n              {block.bookmark?.site_meta?.title\n                ? block.bookmark.site_meta.title\n                : block.bookmark.url}\n            </div>\n            <div className=\"notion-bookmark-description\">\n              {block.bookmark?.site_meta?.description\n                ? block.bookmark.site_meta.description\n                : block.bookmark.url}\n            </div>\n            <div className=\"notion-bookmark-url\">\n              <span className=\"notion-bookmark-favicon\">\n                <img\n                  src={\n                    block.bookmark?.site_meta?.favicon\n                      ? block.bookmark.site_meta?.favicon\n                      : `https://www.google.com/s2/favicons?domain=${block.bookmark.url}`\n                  }\n                  alt=\"bookmark favicon\"\n                />\n              </span>\n              <span className=\"notion-bookmark-link-url\">\n                {block.bookmark.url}\n              </span>\n            </div>\n          </div>\n          {block.bookmark?.site_meta?.image && (\n            <div className=\"notion-bookmark-cover\">\n              <img\n                src={block.bookmark.site_meta.image}\n                alt=\"bookmark og image\"\n              />\n            </div>\n          )}\n        </div>\n      </a>\n      <div className=\"notion-caption notion-bookmark-caption\">\n        <RichText richText={block.bookmark.caption} />\n      </div>\n    </div>\n  );\n};\n","import type { DatabaseObject } from \"./types/notion/database.js\";\nimport type { PageObject } from \"./types/notion/pages/page.js\";\nimport type { Properties } from \"./types/notion/pages/properties/properties.js\";\nimport type { TitlePropertyItemObject } from \"./types/notion/pages/properties/title.js\";\nimport type { RichText } from \"./types/notion/richText/richText.js\";\nimport type {\n  DatabaseObjectResponse,\n  PageObjectResponse,\n  RichTextItemResponse,\n} from \"@notionhq/client/build/src/api-endpoints.js\";\n\nexport const splitTitleAndOtherProperties = (\n  properties: Properties | PageObjectResponse[\"properties\"]\n) => {\n  let title: TitlePropertyItemObject | undefined;\n  const other: Properties = {};\n\n  Object.entries(properties).forEach(([key, value]) => {\n    if (isTitleProperty(value)) {\n      title = value;\n    } else {\n      other[key] = value;\n    }\n  });\n\n  return { title, other };\n};\n\nexport const extractTitle = (\n  pageOrDatabase: PageObject | PageObjectResponse | DatabaseObjectResponse\n): RichText | RichTextItemResponse[] => {\n  if (pageOrDatabase.object === \"page\") {\n    const { title } = splitTitleAndOtherProperties(pageOrDatabase.properties);\n    return title?.title ?? [];\n  }\n\n  if (pageOrDatabase.object === \"database\") {\n    return pageOrDatabase.title;\n  }\n\n  return [];\n};\n\nexport const isTitleProperty = (\n  property: PageObjectResponse[\"properties\"][string] | Properties[string]\n): property is TitlePropertyItemObject => property.type === \"title\";\n\nexport const selectPropertyById = <\n  T extends DatabaseObject[\"properties\"] | PageObject[\"properties\"]\n>(\n  properties: T,\n  id: string\n): T | undefined => {\n  const name = Object.keys(properties).find((key) => properties[key].id === id);\n  if (name) {\n    const selected = properties[name];\n    return { [name]: selected } as T;\n  }\n  return;\n};\n\nexport const selectPropertyByName = <\n  T extends DatabaseObject[\"properties\"] | PageObject[\"properties\"]\n>(\n  properties: T,\n  key: string\n): T | undefined => {\n  const selected = properties[key];\n  if (selected) {\n    return { [key]: selected } as T;\n  }\n  return;\n};\n\nexport const selectProperties = <\n  T extends DatabaseObject[\"properties\"] | PageObject[\"properties\"]\n>(\n  properties: T,\n  selector: Array<string>\n): T => {\n  const selected = selector.reduce((prev, keyOrId) => {\n    const selectedByName = selectPropertyByName(properties, keyOrId);\n    if (selectedByName) {\n      return { ...prev, ...selectedByName };\n    }\n\n    const selectedById = selectPropertyById(properties, keyOrId);\n    if (selectedById) {\n      return { ...prev, ...selectedById };\n    }\n\n    return { ...prev };\n  }, {} as T);\n\n  return selected;\n};\n","import { Fragment } from \"react\";\n\nimport { extractTitle } from \"../../utils.js\";\nimport { Icon } from \"../Common/Icon.js\";\nimport { useMapper } from \"../hooks.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport type { BreadcrumbBlock } from \"../../types/notion/blocks/breadcrumb.js\";\n\nexport const Breadcrumb: BreadcrumbBlock = ({ block }) => {\n  const { Link } = useMapper();\n\n  return (\n    <div id={block.id} className=\"notion-block notion-breadcrumb\">\n      {block.breadcrumb.parents.map((pageOrDatabase, index, array) => {\n        const titleRichText = extractTitle(pageOrDatabase);\n        return (\n          <Fragment key={pageOrDatabase.id}>\n            <Link prefix=\"/\" link={pageOrDatabase.id}>\n              <span className=\"notion-breadcrumb-title\">\n                <Icon icon={pageOrDatabase.icon} />{\" \"}\n                <RichText richText={titleRichText} />\n              </span>\n            </Link>\n            {index !== array.length - 1 && (\n              <span className=\"notion-breadcrumb-separator\">/</span>\n            )}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n};\n","import { BlocksContext } from \"../hooks.js\";\n\nimport { Block } from \"./Block.js\";\n\nimport type { BlockBlockObject } from \"../../types/notion/blocks/block.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  blocks: Array<BlockBlockObject>;\n};\n\nexport const BlockList: FC<Props> = ({ blocks }) => {\n  return (\n    <div className=\"notion-block-list\">\n      <BlocksContext.Provider value={blocks}>\n        {blocks.map((block) => {\n          return (\n            block !== null && (\n              <Block key={block ? block.id : null} block={block} />\n            )\n          );\n        })}\n      </BlocksContext.Provider>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BulletedListItemBlock } from \"../../types/notion/blocks/bulletedListItem.js\";\n\nexport const BulletedListItem: BulletedListItemBlock = ({ block }) => {\n  return (\n    <li\n      id={block.id}\n      className={`notion-block notion-bulleted-list-item notion-color-${block.bulleted_list_item.color}`}\n    >\n      <RichText richText={block.bulleted_list_item.rich_text} />\n      <div>\n        {block.bulleted_list_item.children && (\n          <BlockList blocks={block.bulleted_list_item.children} />\n        )}\n      </div>\n    </li>\n  );\n};\n","import { BulletedListItem } from \"./BulletedListItem.js\";\n\nimport type { BulletedListBlock } from \"../../types/notion/blocks/bulletedList.js\";\n\nexport const BulletedList: BulletedListBlock = ({ block }) => {\n  return (\n    <ul className=\"notion-bulleted-list\">\n      {block.bulleted_list.items.map((item) => {\n        return <BulletedListItem key={item.id} block={item} />;\n      })}\n    </ul>\n  );\n};\n","import { Icon } from \"../Common/Icon.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { CalloutBlock } from \"../../types/notion/blocks/callout.js\";\n\nexport const Callout: CalloutBlock = ({ block }) => {\n  return (\n    <div\n      id={block.id}\n      className={`notion-block notion-callout notion-color-${block.callout.color}`}\n    >\n      <span className=\"notion-callout-icon\">\n        <Icon icon={block.callout.icon} />\n      </span>\n      <div className=\"notion-callout-content\">\n        <span>\n          <RichText richText={block.callout.rich_text} />\n        </span>\n        {block.callout.children && (\n          <BlockList blocks={block.callout.children} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { CodeBlock } from \"../../types/notion/blocks/code.js\";\n\nexport const Code: CodeBlock = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion-block notion-code\">\n      <div className=\"notion-code-header\">\n        <div className=\"notion-code-langage\">{block.code.language}</div>\n      </div>\n      <pre className=\"notion-code-body\">\n        <code>\n          <RichText richText={block.code.rich_text} />\n        </code>\n      </pre>\n      {block.code.caption && (\n        <div className=\"notion-caption notion-code-caption\">\n          <RichText richText={block.code.caption} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import type { ColumnBlock } from \"../../types/notion/blocks/column.js\";\n\nexport const Column: ColumnBlock = ({ block }) => {\n  console.warn(`${block.type} is not supported`);\n  return null;\n};\n","import { BlockList } from \"./BlockList.js\";\n\nimport type { ColumnListBlock } from \"../../types/notion/blocks/columnList.js\";\n\nexport const ColumnList: ColumnListBlock = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion-block notion-column-list\">\n      {block.column_list.columns &&\n        block.column_list.columns.map(\n          (column) =>\n            column.column.children && (\n              <div key={column.id} className=\"notion-column\">\n                <BlockList blocks={column.column.children} />\n              </div>\n            )\n        )}\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\n\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport type { EmbedBlock } from \"../../types/notion/blocks/embed.js\";\n\nexport const Embed: EmbedBlock = ({ block }) => {\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://platform.twitter.com/widgets.js\";\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n  if (block.embed.oembed) {\n    return (\n      <div\n        className=\"notion-block notion-embed\"\n        dangerouslySetInnerHTML={{\n          __html:\n            block.embed.oembed.type === \"rich\" ? block.embed.oembed.html : \"\",\n        }}\n      />\n    );\n  }\n\n  return (\n    <div id={block.id} className=\"notion-block notion-embed\">\n      <iframe src={block.embed.url} title=\"notion embed content\" />\n      <div className=\"notion-caption notion-embed-caption\">\n        <RichText richText={block.embed.caption} />\n      </div>\n    </div>\n  );\n};\n","import { File as FileComponent } from \"../Common/File.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport type { FileBlock } from \"../../types/notion/blocks/file.js\";\n\nexport const File: FileBlock = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion-file-block\">\n      <FileComponent file={block.file} />\n      <div className=\"notion-caption notion-file-caption\">\n        <RichText richText={block.file.caption} />\n      </div>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { Heading1Block } from \"../../types/notion/blocks/heading1.js\";\n\nexport const Heading1: Heading1Block = ({ block }) => {\n  return (\n    <>\n      {block.heading_1.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion-block notion-heading notion-heading-1 notion-toggle notion-color-${block.heading_1.color}`}\n        >\n          <summary className=\"notion-toggle-summary\">\n            <h1>\n              <RichText richText={block.heading_1.rich_text} />\n            </h1>\n          </summary>\n          <div className=\"notion-toggle-details\">\n            {block.heading_1.children && (\n              <BlockList blocks={block.heading_1.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion-block notion-heading notion-heading-1 notion-color-${block.heading_1.color}`}\n        >\n          <RichText richText={block.heading_1.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { Heading2Block } from \"../../types/notion/blocks/heading2.js\";\n\nexport const Heading2: Heading2Block = ({ block }) => {\n  return (\n    <>\n      {block.heading_2.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion-block notion-heading notion-heading-2 notion-toggle notion-color-${block.heading_2.color}`}\n        >\n          <summary className=\"notion-toggle-summary\">\n            <h2>\n              <RichText richText={block.heading_2.rich_text} />\n            </h2>\n          </summary>\n          <div className=\"notion-toggle-details\">\n            {block.heading_2.children && (\n              <BlockList blocks={block.heading_2.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion-block notion-heading notion-heading-2 notion-color-${block.heading_2.color}`}\n        >\n          <RichText richText={block.heading_2.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { Heading3Block } from \"../../types/notion/blocks/heading3.js\";\n\nexport const Heading3: Heading3Block = ({ block }) => {\n  return (\n    <>\n      {block.heading_3.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion-block notion-heading notion-heading-3 notion-toggle notion-color-${block.heading_3.color}`}\n        >\n          <summary className=\"notion-toggle-summary\">\n            <h3>\n              <RichText richText={block.heading_3.rich_text} />\n            </h3>\n          </summary>\n          <div className=\"notion-toggle-details\">\n            {block.heading_3.children && (\n              <BlockList blocks={block.heading_3.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion-block notion-heading notion-heading-3 notion-color-${block.heading_3.color}`}\n        >\n          <RichText richText={block.heading_3.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { ImageBlock } from \"../../types/notion/blocks/image.js\";\n\nexport const Image: ImageBlock = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion-block notion-image\">\n      <img\n        src={\n          block.image.type == \"external\"\n            ? block.image.external.url\n            : block.image.type == \"file\"\n            ? block.image.file.url\n            : \"\"\n        }\n        alt={block.image.caption.map((b) => b.plain_text).join(\"\")}\n      />\n      <div className=\"notion-caption notion-image-caption\">\n        <RichText richText={block.image.caption} />\n      </div>\n    </div>\n  );\n};\n","import { extractTitle } from \"../../utils.js\";\nimport { Icon } from \"../Common/Icon.js\";\nimport { useMapper } from \"../hooks.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport type { LinkToPageBlock } from \"../../types/notion/blocks/linkToPage.js\";\n\nexport const LinkToPage: LinkToPageBlock = ({ block }) => {\n  const { Link } = useMapper();\n\n  if (block.link_to_page.type === \"comment_id\" && block.link_to_page.comments) {\n    console.warn(\"comment type link_to_page block is not supported yet.\");\n  }\n\n  const icon =\n    block.link_to_page.type === \"page_id\" && block.link_to_page.page\n      ? block.link_to_page.page.icon\n      : block.link_to_page.type === \"database_id\" && block.link_to_page.database\n      ? block.link_to_page.database.icon\n      : null;\n\n  const titleRichText =\n    block.link_to_page.type === \"page_id\" && block.link_to_page.page\n      ? extractTitle(block.link_to_page.page)\n      : block.link_to_page.type === \"database_id\" && block.link_to_page.database\n      ? extractTitle(block.link_to_page.database)\n      : [];\n\n  return (\n    <div id={block.id} className=\"notion-block notion-link-to-page\">\n      <Link prefix=\"/\" link={block.id}>\n        <span className=\"notion-link-to-page-icon\">\n          <Icon icon={icon} />\n        </span>\n        <span className=\"notion-link-to-page-title\">\n          <RichText richText={titleRichText} />\n        </span>\n      </Link>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { NumberedListItemBlock } from \"../../types/notion/blocks/numberedListItem.js\";\n\nexport const NumberedListItem: NumberedListItemBlock = ({ block }) => {\n  return (\n    <li\n      id={block.id}\n      className={`notion-block notion-numbered-list-item notion-color-${block.numbered_list_item.color}`}\n    >\n      <RichText richText={block.numbered_list_item.rich_text} />\n      <div>\n        {block.numbered_list_item.children && (\n          <BlockList blocks={block.numbered_list_item.children} />\n        )}\n      </div>\n    </li>\n  );\n};\n","import { NumberedListItem } from \"./NumberedListItem.js\";\n\nimport type { NumberedListBlock } from \"../../types/notion/blocks/numberedList.js\";\n\nexport const NumberedList: NumberedListBlock = ({ block }) => {\n  return (\n    <ol className=\"notion-block notion-numbered-list\">\n      {block.numbered_list.items.map((item) => {\n        return <NumberedListItem key={item.id} block={item} />;\n      })}\n    </ol>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { ParagraphBlock } from \"../../types/notion/blocks/paragraph.js\";\n\nexport const Paragraph: ParagraphBlock = ({ block }) => {\n  return (\n    <div\n      id={block.id}\n      className={`notion-block notion-paragraph notion-color-${block.paragraph.color}`}\n    >\n      <p>\n        <RichText richText={block.paragraph.rich_text} />\n      </p>\n      {block.paragraph.children && (\n        <div className={\"notion-paragraph-children\"}>\n          <BlockList blocks={block.paragraph.children} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { PdfBlock } from \"../../types/notion/blocks/pdf.js\";\n\nexport const Pdf: PdfBlock = ({ block }) => {\n  const pdfUrl =\n    block.pdf.type == \"external\"\n      ? block.pdf.external.url\n      : block.pdf.type == \"file\"\n      ? block.pdf.file.url\n      : \"\";\n  return (\n    <div id={block.id} className=\"notion-block notion-pdf\">\n      <object\n        type=\"application/pdf\"\n        data={\n          block.pdf.type == \"external\"\n            ? block.pdf.external.url\n            : block.pdf.type == \"file\"\n            ? block.pdf.file.url\n            : \"\"\n        }\n      >\n        Your browser does not support pdfs. You can download pdf file\n        <a href={pdfUrl}>here</a>.\n      </object>\n      <div className=\"notion-caption notion-pdf-caption\">\n        <RichText richText={block.pdf.caption} />\n      </div>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { QuoteBlock } from \"../../types/notion/blocks/quote.js\";\n\nexport const Quote: QuoteBlock = ({ block }) => {\n  return (\n    <blockquote\n      id={block.id}\n      className={`notion-block notion-quote notion-color-${block.quote.color}`}\n    >\n      <RichText richText={block.quote.rich_text} />\n      {block.quote.children && (\n        <div className={\"notion-quote-children\"}>\n          <BlockList blocks={block.quote.children} />\n        </div>\n      )}\n    </blockquote>\n  );\n};\n","import { Block } from \"./Block.js\";\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { SyncedBlockBlock } from \"../../types/notion/blocks/syncedBlock.js\";\n\nexport const SyncedBlock: SyncedBlockBlock = ({ block }) => {\n  return (\n    <div className=\"notion-block notion-synced-block\">\n      {block.synced_block.synced_from === null\n        ? block.synced_block.children && (\n            <div className={\"notion-synced-block-original\"}>\n              <BlockList blocks={block.synced_block.children} />\n            </div>\n          )\n        : block.synced_block.synced_from.block && (\n            <div className={\"notion-synced-block-duplicated\"}>\n              <Block block={block.synced_block.synced_from.block} />\n            </div>\n          )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { TableBlock } from \"../../types/notion/blocks/table.js\";\nimport type { TableCellBlockObjectComponent } from \"../../types/notion/blocks/tableCell.js\";\nimport type { TableRowBlockObject } from \"../../types/notion/blocks/tableRow.js\";\n\nexport const Table: TableBlock = ({ block }) => {\n  return (\n    <table id={block.id} className=\"notion-block notion-table-block\">\n      <tbody>\n        {block.table.table_rows &&\n          block.table.table_rows.map((table_row, index) => {\n            if (block.table.has_row_header && index === 0) {\n              return (\n                <TableRowRowHeader key={table_row.id} table_row={table_row} />\n              );\n            }\n            if (block.table.has_column_header) {\n              return (\n                <TableRowColumnHeader\n                  key={table_row.id}\n                  table_row={table_row}\n                />\n              );\n            }\n            return (\n              <TableRowNoHeader key={table_row.id} table_row={table_row} />\n            );\n          })}\n      </tbody>\n    </table>\n  );\n};\n\nconst TableRowRowHeader: React.FC<{\n  table_row: TableRowBlockObject;\n}> = ({ table_row }) => {\n  return (\n    <tr id={table_row.id} className=\"notion-table-block-row\">\n      {table_row.table_row.cells.map((cell) => (\n        <Th key={table_row.id} cell={cell} />\n      ))}\n    </tr>\n  );\n};\n\nconst TableRowColumnHeader: React.FC<{\n  table_row: TableRowBlockObject;\n}> = ({ table_row }) => {\n  return (\n    <tr id={table_row.id} className=\"notion-table-block-row\">\n      {table_row.table_row.cells.map((cell, index) => {\n        return index === 0 ? (\n          <Th key={table_row.id} cell={cell} />\n        ) : (\n          <Td key={table_row.id} cell={cell} />\n        );\n      })}\n    </tr>\n  );\n};\n\nconst TableRowNoHeader: React.FC<{\n  table_row: TableRowBlockObject;\n}> = ({ table_row }) => {\n  return (\n    <tr id={table_row.id} className=\"notion_table_row\">\n      {table_row.table_row.cells.map((cell) => (\n        <Td key={table_row.id} cell={cell} />\n      ))}\n    </tr>\n  );\n};\n\nconst Th: React.FC<{\n  cell: TableCellBlockObjectComponent;\n}> = ({ cell }) => {\n  return (\n    <th>\n      <RichText richText={cell} />\n    </th>\n  );\n};\n\nconst Td: React.FC<{\n  cell: TableCellBlockObjectComponent;\n}> = ({ cell }) => {\n  return (\n    <td>\n      <RichText richText={cell} />\n    </td>\n  );\n};\n","import type { TableRowBlock } from \"../../types/notion/blocks/tableRow.js\";\n\nexport const TableRow: TableRowBlock = ({ block }) => {\n  console.warn(`${block.type} is not supported`);\n  return null;\n};\n","import type { TemplateBlock } from \"../../types/notion/blocks/template.js\";\n\nexport const Template: TemplateBlock = ({ block }) => {\n  console.warn(`${block.type} is not supported`);\n  return null;\n};\n","import { Checkbox } from \"../Common/Checkbox.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { ToDoBlock } from \"../../types/notion/blocks/toDo.js\";\n\nexport const ToDo: ToDoBlock = ({ block }) => {\n  const { checked } = block.to_do;\n\n  return (\n    <div\n      id={block.id}\n      className={`notion-block notion-to-do notion-color-${block.to_do.color}`}\n    >\n      <div className=\"notion-to-do-content\">\n        <span className=\"notion-to-do-icon\">\n          <Checkbox checked={checked} />\n        </span>\n        <span className={`notion-to-do-text ${checked ? \"checked\" : \"\"}`}>\n          <RichText richText={block.to_do.rich_text} />\n        </span>\n      </div>\n      {block.to_do.children && (\n        <div className=\"notion-to-do-children\">\n          <BlockList blocks={block.to_do.children} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { ToggleBlock } from \"../../types/notion/blocks/toggle.js\";\n\nexport const Toggle: ToggleBlock = ({ block }) => {\n  return (\n    <details\n      id={block.id}\n      className={`notion-block notion-toggle notion-color-${block.toggle.color}`}\n    >\n      <summary className=\"notion-toggle-summary\">\n        <RichText richText={block.toggle.rich_text} />\n      </summary>\n      <div className=\"notion-toggle-details\">\n        {block.toggle.children && <BlockList blocks={block.toggle.children} />}\n      </div>\n    </details>\n  );\n};\n","import type { UnsupportedBlock } from \"../../types/notion/blocks/unsupported.js\";\n\nexport const Unsupported: UnsupportedBlock = ({ block }) => {\n  console.warn(`${block.type} is not supported`);\n  return null;\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { VideoBlock } from \"../../types/notion/blocks/video.js\";\n\nexport const Video: VideoBlock = ({ block }) => {\n  if (block.video.type === \"external\" && block.video.oembed) {\n    return (\n      <div\n        className=\"notion-video\"\n        dangerouslySetInnerHTML={{\n          __html:\n            block.video.oembed.type === \"video\" ? block.video.oembed.html : \"\",\n        }}\n      />\n    );\n  }\n\n  const videoUrl =\n    block.video.type == \"external\"\n      ? block.video.external.url\n      : block.video.type == \"file\"\n      ? block.video.file.url\n      : \"\";\n\n  return (\n    <div id={block.id} className=\"notion-block notion-video\">\n      <video controls src={videoUrl}>\n        Your browser does not support type os. You can download video file\n        <a href={videoUrl}>here</a>.\n      </video>\n      <div className=\"notion-caption notion-video-caption\">\n        <RichText richText={block.video.caption} />\n      </div>\n    </div>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\nimport { AnnotationItemProvider } from \"../Mapper/Annotation.js\";\nimport { BlockProvider } from \"../Mapper/Block.js\";\nimport { LinkProvider } from \"../Mapper/Link.js\";\nimport { RichTextItemProvider } from \"../Mapper/RichText.js\";\n\nimport { Audio } from \"./Audio.js\";\nimport { Bookmark } from \"./Bookmark.js\";\nimport { Breadcrumb } from \"./Breadcrumb.js\";\nimport { BulletedList } from \"./BulletedList.js\";\nimport { BulletedListItem } from \"./BulletedListItem.js\";\nimport { Callout } from \"./Callout.js\";\nimport { ChildDatabase } from \"./ChildDatabase.js\";\nimport { ChildPage } from \"./ChildPage.js\";\nimport { Code } from \"./Code.js\";\nimport { Column } from \"./Column.js\";\nimport { ColumnList } from \"./ColumnList.js\";\nimport { Divider } from \"./Divider.js\";\nimport { Embed } from \"./Embed.js\";\nimport { Equation } from \"./Equation.js\";\nimport { File } from \"./File.js\";\nimport { Heading1 } from \"./Heading1.js\";\nimport { Heading2 } from \"./Heading2.js\";\nimport { Heading3 } from \"./Heading3.js\";\nimport { Image } from \"./Image.js\";\nimport { LinkPreview } from \"./LinkPreview.js\";\nimport { LinkToPage } from \"./LinkToPage.js\";\nimport { NumberedList } from \"./NumberedList.js\";\nimport { NumberedListItem } from \"./NumberedListItem.js\";\nimport { Paragraph } from \"./Paragraph.js\";\nimport { Pdf } from \"./Pdf.js\";\nimport { Quote } from \"./Quote.js\";\nimport { SyncedBlock } from \"./SyncedBlock.js\";\nimport { Table } from \"./Table.js\";\nimport { TableOfContents } from \"./TableOfContents.js\";\nimport { TableRow } from \"./TableRow.js\";\nimport { Template } from \"./Template.js\";\nimport { ToDo } from \"./ToDo.js\";\nimport { Toggle } from \"./Toggle.js\";\nimport { Unsupported } from \"./Unsupported.js\";\nimport { Video } from \"./Video.js\";\n\nimport type { BlockBlockObject } from \"../../types/notion/blocks/block.js\";\nimport type { LinkProps } from \"../../types/notion/common/link.js\";\nimport type { AnnotationItemMapper } from \"../../types/notion/mapper/annotationItem.js\";\nimport type { BlockMapper } from \"../../types/notion/mapper/block.js\";\nimport type { RichTextItemMapper } from \"../../types/notion/mapper/richTextItem.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  block: BlockBlockObject;\n  // blocks: Array<BlockBlockObject>;\n  blockMapper?: BlockMapper;\n  richTextItemMapper?: RichTextItemMapper;\n  annotationMapper?: AnnotationItemMapper;\n  LinkComponent?: React.ComponentType<LinkProps>;\n};\n\nexport const Block: FC<Props> = ({\n  block,\n  // blocks,\n  blockMapper,\n  richTextItemMapper,\n  annotationMapper,\n  LinkComponent,\n}) => {\n  return (\n    <BlockProvider mapper={blockMapper}>\n      <RichTextItemProvider mapper={richTextItemMapper}>\n        <AnnotationItemProvider mapper={annotationMapper}>\n          <LinkProvider link={LinkComponent}>\n            <BlockSwitcher block={block} />\n          </LinkProvider>\n        </AnnotationItemProvider>\n      </RichTextItemProvider>\n    </BlockProvider>\n  );\n};\n\nconst BlockSwitcher: FC<{ block: BlockBlockObject }> = ({ block }) => {\n  if (!block) return null;\n  const { blockMapper } = useMapper();\n\n  const mapper = {\n    audio: Audio,\n    bookmark: Bookmark,\n    breadcrumb: Breadcrumb,\n    bulleted_list: BulletedList,\n    bulleted_list_item: BulletedListItem,\n    callout: Callout,\n    child_database: ChildDatabase,\n    child_page: ChildPage,\n    code: Code,\n    column: Column,\n    column_list: ColumnList,\n    divider: Divider,\n    embed: Embed,\n    equation: Equation,\n    file: File,\n    heading_1: Heading1,\n    heading_2: Heading2,\n    heading_3: Heading3,\n    image: Image,\n    link_preview: LinkPreview,\n    link_to_page: LinkToPage,\n    numbered_list: NumberedList,\n    numbered_list_item: NumberedListItem,\n    paragraph: Paragraph,\n    pdf: Pdf,\n    quote: Quote,\n    synced_block: SyncedBlock,\n    table: Table,\n    table_of_contents: TableOfContents,\n    table_row: TableRow,\n    template: Template,\n    to_do: ToDo,\n    toggle: Toggle,\n    unsupported: Unsupported,\n    video: Video,\n    ...blockMapper,\n  };\n\n  switch (block.type) {\n    case \"audio\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"bookmark\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"breadcrumb\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"bulleted_list\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"bulleted_list_item\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"callout\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"child_database\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"child_page\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"code\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"column\": {\n      console.warn(\n        `top level column block is not supported. column block must be child of column_list block.`\n      );\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"column_list\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"divider\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"embed\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"equation\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"file\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"heading_1\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"heading_2\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"heading_3\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"image\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"link_preview\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"link_to_page\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"numbered_list\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"numbered_list_item\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"paragraph\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"pdf\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"quote\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"synced_block\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"table\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"table_of_contents\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"table_row\": {\n      console.warn(\n        `top level table_row block is not supported. table_row block must be child of table block.`\n      );\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"template\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"to_do\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"toggle\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"unsupported\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    case \"video\": {\n      const BlockComponent = mapper[block.type];\n      return <BlockComponent block={block} />;\n    }\n    default: {\n      // @ts-expect-error: to log when an unexpected 'block.type' is encountered, which is not in the type.\n      console.warn(`${block.type as { type: never }} is never.`);\n      return null;\n    }\n  }\n};\n","\"use client\";\n\nimport { AnnotationItemProvider } from \"../Mapper/Annotation.js\";\nimport { BlockProvider } from \"../Mapper/Block.js\";\nimport { LinkProvider } from \"../Mapper/Link.js\";\nimport { RichTextItemProvider } from \"../Mapper/RichText.js\";\n\nimport { BlockList } from \"./BlockList.js\";\n\nimport type { BlockBlockObject } from \"../../types/notion/blocks/block.js\";\nimport type { LinkProps } from \"../../types/notion/common/link.js\";\nimport type { AnnotationItemMapper } from \"../../types/notion/mapper/annotationItem.js\";\nimport type { BlockMapper } from \"../../types/notion/mapper/block.js\";\nimport type { RichTextItemMapper } from \"../../types/notion/mapper/richTextItem.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  blocks: Array<BlockBlockObject>;\n  blockMapper?: BlockMapper;\n  richTextItemMapper?: RichTextItemMapper;\n  annotationMapper?: AnnotationItemMapper;\n  LinkComponent?: React.ComponentType<LinkProps>;\n  theme?: \"light\" | \"dark\";\n};\n\nexport const BlockRenderer: FC<Props> = ({\n  blocks,\n  blockMapper,\n  richTextItemMapper,\n  annotationMapper,\n  LinkComponent,\n  theme = \"light\",\n}) => {\n  return (\n    <div className={`notion-root notion-${theme}`}>\n      <BlockProvider mapper={blockMapper}>\n        <RichTextItemProvider mapper={richTextItemMapper}>\n          <AnnotationItemProvider mapper={annotationMapper}>\n            <LinkProvider link={LinkComponent}>\n              <BlockList blocks={blocks} />\n            </LinkProvider>\n          </AnnotationItemProvider>\n        </RichTextItemProvider>\n      </BlockProvider>\n    </div>\n  );\n};\n","import { RichText } from \"../index.js\";\n\nimport type { RichText as RichTextType } from \"../../types/notion/richText/richText.js\";\n\ntype Props = {\n  title: RichTextType;\n};\n\nexport const Title: React.FC<Props> = function ({ title }) {\n  return (\n    <h1 className=\"notion-title\">\n      <RichText richText={title} />\n    </h1>\n  );\n};\n","import { PropertyItemContext, useMapper } from \"../hooks.js\";\n\nimport type { PropertyItemMapper } from \"../../types/notion/mapper/propertyItem.js\";\nimport type { FC, ReactNode } from \"react\";\n\nexport const PropertyItemProvider: FC<{\n  mapper?: PropertyItemMapper;\n  children: ReactNode;\n}> = ({ mapper, children }) => {\n  if (!mapper) {\n    return children;\n  }\n\n  const { propertyItemMapper } = useMapper();\n\n  return (\n    <PropertyItemContext.Provider value={{ ...propertyItemMapper, ...mapper }}>\n      {children}\n    </PropertyItemContext.Provider>\n  );\n};\n","import { extractTitle } from \"../../utils.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport { Icon } from \"./Icon.js\";\n\nimport type { RelationItem as RelationItemType } from \"../../types/notion/pages/properties/relation.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  relationItem: RelationItemType;\n};\n\nexport const RelationItem: FC<Props> = ({ relationItem }) => {\n  const icon = relationItem.page ? relationItem.page.icon : null;\n  const title = relationItem.page ? extractTitle(relationItem.page) : [];\n  return (\n    <div className=\"notion-relation-item\">\n      <Icon icon={icon} />\n      {title.length === 0 ? (\n        <span>Anonymous</span>\n      ) : (\n        <RichText richText={title} />\n      )}\n    </div>\n  );\n};\n","import { RelationItem } from \"../Common/RelationItem.js\";\nimport { useMapper } from \"../hooks.js\";\n\nimport type { RelationPropertyItemComponent } from \"../../types/notion/pages/properties/relation.js\";\n\nexport const RelationProperty: RelationPropertyItemComponent = ({\n  propertyItem,\n}) => {\n  const { Link } = useMapper();\n\n  return (\n    <div id={propertyItem?.id} className=\"notion-property-item notion-relation\">\n      {propertyItem.relation?.map((item) => (\n        <Link key={item.id} prefix=\"/\" link={item.id}>\n          <RelationItem key={item.id} relationItem={item} />\n        </Link>\n      ))}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { RichTextPropertyItemComponent } from \"../../types/notion/pages/properties/richText.js\";\n\nexport const RichTextProperty: RichTextPropertyItemComponent = ({\n  propertyItem,\n}) => (\n  <div id={propertyItem.id} className=\"notion-property-item notion-rich-text\">\n    <RichText richText={propertyItem.rich_text} />\n  </div>\n);\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { TitlePropertyItemComponent } from \"../../types/notion/pages/properties/title.js\";\n\nexport const TitleProperty: TitlePropertyItemComponent = ({ propertyItem }) => (\n  <h1 id={propertyItem.id} className=\"notion-property-item notion-title\">\n    <RichText richText={propertyItem.title} />\n  </h1>\n);\n","import { AnnotationItemProvider } from \"../Mapper/Annotation.js\";\nimport { LinkProvider } from \"../Mapper/Link.js\";\nimport { PropertyItemProvider } from \"../Mapper/Property.js\";\nimport { RichTextItemProvider } from \"../Mapper/RichText.js\";\n\nimport { CheckboxProperty } from \"./Checkbox.js\";\nimport { CreatedByProperty } from \"./CreatedBy.js\";\nimport { CreatedTimeProperty } from \"./CreatedTime.js\";\nimport { DateProperty } from \"./Date.js\";\nimport { EmailProperty } from \"./Email.js\";\nimport { FilesProperty } from \"./Files.js\";\nimport { FormulaProperty } from \"./Formula.js\";\nimport { LastEditedByProperty } from \"./LastEditedBy.js\";\nimport { LastEditedTimeProperty } from \"./LastEditedTime.js\";\nimport { MultiSelectProperty } from \"./MultiSelect.js\";\nimport { NumberProperty } from \"./Number.js\";\nimport { PeopleProperty } from \"./People.js\";\nimport { PhoneNumberProperty } from \"./PhoneNumber.js\";\nimport { RelationProperty } from \"./Relation.js\";\nimport { RichTextProperty } from \"./RichText.js\";\nimport { RollupProperty } from \"./Rollup.js\";\nimport { SelectProperty } from \"./Select.js\";\nimport { StatusProperty } from \"./Status.js\";\nimport { TitleProperty } from \"./Title.js\";\nimport { UniqueIdProperty } from \"./UniqueId.js\";\nimport { UrlProperty } from \"./Url.js\";\n\nimport type { LinkProps } from \"../../types/notion/common/link.js\";\nimport type { AnnotationItemMapper } from \"../../types/notion/mapper/annotationItem.js\";\nimport type { PropertyItemMapper } from \"../../types/notion/mapper/propertyItem.js\";\nimport type { RichTextItemMapper } from \"../../types/notion/mapper/richTextItem.js\";\nimport type { PropertyItemObject } from \"../../types/notion/pages/properties/propertyItem.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  property: PropertyItemObject;\n  propertyMapper?: PropertyItemMapper;\n  richTextItemMapper?: RichTextItemMapper;\n  annotationMapper?: AnnotationItemMapper;\n  LinkComponent?: React.ComponentType<LinkProps>;\n};\n\nexport const PropertyItem: FC<Props> = ({\n  property,\n  propertyMapper,\n  richTextItemMapper,\n  annotationMapper,\n  LinkComponent,\n}) => {\n  return (\n    <PropertyItemProvider mapper={propertyMapper}>\n      <RichTextItemProvider mapper={richTextItemMapper}>\n        <AnnotationItemProvider mapper={annotationMapper}>\n          <LinkProvider link={LinkComponent}>\n            <PropertyItemSwitcher property={property} />\n          </LinkProvider>\n        </AnnotationItemProvider>\n      </RichTextItemProvider>\n    </PropertyItemProvider>\n  );\n};\n\nconst PropertyItemSwitcher: FC<Props> = ({ property }) => {\n  if (!property) return null;\n\n  const mapper = {\n    checkbox: CheckboxProperty,\n    created_by: CreatedByProperty,\n    created_time: CreatedTimeProperty,\n    date: DateProperty,\n    email: EmailProperty,\n    files: FilesProperty,\n    formula: FormulaProperty,\n    last_edited_by: LastEditedByProperty,\n    last_edited_time: LastEditedTimeProperty,\n    multi_select: MultiSelectProperty,\n    number: NumberProperty,\n    people: PeopleProperty,\n    phone_number: PhoneNumberProperty,\n    relation: RelationProperty,\n    rich_text: RichTextProperty,\n    rollup: RollupProperty,\n    select: SelectProperty,\n    status: StatusProperty,\n    title: TitleProperty,\n    unique_id: UniqueIdProperty,\n    url: UrlProperty,\n  };\n\n  switch (property.type) {\n    case \"checkbox\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"created_time\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"created_by\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"date\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"email\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"files\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"formula\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"last_edited_by\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"last_edited_time\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"relation\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"rich_text\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"rollup\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"multi_select\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"number\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"people\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"phone_number\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"select\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"status\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"title\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"unique_id\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    case \"url\": {\n      const PropertyComponent = mapper[property.type];\n      return <PropertyComponent propertyItem={property} />;\n    }\n    default: {\n      // @ts-expect-error: to log when an unexpected 'property.type' is encountered, which is not in the type.\n      console.warn(`${property.type as { type: never }} is not supported.`);\n      return null;\n    }\n  }\n};\n","import type { PropertyItemObject } from \"../../types/notion/pages/properties/propertyItem.js\";\nimport type { DatabaseObject } from \"src/types/notion/database.js\";\n\nexport const PropertyIcon = ({\n  property,\n}: {\n  property: PropertyItemObject | DatabaseObject[\"properties\"][string];\n}) => {\n  switch (property.type) {\n    case \"title\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"notion-property-icon typesTitle\"\n        >\n          <path d=\"M0.637695 13.1914C1.0957 13.1914 1.32812 13 1.47852 12.5215L2.24414 10.3887H6.14746L6.90625 12.5215C7.05664 13 7.2959 13.1914 7.74707 13.1914C8.22559 13.1914 8.5332 12.9043 8.5332 12.4531C8.5332 12.2891 8.50586 12.1523 8.44434 11.9678L5.41602 3.79199C5.2041 3.21777 4.82129 2.9375 4.19922 2.9375C3.60449 2.9375 3.21484 3.21777 3.0166 3.78516L-0.0322266 12.002C-0.09375 12.1797 -0.121094 12.3232 -0.121094 12.4668C-0.121094 12.918 0.166016 13.1914 0.637695 13.1914ZM2.63379 9.12402L4.17871 4.68066H4.21973L5.76465 9.12402H2.63379ZM12.2793 13.2324C13.3115 13.2324 14.2891 12.6787 14.7129 11.8037H14.7402V12.5762C14.7471 12.9863 15.0273 13.2393 15.4238 13.2393C15.834 13.2393 16.1143 12.9795 16.1143 12.5215V8.00977C16.1143 6.49902 14.9658 5.52148 13.1543 5.52148C11.7666 5.52148 10.6592 6.08887 10.2695 6.99121C10.1943 7.15527 10.1533 7.3125 10.1533 7.46289C10.1533 7.81152 10.4062 8.04395 10.7686 8.04395C11.0215 8.04395 11.2129 7.94824 11.3496 7.73633C11.7529 6.99121 12.2861 6.65625 13.1064 6.65625C14.0977 6.65625 14.6992 7.20996 14.6992 8.1123V8.67285L12.5664 8.7959C10.7686 8.8916 9.77734 9.69824 9.77734 11.0107C9.77734 12.3369 10.8096 13.2324 12.2793 13.2324ZM12.6621 12.1387C11.8008 12.1387 11.2129 11.667 11.2129 10.9561C11.2129 10.2725 11.7598 9.82129 12.7578 9.75977L14.6992 9.62988V10.3203C14.6992 11.3457 13.7969 12.1387 12.6621 12.1387Z\"></path>\n        </svg>\n      );\n    }\n    case \"rich_text\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M1.56738 3.25879H14.4258C14.7676 3.25879 15.0479 2.97852 15.0479 2.63672C15.0479 2.29492 14.7744 2.02148 14.4258 2.02148H1.56738C1.21875 2.02148 0.952148 2.29492 0.952148 2.63672C0.952148 2.97852 1.22559 3.25879 1.56738 3.25879ZM1.56738 6.84082H14.4258C14.7676 6.84082 15.0479 6.56055 15.0479 6.21875C15.0479 5.87695 14.7744 5.60352 14.4258 5.60352H1.56738C1.21875 5.60352 0.952148 5.87695 0.952148 6.21875C0.952148 6.56055 1.22559 6.84082 1.56738 6.84082ZM1.56738 10.4229H14.4258C14.7676 10.4229 15.0479 10.1426 15.0479 9.80078C15.0479 9.45898 14.7744 9.18555 14.4258 9.18555H1.56738C1.21875 9.18555 0.952148 9.45898 0.952148 9.80078C0.952148 10.1426 1.22559 10.4229 1.56738 10.4229ZM1.56738 14.0049H8.75879C9.10059 14.0049 9.38086 13.7246 9.38086 13.3828C9.38086 13.041 9.10742 12.7676 8.75879 12.7676H1.56738C1.21875 12.7676 0.952148 13.041 0.952148 13.3828C0.952148 13.7246 1.22559 14.0049 1.56738 14.0049Z\"></path>\n        </svg>\n      );\n    }\n    case \"number\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M2.4834 10.9902H4.33594L3.75488 13.8887C3.74121 13.9639 3.72754 14.0664 3.72754 14.1416C3.72754 14.5381 3.99414 14.7637 4.39746 14.7637C4.81445 14.7637 5.09473 14.5449 5.18359 14.1143L5.80566 10.9902H8.79297L8.21191 13.8887C8.19824 13.9639 8.18457 14.0664 8.18457 14.1416C8.18457 14.5381 8.45117 14.7637 8.85449 14.7637C9.27148 14.7637 9.55176 14.5449 9.63379 14.1143L10.2627 10.9902H12.4502C12.9287 10.9902 13.2432 10.6758 13.2432 10.2109C13.2432 9.8418 12.9902 9.56836 12.6006 9.56836H10.5498L11.2129 6.28711H13.3662C13.8379 6.28711 14.1523 5.96582 14.1523 5.50098C14.1523 5.13184 13.9062 4.8584 13.5098 4.8584H11.5L12.0195 2.27441C12.0264 2.21973 12.0469 2.11035 12.0469 2.01465C12.0469 1.625 11.7666 1.39258 11.3633 1.39258C10.9053 1.39258 10.6797 1.63867 10.5977 2.05566L10.0303 4.8584H7.04297L7.5625 2.27441C7.57617 2.21973 7.58984 2.11035 7.58984 2.01465C7.58984 1.625 7.30957 1.39258 6.91309 1.39258C6.44824 1.39258 6.21582 1.63867 6.13379 2.05566L5.57324 4.8584H3.54297C3.06445 4.8584 2.75 5.18652 2.75 5.65137C2.75 6.03418 3.00293 6.28711 3.39258 6.28711H5.28613L4.62305 9.56836H2.63379C2.15527 9.56836 1.84082 9.89648 1.84082 10.3613C1.84082 10.7373 2.09375 10.9902 2.4834 10.9902ZM6.09277 9.56836L6.75586 6.28711H9.74316L9.08008 9.56836H6.09277Z\"></path>\n        </svg>\n      );\n    }\n    case \"checkbox\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M3.85742 14.4561H12.1357C13.6123 14.4561 14.3779 13.6904 14.3779 12.2344V3.91504C14.3779 2.45215 13.6123 1.69336 12.1357 1.69336H3.85742C2.38086 1.69336 1.61523 2.45215 1.61523 3.91504V12.2344C1.61523 13.6973 2.38086 14.4561 3.85742 14.4561ZM3.93945 13.1162C3.30371 13.1162 2.95508 12.7812 2.95508 12.1182V4.02441C2.95508 3.36133 3.30371 3.0332 3.93945 3.0332H12.0537C12.6826 3.0332 13.0381 3.36133 13.0381 4.02441V12.1182C13.0381 12.7812 12.6826 13.1162 12.0537 13.1162H3.93945ZM7.26855 11.3115C7.51465 11.3115 7.72656 11.1885 7.87012 10.9697L10.9258 6.19141C11.0146 6.04785 11.0967 5.88379 11.0967 5.72656C11.0967 5.3916 10.7959 5.16602 10.4746 5.16602C10.2695 5.16602 10.085 5.27539 9.94141 5.50781L7.24121 9.8418L5.96973 8.2;2168C5.80566 8.00977 5.6416 7.93457 5.43652 7.93457C5.10156 7.93457 4.8418 8.20117 4.8418 8.54297C4.8418 8.70703 4.90332 8.85742 5.01953 9.00098L6.63281 10.9697C6.81738 11.209 7.01562 11.3115 7.26855 11.3115Z\"></path>\n        </svg>\n      );\n    }\n    case \"created_by\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M8 15.126C11.8623 15.126 15.0615 11.9336 15.0615 8.06445C15.0615 4.20215 11.8623 1.00293 7.99316 1.00293C4.13086 1.00293 0.938477 4.20215 0.938477 8.06445C0.938477 11.9336 4.1377 15.126 8 15.126ZM8 10.4229C6.05176 10.4229 4.54785 11.1133 3.83008 11.9131C2.90039 10.9082 2.33301 9.55469 2.33301 8.06445C2.33301 4.91992 4.84863 2.39746 7.99316 2.39746C11.1377 2.39746 13.6738 4.91992 13.6738 8.06445C13.6738 9.55469 13.1064 10.9082 12.1699 11.9131C11.4521 11.1133 9.94824 10.4229 8 10.4229ZM8 9.30176C9.32617 9.30859 10.3516 8.18066 10.3516 6.71094C10.3516 5.33008 9.31934 4.18164 8 4.18164C6.6875 4.18164 5.6416 5.33008 5.64844 6.71094C5.65527 8.18066 6.68066 9.28809 8 9.30176Z\"></path>\n        </svg>\n      );\n    }\n    case \"created_time\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M8 15.126C11.8623 15.126 15.0615 11.9336 15.0615 8.06445C15.0615 4.20215 11.8623 1.00293 7.99316 1.00293C4.13086 1.00293 0.938477 4.20215 0.938477 8.06445C0.938477 11.9336 4.1377 15.126 8 15.126ZM8 13.7383C4.85547 13.7383 2.33301 11.209 2.33301 8.06445C2.33301 4.91992 4.84863 2.39746 7.99316 2.39746C11.1377 2.39746 13.6738 4.91992 13.6738 8.06445C13.6738 11.209 11.1445 13.7383 8 13.7383ZM4.54102 8.91211H7.99316C8.30078 8.91211 8.54004 8.67285 8.54004 8.37207V3.8877C8.54004 3.58691 8.30078 3.34766 7.99316 3.34766C7.69238 3.34766 7.45312 3.58691 7.45312 3.8877V7.83203H4.54102C4.2334 7.83203 4.00098 8.06445 4.00098 8.37207C4.00098 8.67285 4.2334 8.91211 4.54102 8.91211Z\"></path>\n        </svg>\n      );\n    }\n    case \"date\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M3.29688 14.4561H12.7031C14.1797 14.4561 14.9453 13.6904 14.9453 12.2344V3.91504C14.9453 2.45215 14.1797 1.69336 12.7031 1.69336H3.29688C1.82031 1.69336 1.05469 2.45215 1.05469 3.91504V12.2344C1.05469 13.6973 1.82031 14.4561 3.29688 14.4561ZM3.27637 13.1162C2.70898 13.1162 2.39453 12.8154 2.39453 12.2207V5.9043C2.39453 5.30273 2.70898 5.00879 3.27637 5.00879H12.71C13.2842 5.00879 13.6055 5.30273 13.6055 5.9043V12.2207C13.6055 12.8154 13.2842 13.1162 12.71 13.1162H3.27637ZM6.68066 7.38086H7.08398C7.33008 7.38086 7.41211 7.30566 7.41211 7.05957V6.66309C7.41211 6.41699 7.33008 6.3418 7.08398 6.3418H6.68066C6.44141 6.3418 6.35938 6.41699 6.35938 6.66309V7.05957C6.35938 7.30566 6.44141 7.38086 6.68066 7.38086ZM8.92285 7.38086H9.31934C9.56543 7.38086 9.64746 7.30566 9.64746 7.05957V6.66309C9.64746 6.41699 9.56543 6.3418 9.31934 6.3418H8.92285C8.67676 6.3418 8.59473 6.41699 8.59473 6.66309V7.05957C8.59473 7.30566 8.67676 7.38086 8.92285 7.38086ZM11.1582 7.38086H11.5547C11.8008 7.38086 11.8828 7.30566 11.8828 7.05957V6.66309C11.8828 6.41699 11.8008 6.3418 11.5547 6.3418H11.1582C10.9121 6.3418 10.8301 6.41699 10.8301 6.66309V7.05957C10.8301 7.30566 10.9121 7.38086 11.1582 7.38086ZM4.44531 9.58203H4.84863C5.09473 9.58203 5.17676 9.50684 5.17676 9.26074V8.86426C5.17676 8.61816 5.09473 8.54297 4.84863 8.54297H4.44531C4.20605 8.54297 4.12402 8.61816 4.12402 8.86426V9.26074C4.12402 9.50684 4.20605 9.58203 4.44531 9.58203ZM6.68066 9.58203H7.08398C7.33008 9.58203 7.41211 9.50684 7.41211 9.26074V8.86426C7.41211 8.61816 7.33008 8.54297 7.08398 8.54297H6.68066C6.44141 8.54297 6.35938 8.61816 6.35938 8.86426V9.26074C6.35938 9.50684 6.44141 9.58203 6.68066 9.58203ZM8.92285 9.58203H9.31934C9.56543 9.58203 9.64746 9.50684 9.64746 9.26074V8.86426C9.64746 8.61816 9.56543 8.54297 9.31934 8.54297H8.92285C8.67676 8.54297 8.59473 8.61816 8.59473 8.86426V9.26074C8.59473 9.50684 8.67676 9.58203 8.92285 9.58203ZM11.1582 9.58203H11.5547C11.8008 9.58203 11.8828 9.50684 11.8828 9.26074V8.86426C11.8828 8.61816 11.8008 8.54297 11.5547 8.54297H11.1582C10.9121 8.54297 10.8301 8.61816 10.8301 8.86426V9.26074C10.8301 9.50684 10.9121 9.58203 11.1582 9.58203ZM4.44531 11.7832H4.84863C5.09473 11.7832 5.17676 11.708 5.17676 11.4619V11.0654C5.17676 10.8193 5.09473 10.7441 4.84863 10.7441H4.44531C4.20605 10.7441 4.12402 10.8193 4.12402 11.0654V11.4619C4.12402 11.708 4.20605 11.7832 4.44531 11.7832ZM6.68066 11.7832H7.08398C7.33008 11.7832 7.41211 11.708 7.41211 11.4619V11.0654C7.41211 10.8193 7.33008 10.7441 7.08398 10.7441H6.68066C6.44141 10.7441 6.35938 10.8193 6.35938 11.0654V11.4619C6.35938 11.708 6.44141 11.7832 6.68066 11.7832ZM8.92285 11.7832H9.31934C9.56543 11.7832 9.64746 11.708 9.64746 11.4619V11.0654C9.64746 10.8193 9.56543 10.7441 9.31934 10.7441H8.92285C8.67676 10.7441 8.59473 10.8193 8.59473 11.0654V11.4619C8.59473 11.708 8.67676 11.7832 8.92285 11.7832Z\"></path>\n        </svg>\n      );\n    }\n    case \"email\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M0.870117 8.40625C0.870117 12.8975 3.93262 15.6523 8.19824 15.6523C9.31934 15.6523 10.3242 15.5088 10.9463 15.3037C11.3975 15.1533 11.5547 14.9141 11.5547 14.6338C11.5547 14.3398 11.3428 14.1279 11.0283 14.1279C10.9326 14.1279 10.8164 14.1416 10.6797 14.1689C9.94141 14.3398 9.29883 14.4629 8.42383 14.4629C4.69141 14.4629 2.18262 12.2207 2.18262 8.44727C2.18262 4.81055 4.56836 2.28125 8.12988 2.28125C11.3223 2.28125 13.8926 4.26367 13.8926 7.74316C13.8926 9.69141 13.2363 11.0039 12.1904 11.0039C11.4932 11.0039 11.0967 10.5801 11.0967 9.85547V5.4668C11.0967 5.03613 10.8574 4.77637 10.4473 4.77637C10.0371 4.77637 9.79102 5.03613 9.79102 5.4668V6.12305H9.70215C9.36035 5.28906 8.52637 4.77637 7.52148 4.77637C5.76465 4.77637 4.53418 6.2666 4.53418 8.42676C4.53418 10.6143 5.77148 12.1318 7.57617 12.1318C8.62207 12.1318 9.4082 11.5781 9.79785 10.6279H9.87988C10.0439 11.5645 10.8506 12.1318 11.9443 12.1318C13.9131 12.1318 15.123 10.293 15.123 7.6543C15.123 3.68945 12.2109 1.09863 8.14355 1.09863C3.86426 1.09863 0.870117 4.01758 0.870117 8.40625ZM7.84277 10.9014C6.70801 10.9014 5.99707 9.95117 5.99707 8.44043C5.99707 6.93652 6.71484 5.98633 7.84961 5.98633C9.00488 5.98633 9.73633 6.92285 9.73633 8.41309C9.73633 9.93066 8.99805 10.9014 7.84277 10.9014Z\"></path>\n        </svg>\n      );\n    }\n    case \"files\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M12.5938 8.44043L7.54883 13.4854C6.26367 14.7773 4.54102 14.6475 3.44043 13.54C2.32617 12.4326 2.20312 10.7168 3.49512 9.4248L10.3926 2.52734C11.1445 1.77539 12.2725 1.63867 13.0039 2.37695C13.7422 3.11523 13.6055 4.22949 12.8535 4.98828L6.08594 11.7627C5.77832 12.0703 5.41602 11.9814 5.2041 11.7764C4.99902 11.5576 4.91016 11.2021 5.21777 10.8877L9.93457 6.1709C10.1738 5.93164 10.1875 5.58301 9.96191 5.35059C9.72949 5.13184 9.38086 5.13867 9.1416 5.37793L4.39746 10.1152C3.67285 10.8535 3.7002 11.9746 4.34961 12.624C5.05371 13.3281 6.12012 13.3145 6.8584 12.5762L13.6602 5.77441C14.9795 4.45508 14.9316 2.71875 13.7764 1.55664C12.6416 0.428711 10.8779 0.34668 9.55176 1.66602L2.61328 8.61816C0.883789 10.3477 1 12.8291 2.57227 14.4014C4.14453 15.9668 6.63281 16.0898 8.3623 14.3672L13.4414 9.28809C13.6738 9.0625 13.667 8.64551 13.4346 8.41992C13.209 8.18066 12.833 8.21484 12.5938 8.44043Z\"></path>\n        </svg>\n      );\n    }\n    case \"formula\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M5.04688 14.3604H11.2744C11.7324 14.3604 12.0537 14.0801 12.0537 13.6494C12.0537 13.2119 11.7324 12.9248 11.2744 12.9248H5.81934V12.8564L9.30566 8.82324C9.54492 8.57031 9.6748 8.29688 9.6748 8.0166C9.6748 7.73633 9.54492 7.45605 9.29883 7.20996L5.81934 3.2793V3.21094H11.2812C11.7393 3.21094 12.0537 2.92383 12.0537 2.48633C12.0537 2.05566 11.7393 1.77539 11.2812 1.77539H5.05371C4.34277 1.77539 3.95312 2.26758 3.95312 2.81445C3.95312 3.12207 4.07617 3.44336 4.33594 3.69629L8.15039 7.96875V8.05078L4.3291 12.4395C4.06934 12.6924 3.94629 13.0137 3.94629 13.3213C3.94629 13.8682 4.33594 14.3604 5.04688 14.3604Z\"></path>\n        </svg>\n      );\n    }\n    case \"last_edited_by\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M8 15.126C11.8623 15.126 15.0615 11.9336 15.0615 8.06445C15.0615 4.20215 11.8623 1.00293 7.99316 1.00293C4.13086 1.00293 0.938477 4.20215 0.938477 8.06445C0.938477 11.9336 4.1377 15.126 8 15.126ZM8 10.4229C6.05176 10.4229 4.54785 11.1133 3.83008 11.9131C2.90039 10.9082 2.33301 9.55469 2.33301 8.06445C2.33301 4.91992 4.84863 2.39746 7.99316 2.39746C11.1377 2.39746 13.6738 4.91992 13.6738 8.06445C13.6738 9.55469 13.1064 10.9082 12.1699 11.9131C11.4521 11.1133 9.94824 10.4229 8 10.4229ZM8 9.30176C9.32617 9.30859 10.3516 8.18066 10.3516 6.71094C10.3516 5.33008 9.31934 4.18164 8 4.18164C6.6875 4.18164 5.6416 5.33008 5.64844 6.71094C5.65527 8.18066 6.68066 9.28809 8 9.30176Z\"></path>\n        </svg>\n      );\n    }\n    case \"last_edited_time\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M8 15.126C11.8623 15.126 15.0615 11.9336 15.0615 8.06445C15.0615 4.20215 11.8623 1.00293 7.99316 1.00293C4.13086 1.00293 0.938477 4.20215 0.938477 8.06445C0.938477 11.9336 4.1377 15.126 8 15.126ZM8 13.7383C4.85547 13.7383 2.33301 11.209 2.33301 8.06445C2.33301 4.91992 4.84863 2.39746 7.99316 2.39746C11.1377 2.39746 13.6738 4.91992 13.6738 8.06445C13.6738 11.209 11.1445 13.7383 8 13.7383ZM4.54102 8.91211H7.99316C8.30078 8.91211 8.54004 8.67285 8.54004 8.37207V3.8877C8.54004 3.58691 8.30078 3.34766 7.99316 3.34766C7.69238 3.34766 7.45312 3.58691 7.45312 3.8877V7.83203H4.54102C4.2334 7.83203 4.00098 8.06445 4.00098 8.37207C4.00098 8.67285 4.2334 8.91211 4.54102 8.91211Z\"></path>\n        </svg>\n      );\n    }\n    case \"multi_select\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M1.91602 4.83789C2.44238 4.83789 2.87305 4.40723 2.87305 3.87402C2.87305 3.34766 2.44238 2.91699 1.91602 2.91699C1.38281 2.91699 0.952148 3.34766 0.952148 3.87402C0.952148 4.40723 1.38281 4.83789 1.91602 4.83789ZM5.1084 4.52344H14.3984C14.7607 4.52344 15.0479 4.23633 15.0479 3.87402C15.0479 3.51172 14.7607 3.22461 14.3984 3.22461H5.1084C4.74609 3.22461 4.45898 3.51172 4.45898 3.87402C4.45898 4.23633 4.74609 4.52344 5.1084 4.52344ZM1.91602 9.03516C2.44238 9.03516 2.87305 8.60449 2.87305 8.07129C2.87305 7.54492 2.44238 7.11426 1.91602 7.11426C1.38281 7.11426 0.952148 7.54492 0.952148 8.07129C0.952148 8.60449 1.38281 9.03516 1.91602 9.03516ZM5.1084 8.7207H14.3984C14.7607 8.7207 15.0479 8.43359 15.0479 8.07129C15.0479 7.70898 14.7607 7.42188 14.3984 7.42188H5.1084C4.74609 7.42188 4.45898 7.70898 4.45898 8.07129C4.45898 8.43359 4.74609 8.7207 5.1084 8.7207ZM1.91602 13.2324C2.44238 13.2324 2.87305 12.8018 2.87305 12.2686C2.87305 11.7422 2.44238 11.3115 1.91602 11.3115C1.38281 11.3115 0.952148 11.7422 0.952148 12.2686C0.952148 12.8018 1.38281 13.2324 1.91602 13.2324ZM5.1084 12.918H14.3984C14.7607 12.918 15.0479 12.6309 15.0479 12.2686C15.0479 11.9062 14.7607 11.6191 14.3984 11.6191H5.1084C4.74609 11.6191 4.45898 11.9062 4.45898 12.2686C4.45898 12.6309 4.74609 12.918 5.1084 12.918Z\"></path>\n        </svg>\n      );\n    }\n    case \"people\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M10.9536 7.90088C12.217 7.90088 13.2559 6.79468 13.2559 5.38525C13.2559 4.01514 12.2114 2.92017 10.9536 2.92017C9.70142 2.92017 8.65137 4.02637 8.65698 5.39087C8.6626 6.79468 9.69019 7.90088 10.9536 7.90088ZM4.4231 8.03003C5.52368 8.03003 6.42212 7.05859 6.42212 5.83447C6.42212 4.63843 5.51245 3.68945 4.4231 3.68945C3.33374 3.68945 2.41846 4.64966 2.41846 5.84009C2.42407 7.05859 3.32251 8.03003 4.4231 8.03003ZM1.37964 13.168H5.49561C4.87231 12.292 5.43384 10.6074 6.78711 9.51807C6.18628 9.14746 5.37769 8.87231 4.4231 8.87231C1.95239 8.87231 0.262207 10.6917 0.262207 12.1628C0.262207 12.7974 0.548584 13.168 1.37964 13.168ZM7.50024 13.168H14.407C15.4009 13.168 15.7322 12.8423 15.7322 12.2864C15.7322 10.8489 13.8679 8.88354 10.9536 8.88354C8.04492 8.88354 6.17505 10.8489 6.17505 12.2864C6.17505 12.8423 6.50635 13.168 7.50024 13.168Z\"></path>\n        </svg>\n      );\n    }\n    case \"phone_number\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M5.09473 11.2021C7.11133 13.2188 9.55859 14.7705 11.5547 14.7705C12.4502 14.7705 13.2363 14.4629 13.8652 13.7656C14.2275 13.3555 14.4531 12.8838 14.4531 12.4121C14.4531 12.0498 14.3164 11.7012 13.9678 11.4551L11.8691 9.96484C11.541 9.73242 11.2607 9.62305 11.0146 9.62305C10.6934 9.62305 10.4131 9.80078 10.0986 10.1152L9.59961 10.6074C9.52441 10.6826 9.42871 10.71 9.33984 10.71C9.23047 10.71 9.12793 10.6689 9.05273 10.6348C8.62891 10.4023 7.89062 9.7666 7.20703 9.08984C6.53027 8.40625 5.89453 7.6748 5.66895 7.24414C5.62793 7.16895 5.58691 7.06641 5.58691 6.96387C5.58691 6.875 5.61426 6.7793 5.69629 6.7041L6.18164 6.20508C6.49609 5.88379 6.68066 5.60352 6.68066 5.28223C6.68066 5.03613 6.56445 4.7627 6.33203 4.42773L4.85547 2.34961C4.60254 2.00098 4.24707 1.85059 3.85742 1.85059C3.39941 1.85059 2.93457 2.05566 2.52441 2.44531C1.84766 3.08789 1.54688 3.88086 1.54688 4.76953C1.54688 6.76562 3.07812 9.18555 5.09473 11.2021Z\"></path>\n        </svg>\n      );\n    }\n    case \"relation\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M13.1475 10.5869V3.72363C13.1475 3.25195 12.833 2.93066 12.3477 2.93066H5.48438C5.02637 2.93066 4.70508 3.27246 4.70508 3.67578C4.70508 4.07227 5.05371 4.40039 5.46387 4.40039H7.89746L10.8438 4.30469L9.59961 5.39844L3.08496 11.9199C2.92773 12.0771 2.8457 12.2686 2.8457 12.46C2.8457 12.8564 3.20801 13.2256 3.61816 13.2256C3.80957 13.2256 3.99414 13.1504 4.15137 12.9932L10.6729 6.47168L11.7803 5.22754L11.6641 8.05762V10.6074C11.6641 11.0176 11.9922 11.373 12.4023 11.373C12.8057 11.373 13.1475 11.0312 13.1475 10.5869Z\"></path>\n        </svg>\n      );\n    }\n    case \"rollup\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M1.25293 6.82031C1.25293 9.88965 3.74805 12.3848 6.81738 12.3848C7.95898 12.3848 9.00488 12.0361 9.87988 11.4414L13.0244 14.5859C13.2158 14.7842 13.4824 14.873 13.749 14.873C14.3301 14.873 14.7471 14.4355 14.7471 13.8682C14.7471 13.5947 14.6514 13.3418 14.4668 13.1504L11.3428 10.0195C11.9922 9.12402 12.3818 8.0166 12.3818 6.82031C12.3818 3.75098 9.88672 1.25586 6.81738 1.25586C3.74805 1.25586 1.25293 3.75098 1.25293 6.82031ZM2.70215 6.82031C2.70215 4.55078 4.54102 2.70508 6.81738 2.70508C9.08691 2.70508 10.9326 4.55078 10.9326 6.82031C10.9326 9.08984 9.08691 10.9355 6.81738 10.9355C4.54102 10.9355 2.70215 9.08984 2.70215 6.82031Z\"></path>\n        </svg>\n      );\n    }\n    case \"select\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M8 15.126C11.8623 15.126 15.0615 11.9336 15.0615 8.06445C15.0615 4.20215 11.8623 1.00293 7.99316 1.00293C4.13086 1.00293 0.938477 4.20215 0.938477 8.06445C0.938477 11.9336 4.1377 15.126 8 15.126ZM8 13.7383C4.85547 13.7383 2.33301 11.209 2.33301 8.06445C2.33301 4.91992 4.84863 2.39746 7.99316 2.39746C11.1377 2.39746 13.6738 4.91992 13.6738 8.06445C13.6738 11.209 11.1445 13.7383 8 13.7383ZM7.62402 10.6348C7.79492 10.915 8.20508 10.9287 8.37598 10.6348L10.666 6.73145C10.8574 6.41016 10.7002 6.04102 10.3652 6.04102H5.62793C5.29297 6.04102 5.14941 6.43066 5.32031 6.73145L7.62402 10.6348Z\"></path>\n        </svg>\n      );\n    }\n    case \"status\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M8.75488 1.02344C8.75488 0.613281 8.41309 0.264648 8.00293 0.264648C7.59277 0.264648 7.25098 0.613281 7.25098 1.02344V3.11523C7.25098 3.51855 7.59277 3.86719 8.00293 3.86719C8.41309 3.86719 8.75488 3.51855 8.75488 3.11523V1.02344ZM3.91504 5.0293C4.20215 5.31641 4.69434 5.32324 4.97461 5.03613C5.26855 4.74902 5.26855 4.25684 4.98145 3.96973L3.53906 2.52051C3.25195 2.2334 2.7666 2.21973 2.47949 2.50684C2.19238 2.79395 2.18555 3.28613 2.47266 3.57324L3.91504 5.0293ZM10.9629 4.01758C10.6826 4.30469 10.6826 4.79688 10.9697 5.08398C11.2568 5.37109 11.749 5.36426 12.0361 5.07715L13.4854 3.62793C13.7725 3.34082 13.7725 2.84863 13.4785 2.55469C13.1982 2.27441 12.7061 2.27441 12.4189 2.56152L10.9629 4.01758ZM15.0234 8.78906C15.4336 8.78906 15.7822 8.44727 15.7822 8.03711C15.7822 7.62695 15.4336 7.28516 15.0234 7.28516H12.9385C12.5283 7.28516 12.1797 7.62695 12.1797 8.03711C12.1797 8.44727 12.5283 8.78906 12.9385 8.78906H15.0234ZM0.975586 7.28516C0.56543 7.28516 0.223633 7.62695 0.223633 8.03711C0.223633 8.44727 0.56543 8.78906 0.975586 8.78906H3.07422C3.48438 8.78906 3.83301 8.44727 3.83301 8.03711C3.83301 7.62695 3.48438 7.28516 3.07422 7.28516H0.975586ZM12.0361 10.9902C11.749 10.71 11.2568 10.71 10.9629 10.9971C10.6826 11.2842 10.6826 11.7764 10.9697 12.0635L12.4258 13.5127C12.7129 13.7998 13.2051 13.793 13.4922 13.5059C13.7793 13.2256 13.7725 12.7266 13.4854 12.4395L12.0361 10.9902ZM2.52051 12.4395C2.22656 12.7266 2.22656 13.2188 2.50684 13.5059C2.79395 13.793 3.28613 13.7998 3.57324 13.5127L5.02246 12.0703C5.31641 11.7832 5.31641 11.291 5.03613 11.0039C4.74902 10.7168 4.25684 10.71 3.96973 10.9971L2.52051 12.4395ZM8.75488 12.9658C8.75488 12.5557 8.41309 12.207 8.00293 12.207C7.59277 12.207 7.25098 12.5557 7.25098 12.9658V15.0576C7.25098 15.4609 7.59277 15.8096 8.00293 15.8096C8.41309 15.8096 8.75488 15.4609 8.75488 15.0576V12.9658Z\"></path>\n        </svg>\n      );\n    }\n    case \"unique_id\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M12.252 7.9209C13.7217 7.9209 14.7266 6.93652 14.7266 5.50781C14.7266 4.0791 13.7217 3.10156 12.252 3.10156C10.8232 3.10156 9.8457 4.0791 9.8457 5.50781C9.8457 6.93652 10.8301 7.9209 12.252 7.9209ZM2.00488 13.1367C2.45605 13.1367 2.72949 12.8496 2.72949 12.3848V5.83594L7.35059 12.5967C7.6377 12.9932 7.86328 13.1367 8.20508 13.1367C8.69043 13.1367 8.96387 12.8359 8.96387 12.3232V3.8877C8.96387 3.42285 8.69043 3.12891 8.23242 3.12891C7.78809 3.12891 7.50781 3.41602 7.50781 3.8877V10.4229L2.89355 3.66895C2.60645 3.25879 2.40137 3.12891 2.03906 3.12891C1.56738 3.12891 1.27344 3.4502 1.27344 3.94238V12.3848C1.27344 12.8496 1.55371 13.1367 2.00488 13.1367ZM12.252 6.84766C11.5615 6.84766 11.0898 6.30762 11.0898 5.50781C11.0898 4.70801 11.5615 4.16797 12.252 4.16797C12.9902 4.16797 13.4756 4.70801 13.4756 5.50781C13.4756 6.30762 12.9834 6.84766 12.252 6.84766ZM10.625 9.77344H13.9541C14.3506 9.77344 14.624 9.54102 14.624 9.14453C14.624 8.74805 14.3506 8.50195 13.9541 8.50195H10.625C10.2285 8.50195 9.96191 8.74805 9.96191 9.14453C9.96191 9.54102 10.2285 9.77344 10.625 9.77344Z\"></path>\n        </svg>\n      );\n    }\n    case \"url\": {\n      return (\n        <svg\n          role=\"graphics-symbol\"\n          viewBox=\"0 0 16 16\"\n          className=\"typesText notion-property-icon\"\n        >\n          <path d=\"M7.69922 10.8945L8.73828 9.84863C7.91797 9.77344 7.34375 9.51367 6.91992 9.08984C5.76465 7.93457 5.76465 6.29395 6.91309 5.14551L9.18262 2.87598C10.3379 1.7207 11.9717 1.7207 13.127 2.87598C14.2891 4.04492 14.2822 5.67188 13.1338 6.82031L11.958 7.99609C12.1768 8.49512 12.2451 9.10352 12.1289 9.62988L14.0908 7.6748C15.7725 6 15.7793 3.62109 14.084 1.92578C12.3887 0.223633 10.0098 0.237305 8.33496 1.91211L5.95605 4.29785C4.28125 5.97266 4.26758 8.35156 5.96289 10.0469C6.36621 10.4434 6.90625 10.7441 7.69922 10.8945ZM8.30078 5.13184L7.26855 6.17773C8.08203 6.25293 8.66309 6.51953 9.08008 6.93652C10.2422 8.09863 10.2422 9.73242 9.08691 10.8809L6.81738 13.1504C5.66211 14.3057 4.03516 14.3057 2.87305 13.1504C1.71094 11.9883 1.71777 10.3545 2.87305 9.20605L4.04199 8.03027C3.83008 7.53125 3.75488 6.92969 3.87109 6.39648L1.91602 8.35156C0.234375 10.0264 0.227539 12.4121 1.92285 14.1074C3.61816 15.8027 5.99707 15.7891 7.67188 14.1143L10.0439 11.7354C11.7256 10.0537 11.7324 7.6748 10.0371 5.98633C9.64062 5.58301 9.10059 5.28223 8.30078 5.13184Z\"></path>\n        </svg>\n      );\n    }\n    default: {\n      return null;\n    }\n  }\n};\n","import { PropertyIcon } from \"./PropertyIcon.js\";\n\nimport type { DatabaseObject } from \"../../types/notion/database.js\";\nimport type { PropertyItemObject } from \"../../types/notion/pages/properties/propertyItem.js\";\n\nexport const PropertyName = ({\n  propertyName,\n  propertyItem,\n}: {\n  propertyName: string;\n  propertyItem: PropertyItemObject | DatabaseObject[\"properties\"][string];\n}) => {\n  return (\n    <div className=\"notion-property-name\">\n      <PropertyIcon property={propertyItem} />\n      <span>{propertyName}</span>\n    </div>\n  );\n};\n","import { PropertyItem } from \"./PropertyItem.js\";\nimport { PropertyName } from \"./PropertyName.js\";\n\nimport type { PropertyItemObject } from \"../../types/notion/pages/properties/propertyItem.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  propertyName: string;\n  propertyItem: PropertyItemObject;\n  hidePropertyName?: boolean;\n};\n\nexport const Property: FC<Props> = ({\n  propertyName,\n  propertyItem,\n  hidePropertyName = false,\n}) => {\n  return (\n    <div className=\"notion-property\">\n      {!hidePropertyName && (\n        <PropertyName propertyName={propertyName} propertyItem={propertyItem} />\n      )}\n      <PropertyItem key={propertyItem.id} property={propertyItem} />\n    </div>\n  );\n};\n","import { Property } from \"./Property.js\";\n\nimport type { PropertyItemObject } from \"../../types/notion/pages/properties/propertyItem.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  properties: Record<string, PropertyItemObject>;\n  hidePropertyName?: boolean;\n};\n\nexport const Properties: FC<Props> = ({\n  properties,\n  hidePropertyName = false,\n}) => {\n  return (\n    <div className=\"notion-properties\">\n      {Object.entries(properties).map(([name, item]) => {\n        return (\n          <Property\n            propertyName={name}\n            propertyItem={item}\n            hidePropertyName={hidePropertyName}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import { splitTitleAndOtherProperties } from \"../../../utils.js\";\nimport { Cover } from \"../../Common/Cover.js\";\nimport { Icon } from \"../../Common/Icon.js\";\nimport { useMapper } from \"../../hooks.js\";\nimport { Properties } from \"../../Property/Properties.js\";\n\nimport type { PageObject } from \"../../../types/notion/pages/page.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  page: PageObject;\n};\n\nexport const Card: FC<Props> = ({ page }) => {\n  const { Link } = useMapper();\n\n  const { title, other } = splitTitleAndOtherProperties(page.properties);\n\n  return (\n    <div id={page.id} className=\"notion-gallery-card\">\n      <Link prefix=\"/\" link={page.id}>\n        <div className=\"notion-gallery-card-cover\">\n          <Cover cover={page.cover} />\n        </div>\n        <div className=\"notion-gallery-card-title\">\n          <span className=\"notion-gallery-card-title-icon\">\n            <Icon icon={page.icon} hideDefaultIcon />\n          </span>\n          <span className=\"notion-gallery-card-title-text\">\n            {title?.title.map((text) => text.plain_text).join(\"\") ??\n              \"Annoymous\"}\n          </span>\n        </div>\n        <div className=\"notion-gallery-card-properties\">\n          <Properties properties={other} hidePropertyName />\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import { Card } from \"./Card.js\";\n\nimport type { PageObject } from \"../../../types/notion/pages/page.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  pages: Array<PageObject>;\n};\n\nexport const Gallery: FC<Props> = ({ pages }) => {\n  return (\n    <div className=\"notion-gallery\">\n      {pages.map((page) => (\n        <Card key={page.id} page={page} />\n      ))}\n    </div>\n  );\n};\n","import { splitTitleAndOtherProperties } from \"../../../utils.js\";\nimport { Icon } from \"../../Common/Icon.js\";\nimport { useMapper } from \"../../hooks.js\";\nimport { Properties } from \"../../Property/Properties.js\";\n\nimport type { PageObject } from \"../../../types/notion/pages/page.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  page: PageObject;\n};\n\nexport const ListItem: FC<Props> = ({ page }) => {\n  const { Link } = useMapper();\n\n  const { title, other } = splitTitleAndOtherProperties(page.properties);\n\n  return (\n    <div id={page.id} className=\"notion-list-item\">\n      <Link prefix=\"/\" link={page.id}>\n        <div className=\"notion-list-item-title\">\n          <span className=\"notion-list-item-title-icon\">\n            <Icon icon={page.icon} />\n          </span>\n          <span className=\"notion-list-item-title-text\">\n            {title?.title.map((text) => text.plain_text).join(\"\") ??\n              \"Annoymous\"}\n          </span>\n        </div>\n        <div className=\"notion-list-item-properties\">\n          <Properties properties={other} hidePropertyName />\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import { ListItem } from \"./ListItem.js\";\n\nimport type { PageObject } from \"../../../types/notion/pages/page.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  pages: Array<PageObject>;\n};\n\nexport const List: FC<Props> = ({ pages }) => {\n  return (\n    <div className=\"notion-list\">\n      {pages.map((page) => (\n        <ListItem key={page.id} page={page} />\n      ))}\n    </div>\n  );\n};\n","import { PropertyName } from \"../../Property/PropertyName.js\";\n\nimport type { DatabaseObject } from \"../../../types/notion/database.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  database: DatabaseObject;\n};\n\nexport const Header: FC<Props> = ({ database }) => {\n  return (\n    <tr>\n      {Object.entries(database.properties).map(([name, item]) => {\n        return (\n          item && (\n            <th>\n              <PropertyName propertyName={name} propertyItem={item} />\n            </th>\n          )\n        );\n      })}\n    </tr>\n  );\n};\n","import { Icon } from \"../../Common/Icon.js\";\nimport { useMapper } from \"../../hooks.js\";\n\nimport type { PageObject } from \"../../../types/notion/pages/page.js\";\nimport type { TitlePropertyItemObject } from \"../../../types/notion/pages/properties/title.js\";\n\nexport const TableTitle = (\n  title: TitlePropertyItemObject,\n  page: PageObject\n) => {\n  const { Link } = useMapper();\n\n  return (\n    <div>\n      <Link prefix=\"/\" link={page.id} key={title.id}>\n        {page.icon && <Icon icon={page.icon} />}\n        <span className=\"notion-table-row-title\">\n          {title.title.map((x) => x.plain_text)}\n        </span>\n      </Link>\n    </div>\n  );\n};\n","import { Property } from \"../../../components/Property/Property.js\";\nimport { isTitleProperty } from \"../../../utils.js\";\n\nimport { TableTitle } from \"./Title.js\";\n\nimport type { PageObject } from \"../../../types/notion/pages/page.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  page: PageObject;\n};\n\nexport const Row: FC<Props> = ({ page }) => {\n  return (\n    <tr id={page.id} className=\"notion-table-row\">\n      {Object.entries(page.properties).map(([name, item]) => {\n        return (\n          item && (\n            <td>\n              {isTitleProperty(item) ? (\n                TableTitle(item, page)\n              ) : (\n                <Property\n                  propertyName={name}\n                  propertyItem={item}\n                  hidePropertyName\n                />\n              )}\n            </td>\n          )\n        );\n      })}\n    </tr>\n  );\n};\n","import { Header } from \"./Header.js\";\nimport { Row } from \"./Row.js\";\n\nimport type { DatabaseObject } from \"../../../types/notion/database.js\";\nimport type { PageObject } from \"../../../types/notion/pages/page.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  database: DatabaseObject;\n  pages: Array<PageObject>;\n};\n\nexport const Table: FC<Props> = ({ database, pages }) => {\n  return (\n    <table className=\"notion-table\">\n      <thead>\n        <Header database={database} />\n      </thead>\n      <tbody>\n        {pages.map((page) => {\n          return <Row key={page.id} page={page} />;\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { selectProperties } from \"../../utils.js\";\nimport { Cover } from \"../Common/Cover.js\";\nimport { Icon } from \"../Common/Icon.js\";\nimport { Title } from \"../Common/Title.js\";\nimport { RichText } from \"../index.js\";\n\nimport { Gallery } from \"./Gallery/Gallery.js\";\nimport { List } from \"./List/List.js\";\nimport { Table } from \"./Table/Table.js\";\n\nimport type { DatabaseObject } from \"../../types/notion/database.js\";\nimport type { PageObject } from \"../../types/notion/pages/page.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  database: DatabaseObject;\n  pages: Array<PageObject>;\n  displayProperties?: Array<string>;\n  hideCover?: boolean;\n  hideIcon?: boolean;\n  hideTitle?: boolean;\n  hideDescription?: boolean;\n  viewType?: \"table\" | \"gallery\" | \"list\";\n  theme?: \"light\" | \"dark\";\n};\n\nexport const Database: FC<Props> = ({\n  database,\n  pages,\n  displayProperties,\n  hideCover = false,\n  hideIcon = false,\n  hideTitle = false,\n  hideDescription = false,\n  viewType = \"table\",\n  theme = \"light\",\n}) => {\n  // Filter properties to display\n  if (displayProperties) {\n    database.properties = selectProperties(\n      database.properties,\n      displayProperties\n    );\n    pages.forEach((page) => {\n      page.properties = selectProperties(page.properties, displayProperties);\n      return page;\n    });\n  }\n\n  return (\n    <div className={`notion-root notion-${theme}`}>\n      <div id={database.id} className=\"notion-database\">\n        {!hideCover && (\n          <div className=\"notion-database-cover\">\n            <Cover cover={database.cover} />\n          </div>\n        )}\n        {!hideIcon && (\n          <div className=\"notion-database-icon\">\n            <Icon icon={database.icon} />\n          </div>\n        )}\n        {!hideTitle && (\n          <div className=\"notion-database-title\">\n            <Title title={database.title} />\n          </div>\n        )}\n        {!hideDescription && (\n          <div className=\"notion-database-description\">\n            <RichText richText={database.description} />\n          </div>\n        )}\n        <div className=\"notion-database-collection\">\n          {viewType === \"gallery\" ? (\n            <Gallery pages={pages} />\n          ) : viewType === \"list\" ? (\n            <List pages={pages} />\n          ) : viewType === \"table\" ? (\n            <Table database={database} pages={pages} />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { selectProperties, splitTitleAndOtherProperties } from \"../../utils.js\";\nimport { Cover } from \"../Common/Cover.js\";\nimport { Icon } from \"../Common/Icon.js\";\nimport { Title } from \"../Common/Title.js\";\nimport { Properties } from \"../Property/Properties.js\";\n\nimport type { PageObject } from \"../../types/notion/pages/page.js\";\nimport type { ComponentType } from \"react\";\n\ntype Props = {\n  page: PageObject;\n  displayProperties?: Array<string>;\n  hideCover?: boolean;\n  hideIcon?: boolean;\n  hideTitle?: boolean;\n  hideProperties?: boolean;\n};\n\ntype PageComponent = ComponentType<Props>;\n\nexport const PageMeta: PageComponent = ({\n  page,\n  displayProperties,\n  hideCover = false,\n  hideIcon = false,\n  hideTitle = false,\n  hideProperties = false,\n}) => {\n  const { title, other } = splitTitleAndOtherProperties(page.properties);\n\n  const properties = displayProperties\n    ? selectProperties(other, displayProperties)\n    : other;\n\n  return (\n    <div id={page.id} className=\"notion-page\">\n      {!hideCover && (\n        <div className=\"notion-page-cover\">\n          <Cover cover={page.cover} />\n        </div>\n      )}\n\n      {!hideIcon && (\n        <div className=\"notion-page-icon\">\n          <Icon icon={page.icon} />\n        </div>\n      )}\n      {!hideTitle && (\n        <div className=\"notion-page-title\">\n          <Title title={title?.title ?? []} />\n        </div>\n      )}\n      {!hideProperties && (\n        <div className=\"notion-page-properties\">\n          <Properties properties={properties} />\n        </div>\n      )}\n    </div>\n  );\n};\n","\"use client\";\n\nimport { BlockList } from \"../Blocks/BlockList.js\";\nimport { AnnotationItemProvider } from \"../Mapper/Annotation.js\";\nimport { BlockProvider } from \"../Mapper/Block.js\";\nimport { LinkProvider } from \"../Mapper/Link.js\";\nimport { PropertyItemProvider } from \"../Mapper/Property.js\";\nimport { RichTextItemProvider } from \"../Mapper/RichText.js\";\n\nimport { PageMeta } from \"./PageMeta.js\";\n\nimport type { BlockBlockObject } from \"../../types/notion/blocks/block.js\";\nimport type { LinkProps } from \"../../types/notion/common/link.js\";\nimport type { AnnotationItemMapper } from \"../../types/notion/mapper/annotationItem.js\";\nimport type { BlockMapper } from \"../../types/notion/mapper/block.js\";\nimport type { PropertyItemMapper } from \"../../types/notion/mapper/propertyItem.js\";\nimport type { RichTextItemMapper } from \"../../types/notion/mapper/richTextItem.js\";\nimport type { PageObject } from \"../../types/notion/pages/page.js\";\nimport type { FC } from \"react\";\n\ntype Props = {\n  page?: PageObject;\n  blocks?: Array<BlockBlockObject>;\n  displayProperties?: Array<string>;\n  hideProperties?: boolean;\n  hideCover?: boolean;\n  hideIcon?: boolean;\n  hideTitle?: boolean;\n  propertyMapper?: PropertyItemMapper;\n  blockMapper?: BlockMapper;\n  richTextItemMapper?: RichTextItemMapper;\n  annotationMapper?: AnnotationItemMapper;\n  LinkComponent?: React.ComponentType<LinkProps>;\n  theme?: \"light\" | \"dark\";\n};\n\nexport const Page: FC<Props> = ({\n  page,\n  blocks,\n  displayProperties,\n  hideCover = false,\n  hideIcon = false,\n  hideTitle = false,\n  hideProperties = false,\n  propertyMapper,\n  blockMapper,\n  richTextItemMapper,\n  annotationMapper,\n  LinkComponent,\n  theme = \"light\",\n}) => {\n  return (\n    <div className={`notion-root notion-${theme}`}>\n      {page && (\n        <PropertyItemProvider mapper={propertyMapper}>\n          <PageMeta\n            page={page}\n            displayProperties={displayProperties}\n            hideCover={hideCover}\n            hideIcon={hideIcon}\n            hideTitle={hideTitle}\n            hideProperties={hideProperties}\n          />\n        </PropertyItemProvider>\n      )}\n      {blocks && (\n        <BlockProvider mapper={blockMapper}>\n          <RichTextItemProvider mapper={richTextItemMapper}>\n            <AnnotationItemProvider mapper={annotationMapper}>\n              <LinkProvider link={LinkComponent}>\n                <BlockList blocks={blocks} />\n              </LinkProvider>\n            </AnnotationItemProvider>\n          </RichTextItemProvider>\n        </BlockProvider>\n      )}\n    </div>\n  );\n};\n","import { isFullUser } from \"@notionhq/client\";\n\nimport { DateComponent } from \"../Common/Date.js\";\nimport { useMapper } from \"../hooks.js\";\nimport { Icon } from \"../index.js\";\n\nimport type { MentionRichTextItemObject } from \"../../types/notion/richText/mention.js\";\nimport type { RichTextItemProps } from \"../../types/notion/richText/richTextItem.js\";\n\ntype Props = Omit<\n  RichTextItemProps<MentionRichTextItemObject>,\n  \"richTextItemMapper\"\n>;\n\nexport const Mention: React.FC<Props> = ({ richText: richTextItem }) => {\n  const { Link } = useMapper();\n\n  switch (richTextItem.mention.type) {\n    case \"database\":\n      return (\n        <span className=\"notion-database-mention-rich-text\">\n          <Link prefix=\"/\" link={richTextItem.mention.database.id}>\n            {richTextItem.mention.database.database && (\n              <Icon icon={richTextItem.mention.database.database?.icon} />\n            )}\n            {richTextItem.plain_text}\n          </Link>\n        </span>\n      );\n    case \"date\":\n      return (\n        <span className=\"notion-date-mention-rich-text\">\n          <DateComponent date={richTextItem.mention.date} />\n        </span>\n      );\n    case \"link_preview\":\n      return (\n        <a\n          href={richTextItem.mention.link_preview.url}\n          className=\"notion-link-preview-mention-rich-text\"\n        >\n          {richTextItem.plain_text}\n        </a>\n      );\n    case \"page\":\n      return (\n        <span className=\"notion-page-mention-rich-text\">\n          <Link link={richTextItem.mention.page.id}>\n            {richTextItem.mention.page.page && (\n              <Icon icon={richTextItem.mention.page.page?.icon} />\n            )}\n            {richTextItem.plain_text}\n          </Link>\n        </span>\n      );\n    case \"template_mention\":\n      console.warn(`${richTextItem.mention.type} is not supported.`);\n      return null;\n    case \"user\":\n      return (\n        <span className=\"notion-user-mention-rich-text\">\n          {isFullUser(richTextItem.mention.user) ? (\n            <img\n              className=\"notion-user-mention-rich-text-avatar\"\n              src={richTextItem.mention.user.avatar_url ?? undefined}\n              alt=\"user avater\"\n            />\n          ) : (\n            \"@\"\n          )}\n          {richTextItem.plain_text.replace(\"@\", \"\")}\n        </span>\n      );\n    default:\n      console.error(`unknown mention type.`);\n      return null;\n  }\n};\n","import { useMapper } from \"../hooks.js\";\n\nimport { InlineEquation } from \"./InlineEquation.js\";\nimport { Mention } from \"./Mention.js\";\nimport { Text } from \"./Text.js\";\n\nimport type { RichTextItemComponent } from \"../../types/notion/richText/richTextItem.js\";\n\nexport const RichTextItem: RichTextItemComponent = (props) => {\n  if (!props.richText) return null;\n\n  return (\n    <span className=\"notion-rich-text-item\">\n      <RichTextItemContent {...props} />\n    </span>\n  );\n};\n\nconst RichTextItemContent: RichTextItemComponent = ({\n  richText: richTextItem,\n}) => {\n  const { richTextItemMapper } = useMapper();\n\n  const mapper = {\n    equation: InlineEquation,\n    mention: Mention,\n    text: Text,\n    ...richTextItemMapper,\n  };\n\n  switch (richTextItem.type) {\n    case \"equation\": {\n      const TypeEquation = mapper[richTextItem.type];\n      return <TypeEquation richText={richTextItem} />;\n    }\n    case \"mention\": {\n      const TypeMention = mapper[richTextItem.type];\n      return <TypeMention richText={richTextItem} />;\n    }\n    case \"text\": {\n      const TypeText = mapper[richTextItem.type];\n      return <TypeText richText={richTextItem} />;\n    }\n    default:\n      console.warn(`${(richTextItem as { type: never }).type} is never.`);\n      return null;\n  }\n};\n"],"names":["LinkProvider","link","children","jsx","LinkContext","RichTextItemProvider","mapper","richTextItemMapper","useMapper","RichTextItemContext","RichText","richText","annotationMapper","LinkComponent","AnnotationItemProvider","item","index","RichTextItem","Audio","block","audioUrl","jsxs","BlockProvider","blockMapper","BlockContext","Bookmark","_b","_a","_f","_e","_g","_i","_h","splitTitleAndOtherProperties","properties","title","other","key","value","isTitleProperty","extractTitle","pageOrDatabase","property","selectPropertyById","id","name","selected","selectPropertyByName","selectProperties","selector","prev","keyOrId","selectedByName","selectedById","Breadcrumb","Link","array","titleRichText","Fragment","Icon","BlockList","blocks","BlocksContext","Block","BulletedListItem","BulletedList","Callout","Code","Column","ColumnList","column","Embed","useEffect","script","File","FileComponent","Heading1","Heading2","Heading3","Image","b","LinkToPage","icon","NumberedListItem","NumberedList","Paragraph","Pdf","pdfUrl","Quote","SyncedBlock","Table","table_row","TableRowRowHeader","TableRowColumnHeader","TableRowNoHeader","cell","Th","Td","TableRow","Template","ToDo","checked","Checkbox","Toggle","Unsupported","Video","videoUrl","BlockSwitcher","ChildDatabase","ChildPage","Divider","Equation","LinkPreview","TableOfContents","BlockComponent","BlockRenderer","theme","Title","PropertyItemProvider","propertyItemMapper","PropertyItemContext","RelationItem","relationItem","RelationProperty","propertyItem","RichTextProperty","TitleProperty","PropertyItem","propertyMapper","PropertyItemSwitcher","CheckboxProperty","CreatedByProperty","CreatedTimeProperty","DateProperty","EmailProperty","FilesProperty","FormulaProperty","LastEditedByProperty","LastEditedTimeProperty","MultiSelectProperty","NumberProperty","PeopleProperty","PhoneNumberProperty","RollupProperty","SelectProperty","StatusProperty","UniqueIdProperty","UrlProperty","PropertyComponent","PropertyIcon","PropertyName","propertyName","Property","hidePropertyName","Properties","Card","page","Cover","text","Gallery","pages","ListItem","List","Header","database","TableTitle","x","Row","Database","displayProperties","hideCover","hideIcon","hideTitle","hideDescription","viewType","PageMeta","hideProperties","Page","Mention","richTextItem","DateComponent","isFullUser","props","RichTextItemContent","InlineEquation","Text","TypeEquation","TypeMention","TypeText"],"mappings":"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"}