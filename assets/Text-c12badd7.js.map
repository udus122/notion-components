{"version":3,"file":"Text-c12badd7.js","sources":["../../src/components/RichText/Annotation/Annotation.tsx","../../src/components/Mapper/Annotation.tsx","../../src/components/RichText/RichTextItem.tsx","../../src/components/RichText/RichText.tsx","../../src/components/Blocks/Audio.tsx","../../src/components/Blocks/Bookmark.tsx","../../src/utils.ts","../../src/components/Blocks/Icon.tsx","../../src/components/Blocks/Breadcrumb.tsx","../../src/components/Mapper/Link.tsx","../../src/components/RichText/InlineEquation.tsx","../../node_modules/@notionhq/client/build/src/utils.js","../../node_modules/@notionhq/client/build/src/logging.js","../../node_modules/@notionhq/client/build/src/errors.js","../../node_modules/@notionhq/client/build/src/api-endpoints.js","../../node_modules/node-fetch/browser.js","../../node_modules/@notionhq/client/build/src/Client.js","../../node_modules/@notionhq/client/build/src/helpers.js","../../node_modules/@notionhq/client/build/src/index.js","../../src/components/RichText/Mention.tsx","../../src/components/Mapper/RichText.tsx","../../src/components/Blocks/Block.tsx","../../src/components/Blocks/Blocks.tsx","../../src/components/Blocks/BulletedListItem.tsx","../../src/components/Blocks/BulletedList.tsx","../../src/components/Blocks/Callout.tsx","../../src/components/Blocks/ChildDatabase.tsx","../../src/components/Blocks/ChildPage.tsx","../../src/components/Blocks/Code.tsx","../../src/components/Blocks/ColumnList.tsx","../../src/components/Blocks/Embed.tsx","../../src/components/Blocks/File.tsx","../../src/components/Blocks/Heading1.tsx","../../src/components/Blocks/Heading2.tsx","../../src/components/Blocks/Heading3.tsx","../../src/components/Blocks/Image.tsx","../../src/components/Blocks/LinkPreview.tsx","../../src/components/Blocks/LinkToPage.tsx","../../src/components/Blocks/NumberedListItem.tsx","../../src/components/Blocks/NumberedList.tsx","../../src/components/Blocks/Paragraph.tsx","../../src/components/Blocks/Pdf.tsx","../../src/components/Blocks/Quote.tsx","../../src/components/Blocks/SyncedBlock.tsx","../../src/components/Blocks/Table.tsx","../../src/components/Blocks/TableOfContents.tsx","../../src/components/Blocks/ToDo.tsx","../../src/components/Blocks/Toggle.tsx","../../src/components/Blocks/Unsupported.tsx","../../src/components/Blocks/Video.tsx","../../src/components/Mapper/Block.tsx","../../src/components/hooks.ts","../../src/components/RichText/Text.tsx"],"sourcesContent":["import { useMapper } from \"../../hooks.js\";\n\nimport type { RichTextItem } from \"@udus/notion-libs\";\nimport type React from \"react\";\n\nexport const Annotation: React.FC<{\n  richTextItem: RichTextItem;\n  children: React.ReactNode;\n}> = ({ richTextItem, children }) => {\n  const { annotationMapper } = useMapper();\n\n  let element = children;\n  // TODO: ここをObject.entriesとreduceで書き換える\n  if (richTextItem.annotations.bold) {\n    const BoldAnnotation = annotationMapper[\"bold\"];\n    element = (\n      <BoldAnnotation richTextItem={richTextItem}>{element}</BoldAnnotation>\n    );\n  }\n  if (richTextItem.annotations.italic) {\n    const ItalicAnnotation = annotationMapper[\"italic\"];\n    element = (\n      <ItalicAnnotation richTextItem={richTextItem}>{element}</ItalicAnnotation>\n    );\n  }\n  if (richTextItem.annotations.strikethrough) {\n    const StrikethroughAnnotation = annotationMapper[\"strikethrough\"];\n    element = (\n      <StrikethroughAnnotation richTextItem={richTextItem}>\n        {element}\n      </StrikethroughAnnotation>\n    );\n  }\n  if (richTextItem.annotations.underline) {\n    const UnderlineAnnotation = annotationMapper[\"underline\"];\n    element = (\n      <UnderlineAnnotation richTextItem={richTextItem}>\n        {element}\n      </UnderlineAnnotation>\n    );\n  }\n  if (richTextItem.annotations.code) {\n    const InlineCodeAnnotation = annotationMapper[\"code\"];\n    element = (\n      <InlineCodeAnnotation richTextItem={richTextItem}>\n        {element}\n      </InlineCodeAnnotation>\n    );\n  }\n  if (richTextItem?.annotations.color) {\n    const ColorAnnotation = annotationMapper[\"color\"];\n    element = (\n      <ColorAnnotation richTextItem={richTextItem}>{element}</ColorAnnotation>\n    );\n  }\n  return <>{element}</>;\n};\n","import { createContext, useContext, type FC, type ReactNode } from \"react\";\n\nimport {\n  Color,\n  Bold,\n  Italic,\n  Strikethrough,\n  Underline,\n  InlineCode,\n} from \"../RichText/Annotation/index.js\";\n\nexport const AnnotationContext = createContext({\n  color: Color,\n  bold: Bold,\n  italic: Italic,\n  strikethrough: Strikethrough,\n  underline: Underline,\n  code: InlineCode,\n});\n\nexport const AnnotationProvider: FC<{\n  mapper?: object;\n  children: ReactNode;\n}> = ({ mapper, children }) => {\n  if (!mapper) {\n    return children;\n  }\n  const annotationMapper = useContext(AnnotationContext);\n  return (\n    <AnnotationContext.Provider value={{ ...annotationMapper, ...mapper }}>\n      {children}\n    </AnnotationContext.Provider>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\n\nimport type { RichTextProps } from \"./RichText.js\";\nimport type { RichTextItem as RichTextItemType } from \"@udus/notion-libs\";\n\ntype Props = RichTextProps<RichTextItemType>;\n\nexport const RichTextItem: React.FC<Props> = (props) => {\n  if (!props.richText) return null;\n  return (\n    <span className=\"notion_rich_text_item\">\n      <RichTextItemContent {...props} />\n    </span>\n  );\n};\n\nconst RichTextItemContent: React.FC<Props> = ({ richText: richTextItem }) => {\n  const { richTextItemMapper } = useMapper();\n\n  switch (richTextItem.type) {\n    case \"text\": {\n      const TypeText = richTextItemMapper[richTextItem.type];\n      return <TypeText richText={richTextItem} />;\n    }\n    case \"equation\": {\n      const TypeEquation = richTextItemMapper[richTextItem.type];\n      return <TypeEquation richText={richTextItem} />;\n    }\n    case \"mention\": {\n      const TypeMention = richTextItemMapper[richTextItem.type];\n      return <TypeMention richText={richTextItem} />;\n    }\n    default:\n      console.warn(`${(richTextItem as { type: never }).type} is never.`);\n      return null;\n  }\n};\n","import { RichTextItem } from \"./RichTextItem.js\";\n\nimport type { RichTextItem as RichTextItemType } from \"@udus/notion-libs\";\n\nexport type RichTextProps<T extends RichTextItemType> = {\n  richText: T;\n};\n\ntype Props = { richText: Array<RichTextItemType> };\n\nexport const RichText: React.FC<Props> = ({ richText }) => {\n  if (!richText) return null;\n\n  return (\n    <span className=\"notion_rich_text\">\n      {richText.map((item, index) => (\n        <RichTextItem\n          key={item?.id ?? `${index}-${item.plain_text}`}\n          richText={item}\n        />\n      ))}\n    </span>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { AudioBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<AudioBlockObject>;\n\nexport const Audio: React.FC<Props> = ({ block }) => {\n  const audioUrl =\n    block.audio.type == \"external\"\n      ? block.audio.external.url\n      : block.audio.type == \"file\"\n      ? block.audio.file.url\n      : \"\";\n  return (\n    <div id={block.id} className=\"notion_audio\">\n      <audio controls src={audioUrl}>\n        Your browser does not support HTML5 audios. You can download audio file\n        <a href={audioUrl}>here</a>.\n      </audio>\n      <div className=\"notion_caption notion_audio_caption\">\n        <RichText richText={block.audio.caption} />\n      </div>\n    </div>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { BookmarkBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<BookmarkBlockObject>;\n\nexport const Bookmark: React.FC<Props> = ({ block }) => {\n  const { Link } = useMapper();\n  return (\n    <div className=\"notion_bookmark\">\n      <Link href={block.bookmark.url}>\n        <div className=\"notion_bookmark_container\">\n          <div className=\"notion_bookmark_content\">\n            <div className=\"notion_bookmark_title\">\n              {block.bookmark?.site_meta?.title\n                ? block.bookmark.site_meta.title\n                : block.bookmark.url}\n            </div>\n            <div className=\"notion_bookmark_description\">\n              {block.bookmark?.site_meta?.description\n                ? block.bookmark.site_meta.description\n                : block.bookmark.url}\n            </div>\n            <div className=\"notion_bookmark_url\">\n              <span className=\"notion_bookmark_favicon\">\n                <img\n                  src={\n                    block.bookmark?.site_meta?.favicon\n                      ? block.bookmark.site_meta?.favicon\n                      : `https://www.google.com/s2/favicons?domain=${block.bookmark.url}`\n                  }\n                  alt=\"bookmark favicon\"\n                />\n              </span>\n              <span className=\"notion_bookmark_link_url\">\n                {block.bookmark.url}\n              </span>\n            </div>\n          </div>\n          {block.bookmark?.site_meta?.image && (\n            <div className=\"notion_bookmark_cover\">\n              <img\n                src={block.bookmark.site_meta.image}\n                alt=\"bookmark og image\"\n              />\n            </div>\n          )}\n        </div>\n      </Link>\n      <div className=\"notion_caption notion_bookmark_caption\">\n        <RichText richText={block.bookmark.caption} />\n      </div>\n    </div>\n  );\n};\n","import type {\n  PageObjectResponse,\n  DatabaseObjectResponse,\n} from \"@notionhq/client/build/src/api-endpoints.js\";\n\nexport function extractTitleProperty(\n  page_or_database: PageObjectResponse | DatabaseObjectResponse\n) {\n  if (page_or_database.object === \"database\") {\n    return page_or_database.title;\n  }\n  if (page_or_database.object === \"page\") {\n    return Object.values(page_or_database.properties).filter(\n      (\n        property\n      ): property is Extract<\n        PageObjectResponse[\"properties\"][string],\n        { type: \"title\" }\n      > => property.type === \"title\"\n    )[0].title;\n  }\n  return [];\n}\n","import type { Icon as IconType } from \"src/types/notion.js\";\n\ntype Props = {\n  icon: IconType;\n};\n\nexport const Icon: React.FC<Props> = ({ icon }) => {\n  if (!icon) return <DefaultIcon />;\n\n  return (\n    <div className=\"notion_icon\">\n      {!icon ? (\n        <DefaultIcon />\n      ) : icon.type === \"emoji\" ? (\n        <span className=\"notion_icon_emoji\">{icon.emoji}</span>\n      ) : icon.type === \"external\" ? (\n        <img\n          className=\"notion_icon_external\"\n          src={icon.external.url}\n          alt=\"notion callout icon\"\n        />\n      ) : icon.type === \"file\" ? (\n        <img\n          className=\"notion_icon_file\"\n          src={icon.file.url}\n          alt=\"notion callout icon\"\n        />\n      ) : (\n        <DefaultIcon />\n      )}\n    </div>\n  );\n};\n\nconst DefaultIcon = () => {\n  return (\n    <span>\n      <svg\n        viewBox=\"0 0 16 16\"\n        style={{\n          width: \"19.8px\",\n          height: \"19.8px\",\n          display: \"block\",\n          fill: \"rgba(255, 255, 255, 0.443)\",\n          flexShrink: 0,\n        }}\n      >\n        <path d=\"M4.35645 15.4678H11.6367C13.0996 15.4678 13.8584 14.6953 13.8584 13.2256V7.02539C13.8584 6.0752 13.7354 5.6377 13.1406 5.03613L9.55176 1.38574C8.97754 0.804688 8.50586 0.667969 7.65137 0.667969H4.35645C2.89355 0.667969 2.13477 1.44043 2.13477 2.91016V13.2256C2.13477 14.7021 2.89355 15.4678 4.35645 15.4678ZM4.46582 14.1279C3.80273 14.1279 3.47461 13.7793 3.47461 13.1436V2.99219C3.47461 2.36328 3.80273 2.00781 4.46582 2.00781H7.37793V5.75391C7.37793 6.73145 7.86328 7.20312 8.83398 7.20312H12.5186V13.1436C12.5186 13.7793 12.1836 14.1279 11.5205 14.1279H4.46582ZM8.95703 6.02734C8.67676 6.02734 8.56055 5.9043 8.56055 5.62402V2.19238L12.334 6.02734H8.95703ZM10.4336 9.00098H5.42969C5.16992 9.00098 4.98535 9.19238 4.98535 9.43164C4.98535 9.67773 5.16992 9.86914 5.42969 9.86914H10.4336C10.6797 9.86914 10.8643 9.67773 10.8643 9.43164C10.8643 9.19238 10.6797 9.00098 10.4336 9.00098ZM10.4336 11.2979H5.42969C5.16992 11.2979 4.98535 11.4893 4.98535 11.7354C4.98535 11.9746 5.16992 12.1592 5.42969 12.1592H10.4336C10.6797 12.1592 10.8643 11.9746 10.8643 11.7354C10.8643 11.4893 10.6797 11.2979 10.4336 11.2979Z\"></path>\n      </svg>\n    </span>\n  );\n};\n","import { Fragment } from \"react\";\n\nimport { extractTitleProperty } from \"../../utils.js\";\nimport { useMapper } from \"../hooks.js\";\n\nimport { Icon } from \"./Icon.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { BreadcrumbBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<BreadcrumbBlockObject>;\n\nexport const Breadcrumb: React.FC<Props> = ({ block }) => {\n  const { Link } = useMapper();\n  return (\n    <div id={block.id} className=\"notion_breadcrumb\">\n      {block.breadcrumb.parents.map((pageOrDatabase, index, array) => {\n        return (\n          <Fragment key={pageOrDatabase.id}>\n            <Link href={`/${pageOrDatabase.id}`}>\n              <span className=\"notion_breadcrumb_title\">\n                <Icon icon={pageOrDatabase.icon} />{\" \"}\n                {extractTitleProperty(pageOrDatabase)\n                  ?.map((t) => t.plain_text)\n                  .join(\"\")}\n              </span>\n            </Link>\n            {index !== array.length - 1 && (\n              <span className=\"notion_breadcrumb_separator\">/</span>\n            )}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n};\n","import {\n  type FC,\n  type ComponentType,\n  type ReactNode,\n  createContext,\n} from \"react\";\n\nimport { Link, type LinkProps } from \"../Link.js\";\n\nexport const LinkContext = createContext<ComponentType<LinkProps>>(Link);\n\nexport const LinkProvider: FC<{\n  link?: ComponentType<LinkProps>;\n  children: ReactNode;\n}> = ({ link, children }) => {\n  if (!link) {\n    return children;\n  }\n\n  return <LinkContext.Provider value={link}>{children}</LinkContext.Provider>;\n};\n","import katex from \"katex\";\n\nimport { Annotation } from \"./Annotation/Annotation.js\";\n\nimport type { RichTextProps } from \"./RichText.js\";\nimport type { EquationRichTextItem } from \"@udus/notion-libs\";\n\ntype Props = Omit<RichTextProps<EquationRichTextItem>, \"richTextItemMapper\">;\n\nexport const InlineEquation: React.FC<Props> = ({ richText: richTextItem }) => (\n  <span className=\"notion_rich_text_type_equation\">\n    <Annotation richTextItem={richTextItem}>\n      <span\n        dangerouslySetInnerHTML={{\n          // eslint-disable-next-line import/no-named-as-default-member\n          __html: katex.renderToString(richTextItem.equation.expression, {\n            displayMode: false,\n            output: \"mathml\",\n          }),\n        }}\n      />\n    </Annotation>\n  </span>\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isObject = exports.pick = exports.assertNever = void 0;\n/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param value The variable with no remaining values\n */\nfunction assertNever(value) {\n    throw new Error(`Unexpected value should never occur: ${value}`);\n}\nexports.assertNever = assertNever;\nfunction pick(base, keys) {\n    const entries = keys.map(key => [key, base === null || base === void 0 ? void 0 : base[key]]);\n    return Object.fromEntries(entries);\n}\nexports.pick = pick;\nfunction isObject(o) {\n    return typeof o === \"object\" && o !== null;\n}\nexports.isObject = isObject;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logLevelSeverity = exports.makeConsoleLogger = exports.LogLevel = void 0;\nconst utils_1 = require(\"./utils\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"debug\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"ERROR\"] = \"error\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nfunction makeConsoleLogger(name) {\n    return (level, message, extraInfo) => {\n        console[level](`${name} ${level}:`, message, extraInfo);\n    };\n}\nexports.makeConsoleLogger = makeConsoleLogger;\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nfunction logLevelSeverity(level) {\n    switch (level) {\n        case LogLevel.DEBUG:\n            return 20;\n        case LogLevel.INFO:\n            return 40;\n        case LogLevel.WARN:\n            return 60;\n        case LogLevel.ERROR:\n            return 80;\n        default:\n            return (0, utils_1.assertNever)(level);\n    }\n}\nexports.logLevelSeverity = logLevelSeverity;\n//# sourceMappingURL=logging.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildRequestError = exports.APIResponseError = exports.UnknownHTTPResponseError = exports.isHTTPResponseError = exports.RequestTimeoutError = exports.isNotionClientError = exports.ClientErrorCode = exports.APIErrorCode = void 0;\nconst utils_1 = require(\"./utils\");\n/**\n * Error codes returned in responses from the API.\n */\nvar APIErrorCode;\n(function (APIErrorCode) {\n    APIErrorCode[\"Unauthorized\"] = \"unauthorized\";\n    APIErrorCode[\"RestrictedResource\"] = \"restricted_resource\";\n    APIErrorCode[\"ObjectNotFound\"] = \"object_not_found\";\n    APIErrorCode[\"RateLimited\"] = \"rate_limited\";\n    APIErrorCode[\"InvalidJSON\"] = \"invalid_json\";\n    APIErrorCode[\"InvalidRequestURL\"] = \"invalid_request_url\";\n    APIErrorCode[\"InvalidRequest\"] = \"invalid_request\";\n    APIErrorCode[\"ValidationError\"] = \"validation_error\";\n    APIErrorCode[\"ConflictError\"] = \"conflict_error\";\n    APIErrorCode[\"InternalServerError\"] = \"internal_server_error\";\n    APIErrorCode[\"ServiceUnavailable\"] = \"service_unavailable\";\n})(APIErrorCode = exports.APIErrorCode || (exports.APIErrorCode = {}));\n/**\n * Error codes generated for client errors.\n */\nvar ClientErrorCode;\n(function (ClientErrorCode) {\n    ClientErrorCode[\"RequestTimeout\"] = \"notionhq_client_request_timeout\";\n    ClientErrorCode[\"ResponseError\"] = \"notionhq_client_response_error\";\n})(ClientErrorCode = exports.ClientErrorCode || (exports.ClientErrorCode = {}));\n/**\n * Base error type.\n */\nclass NotionClientErrorBase extends Error {\n}\n/**\n * @param error any value, usually a caught error.\n * @returns `true` if error is a `NotionClientError`.\n */\nfunction isNotionClientError(error) {\n    return (0, utils_1.isObject)(error) && error instanceof NotionClientErrorBase;\n}\nexports.isNotionClientError = isNotionClientError;\n/**\n * Narrows down the types of a NotionClientError.\n * @param error any value, usually a caught error.\n * @param codes an object mapping from possible error codes to `true`\n * @returns `true` if error is a `NotionClientError` with a code in `codes`.\n */\nfunction isNotionClientErrorWithCode(error, codes) {\n    return isNotionClientError(error) && error.code in codes;\n}\n/**\n * Error thrown by the client if a request times out.\n */\nclass RequestTimeoutError extends NotionClientErrorBase {\n    constructor(message = \"Request to Notion API has timed out\") {\n        super(message);\n        this.code = ClientErrorCode.RequestTimeout;\n        this.name = \"RequestTimeoutError\";\n    }\n    static isRequestTimeoutError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.RequestTimeout]: true,\n        });\n    }\n    static rejectAfterTimeout(promise, timeoutMS) {\n        return new Promise((resolve, reject) => {\n            const timeoutId = setTimeout(() => {\n                reject(new RequestTimeoutError());\n            }, timeoutMS);\n            promise\n                .then(resolve)\n                .catch(reject)\n                .then(() => clearTimeout(timeoutId));\n        });\n    }\n}\nexports.RequestTimeoutError = RequestTimeoutError;\nclass HTTPResponseError extends NotionClientErrorBase {\n    constructor(args) {\n        super(args.message);\n        this.name = \"HTTPResponseError\";\n        const { code, status, headers, rawBodyText } = args;\n        this.code = code;\n        this.status = status;\n        this.headers = headers;\n        this.body = rawBodyText;\n    }\n}\nconst httpResponseErrorCodes = {\n    [ClientErrorCode.ResponseError]: true,\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\nfunction isHTTPResponseError(error) {\n    if (!isNotionClientErrorWithCode(error, httpResponseErrorCodes)) {\n        return false;\n    }\n    return true;\n}\nexports.isHTTPResponseError = isHTTPResponseError;\n/**\n * Error thrown if an API call responds with an unknown error code, or does not respond with\n * a property-formatted error.\n */\nclass UnknownHTTPResponseError extends HTTPResponseError {\n    constructor(args) {\n        var _a;\n        super({\n            ...args,\n            code: ClientErrorCode.ResponseError,\n            message: (_a = args.message) !== null && _a !== void 0 ? _a : `Request to Notion API failed with status: ${args.status}`,\n        });\n        this.name = \"UnknownHTTPResponseError\";\n    }\n    static isUnknownHTTPResponseError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.ResponseError]: true,\n        });\n    }\n}\nexports.UnknownHTTPResponseError = UnknownHTTPResponseError;\nconst apiErrorCodes = {\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\n/**\n * A response from the API indicating a problem.\n * Use the `code` property to handle various kinds of errors. All its possible values are in `APIErrorCode`.\n */\nclass APIResponseError extends HTTPResponseError {\n    constructor() {\n        super(...arguments);\n        this.name = \"APIResponseError\";\n    }\n    static isAPIResponseError(error) {\n        return isNotionClientErrorWithCode(error, apiErrorCodes);\n    }\n}\nexports.APIResponseError = APIResponseError;\nfunction buildRequestError(response, bodyText) {\n    const apiErrorResponseBody = parseAPIErrorResponseBody(bodyText);\n    if (apiErrorResponseBody !== undefined) {\n        return new APIResponseError({\n            code: apiErrorResponseBody.code,\n            message: apiErrorResponseBody.message,\n            headers: response.headers,\n            status: response.status,\n            rawBodyText: bodyText,\n        });\n    }\n    return new UnknownHTTPResponseError({\n        message: undefined,\n        headers: response.headers,\n        status: response.status,\n        rawBodyText: bodyText,\n    });\n}\nexports.buildRequestError = buildRequestError;\nfunction parseAPIErrorResponseBody(body) {\n    if (typeof body !== \"string\") {\n        return;\n    }\n    let parsed;\n    try {\n        parsed = JSON.parse(body);\n    }\n    catch (parseError) {\n        return;\n    }\n    if (!(0, utils_1.isObject)(parsed) ||\n        typeof parsed[\"message\"] !== \"string\" ||\n        !isAPIErrorCode(parsed[\"code\"])) {\n        return;\n    }\n    return {\n        ...parsed,\n        code: parsed[\"code\"],\n        message: parsed[\"message\"],\n    };\n}\nfunction isAPIErrorCode(code) {\n    return typeof code === \"string\" && code in apiErrorCodes;\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\n// cspell:disable-file\n// Note: This is a generated file.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.oauthToken = exports.listComments = exports.createComment = exports.search = exports.createDatabase = exports.listDatabases = exports.queryDatabase = exports.updateDatabase = exports.getDatabase = exports.appendBlockChildren = exports.listBlockChildren = exports.deleteBlock = exports.updateBlock = exports.getBlock = exports.getPageProperty = exports.updatePage = exports.getPage = exports.createPage = exports.listUsers = exports.getUser = exports.getSelf = void 0;\nexports.getSelf = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [],\n    path: () => `users/me`,\n};\nexports.getUser = {\n    method: \"get\",\n    pathParams: [\"user_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `users/${p.user_id}`,\n};\nexports.listUsers = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `users`,\n};\nexports.createPage = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n    path: () => `pages`,\n};\nexports.getPage = {\n    method: \"get\",\n    pathParams: [\"page_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}`,\n};\nexports.updatePage = {\n    method: \"patch\",\n    pathParams: [\"page_id\"],\n    queryParams: [],\n    bodyParams: [\"properties\", \"icon\", \"cover\", \"archived\"],\n    path: (p) => `pages/${p.page_id}`,\n};\nexports.getPageProperty = {\n    method: \"get\",\n    pathParams: [\"page_id\", \"property_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}/properties/${p.property_id}`,\n};\nexports.getBlock = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.updateBlock = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"embed\",\n        \"type\",\n        \"archived\",\n        \"bookmark\",\n        \"image\",\n        \"video\",\n        \"pdf\",\n        \"file\",\n        \"audio\",\n        \"code\",\n        \"equation\",\n        \"divider\",\n        \"breadcrumb\",\n        \"table_of_contents\",\n        \"link_to_page\",\n        \"table_row\",\n        \"heading_1\",\n        \"heading_2\",\n        \"heading_3\",\n        \"paragraph\",\n        \"bulleted_list_item\",\n        \"numbered_list_item\",\n        \"quote\",\n        \"to_do\",\n        \"toggle\",\n        \"template\",\n        \"callout\",\n        \"synced_block\",\n        \"table\",\n    ],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.deleteBlock = {\n    method: \"delete\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.listBlockChildren = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\nexports.appendBlockChildren = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\"children\", \"after\"],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\nexports.getDatabase = {\n    method: \"get\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `databases/${p.database_id}`,\n};\nexports.updateDatabase = {\n    method: \"patch\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"title\",\n        \"description\",\n        \"icon\",\n        \"cover\",\n        \"properties\",\n        \"is_inline\",\n        \"archived\",\n    ],\n    path: (p) => `databases/${p.database_id}`,\n};\nexports.queryDatabase = {\n    method: \"post\",\n    pathParams: [\"database_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [\"sorts\", \"filter\", \"start_cursor\", \"page_size\", \"archived\"],\n    path: (p) => `databases/${p.database_id}/query`,\n};\nexports.listDatabases = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `databases`,\n};\nexports.createDatabase = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\n        \"parent\",\n        \"properties\",\n        \"icon\",\n        \"cover\",\n        \"title\",\n        \"description\",\n        \"is_inline\",\n    ],\n    path: () => `databases`,\n};\nexports.search = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n    path: () => `search`,\n};\nexports.createComment = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"rich_text\", \"discussion_id\"],\n    path: () => `comments`,\n};\nexports.listComments = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"block_id\", \"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `comments`,\n};\nexports.oauthToken = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"grant_type\", \"code\", \"redirect_uri\", \"external_account\"],\n    path: () => `oauth/token`,\n};\n//# sourceMappingURL=api-endpoints.js.map","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Client_auth, _Client_logLevel, _Client_logger, _Client_prefixUrl, _Client_timeoutMs, _Client_notionVersion, _Client_fetch, _Client_agent, _Client_userAgent;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logging_1 = require(\"./logging\");\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"./utils\");\nconst api_endpoints_1 = require(\"./api-endpoints\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst package_json_1 = require(\"../package.json\");\nclass Client {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        _Client_auth.set(this, void 0);\n        _Client_logLevel.set(this, void 0);\n        _Client_logger.set(this, void 0);\n        _Client_prefixUrl.set(this, void 0);\n        _Client_timeoutMs.set(this, void 0);\n        _Client_notionVersion.set(this, void 0);\n        _Client_fetch.set(this, void 0);\n        _Client_agent.set(this, void 0);\n        _Client_userAgent.set(this, void 0);\n        /*\n         * Notion API endpoints\n         */\n        this.blocks = {\n            /**\n             * Retrieve block\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getBlock.path(args),\n                    method: api_endpoints_1.getBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update block\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateBlock.path(args),\n                    method: api_endpoints_1.updateBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Delete block\n             */\n            delete: (args) => {\n                return this.request({\n                    path: api_endpoints_1.deleteBlock.path(args),\n                    method: api_endpoints_1.deleteBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            children: {\n                /**\n                 * Append block children\n                 */\n                append: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.appendBlockChildren.path(args),\n                        method: api_endpoints_1.appendBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n                /**\n                 * Retrieve block children\n                 */\n                list: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.listBlockChildren.path(args),\n                        method: api_endpoints_1.listBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.databases = {\n            /**\n             * List databases\n             *\n             * @deprecated Please use `search`\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listDatabases.path(),\n                    method: api_endpoints_1.listDatabases.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a database\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getDatabase.path(args),\n                    method: api_endpoints_1.getDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Query a database\n             */\n            query: (args) => {\n                return this.request({\n                    path: api_endpoints_1.queryDatabase.path(args),\n                    method: api_endpoints_1.queryDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Create a database\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createDatabase.path(),\n                    method: api_endpoints_1.createDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update a database\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateDatabase.path(args),\n                    method: api_endpoints_1.updateDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.pages = {\n            /**\n             * Create a page\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createPage.path(),\n                    method: api_endpoints_1.createPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a page\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getPage.path(args),\n                    method: api_endpoints_1.getPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update page properties\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updatePage.path(args),\n                    method: api_endpoints_1.updatePage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updatePage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updatePage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            properties: {\n                /**\n                 * Retrieve page property\n                 */\n                retrieve: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.getPageProperty.path(args),\n                        method: api_endpoints_1.getPageProperty.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.users = {\n            /**\n             * Retrieve a user\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getUser.path(args),\n                    method: api_endpoints_1.getUser.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getUser.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getUser.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List all users\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listUsers.path(),\n                    method: api_endpoints_1.listUsers.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listUsers.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listUsers.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Get details about bot\n             */\n            me: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getSelf.path(),\n                    method: api_endpoints_1.getSelf.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getSelf.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getSelf.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.comments = {\n            /**\n             * Create a comment\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createComment.path(),\n                    method: api_endpoints_1.createComment.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createComment.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createComment.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List comments\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listComments.path(),\n                    method: api_endpoints_1.listComments.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listComments.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listComments.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        /**\n         * Search\n         */\n        this.search = (args) => {\n            return this.request({\n                path: api_endpoints_1.search.path(),\n                method: api_endpoints_1.search.method,\n                query: (0, utils_1.pick)(args, api_endpoints_1.search.queryParams),\n                body: (0, utils_1.pick)(args, api_endpoints_1.search.bodyParams),\n                auth: args === null || args === void 0 ? void 0 : args.auth,\n            });\n        };\n        this.oauth = {\n            /**\n             * Get token\n             */\n            token: (args) => {\n                return this.request({\n                    path: api_endpoints_1.oauthToken.path(),\n                    method: api_endpoints_1.oauthToken.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.oauthToken.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.oauthToken.bodyParams),\n                    auth: {\n                        client_id: args.client_id,\n                        client_secret: args.client_secret,\n                    },\n                });\n            },\n        };\n        __classPrivateFieldSet(this, _Client_auth, options === null || options === void 0 ? void 0 : options.auth, \"f\");\n        __classPrivateFieldSet(this, _Client_logLevel, (_a = options === null || options === void 0 ? void 0 : options.logLevel) !== null && _a !== void 0 ? _a : logging_1.LogLevel.WARN, \"f\");\n        __classPrivateFieldSet(this, _Client_logger, (_b = options === null || options === void 0 ? void 0 : options.logger) !== null && _b !== void 0 ? _b : (0, logging_1.makeConsoleLogger)(package_json_1.name), \"f\");\n        __classPrivateFieldSet(this, _Client_prefixUrl, ((_c = options === null || options === void 0 ? void 0 : options.baseUrl) !== null && _c !== void 0 ? _c : \"https://api.notion.com\") + \"/v1/\", \"f\");\n        __classPrivateFieldSet(this, _Client_timeoutMs, (_d = options === null || options === void 0 ? void 0 : options.timeoutMs) !== null && _d !== void 0 ? _d : 60000, \"f\");\n        __classPrivateFieldSet(this, _Client_notionVersion, (_e = options === null || options === void 0 ? void 0 : options.notionVersion) !== null && _e !== void 0 ? _e : Client.defaultNotionVersion, \"f\");\n        __classPrivateFieldSet(this, _Client_fetch, (_f = options === null || options === void 0 ? void 0 : options.fetch) !== null && _f !== void 0 ? _f : node_fetch_1.default, \"f\");\n        __classPrivateFieldSet(this, _Client_agent, options === null || options === void 0 ? void 0 : options.agent, \"f\");\n        __classPrivateFieldSet(this, _Client_userAgent, `notionhq-client/${package_json_1.version}`, \"f\");\n    }\n    /**\n     * Sends a request.\n     *\n     * @param path\n     * @param method\n     * @param query\n     * @param body\n     * @returns\n     */\n    async request({ path, method, query, body, auth, }) {\n        this.log(logging_1.LogLevel.INFO, \"request start\", { method, path });\n        // If the body is empty, don't send the body in the HTTP request\n        const bodyAsJsonString = !body || Object.entries(body).length === 0\n            ? undefined\n            : JSON.stringify(body);\n        const url = new URL(`${__classPrivateFieldGet(this, _Client_prefixUrl, \"f\")}${path}`);\n        if (query) {\n            for (const [key, value] of Object.entries(query)) {\n                if (value !== undefined) {\n                    if (Array.isArray(value)) {\n                        value.forEach(val => url.searchParams.append(key, decodeURIComponent(val)));\n                    }\n                    else {\n                        url.searchParams.append(key, String(value));\n                    }\n                }\n            }\n        }\n        // Allow both client ID / client secret based auth as well as token based auth.\n        let authorizationHeader;\n        if (typeof auth === \"object\") {\n            // Client ID and secret based auth is **ONLY** supported when using the\n            // `/oauth/token` endpoint. If this is the case, handle formatting the\n            // authorization header as required by `Basic` auth.\n            const unencodedCredential = `${auth.client_id}:${auth.client_secret}`;\n            const encodedCredential = Buffer.from(unencodedCredential).toString(\"base64\");\n            authorizationHeader = { authorization: `Basic ${encodedCredential}` };\n        }\n        else {\n            // Otherwise format authorization header as `Bearer` token auth.\n            authorizationHeader = this.authAsHeaders(auth);\n        }\n        const headers = {\n            ...authorizationHeader,\n            \"Notion-Version\": __classPrivateFieldGet(this, _Client_notionVersion, \"f\"),\n            \"user-agent\": __classPrivateFieldGet(this, _Client_userAgent, \"f\"),\n        };\n        if (bodyAsJsonString !== undefined) {\n            headers[\"content-type\"] = \"application/json\";\n        }\n        try {\n            const response = await errors_1.RequestTimeoutError.rejectAfterTimeout(__classPrivateFieldGet(this, _Client_fetch, \"f\").call(this, url.toString(), {\n                method: method.toUpperCase(),\n                headers,\n                body: bodyAsJsonString,\n                agent: __classPrivateFieldGet(this, _Client_agent, \"f\"),\n            }), __classPrivateFieldGet(this, _Client_timeoutMs, \"f\"));\n            const responseText = await response.text();\n            if (!response.ok) {\n                throw (0, errors_1.buildRequestError)(response, responseText);\n            }\n            const responseJson = JSON.parse(responseText);\n            this.log(logging_1.LogLevel.INFO, `request success`, { method, path });\n            return responseJson;\n        }\n        catch (error) {\n            if (!(0, errors_1.isNotionClientError)(error)) {\n                throw error;\n            }\n            // Log the error if it's one of our known error types\n            this.log(logging_1.LogLevel.WARN, `request fail`, {\n                code: error.code,\n                message: error.message,\n            });\n            if ((0, errors_1.isHTTPResponseError)(error)) {\n                // The response body may contain sensitive information so it is logged separately at the DEBUG level\n                this.log(logging_1.LogLevel.DEBUG, `failed response body`, {\n                    body: error.body,\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Emits a log message to the console.\n     *\n     * @param level The level for this message\n     * @param args Arguments to send to the console\n     */\n    log(level, message, extraInfo) {\n        if ((0, logging_1.logLevelSeverity)(level) >= (0, logging_1.logLevelSeverity)(__classPrivateFieldGet(this, _Client_logLevel, \"f\"))) {\n            __classPrivateFieldGet(this, _Client_logger, \"f\").call(this, level, message, extraInfo);\n        }\n    }\n    /**\n     * Transforms an API key or access token into a headers object suitable for an HTTP request.\n     *\n     * This method uses the instance's value as the default when the input is undefined. If neither are defined, it returns\n     * an empty object\n     *\n     * @param auth API key or access token\n     * @returns headers key-value object\n     */\n    authAsHeaders(auth) {\n        const headers = {};\n        const authHeaderValue = auth !== null && auth !== void 0 ? auth : __classPrivateFieldGet(this, _Client_auth, \"f\");\n        if (authHeaderValue !== undefined) {\n            headers[\"authorization\"] = `Bearer ${authHeaderValue}`;\n        }\n        return headers;\n    }\n}\nexports.default = Client;\n_Client_auth = new WeakMap(), _Client_logLevel = new WeakMap(), _Client_logger = new WeakMap(), _Client_prefixUrl = new WeakMap(), _Client_timeoutMs = new WeakMap(), _Client_notionVersion = new WeakMap(), _Client_fetch = new WeakMap(), _Client_agent = new WeakMap(), _Client_userAgent = new WeakMap();\nClient.defaultNotionVersion = \"2022-06-28\";\n//# sourceMappingURL=Client.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFullComment = exports.isFullUser = exports.isFullPageOrDatabase = exports.isFullDatabase = exports.isFullPage = exports.isFullBlock = exports.collectPaginatedAPI = exports.iteratePaginatedAPI = void 0;\n/**\n * Returns an async iterator over the results of any paginated Notion API.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * for await (const block of iteratePaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })) {\n *   // Do something with block.\n * }\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function* iteratePaginatedAPI(listFn, firstPageArgs) {\n    let nextCursor = firstPageArgs.start_cursor;\n    do {\n        const response = await listFn({\n            ...firstPageArgs,\n            start_cursor: nextCursor,\n        });\n        yield* response.results;\n        nextCursor = response.next_cursor;\n    } while (nextCursor);\n}\nexports.iteratePaginatedAPI = iteratePaginatedAPI;\n/**\n * Collect all of the results of paginating an API into an in-memory array.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * const blocks = await collectPaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })\n * // Do something with blocks.\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function collectPaginatedAPI(listFn, firstPageArgs) {\n    const results = [];\n    for await (const item of iteratePaginatedAPI(listFn, firstPageArgs)) {\n        results.push(item);\n    }\n    return results;\n}\nexports.collectPaginatedAPI = collectPaginatedAPI;\n/**\n * @returns `true` if `response` is a full `BlockObjectResponse`.\n */\nfunction isFullBlock(response) {\n    return \"type\" in response;\n}\nexports.isFullBlock = isFullBlock;\n/**\n * @returns `true` if `response` is a full `PageObjectResponse`.\n */\nfunction isFullPage(response) {\n    return \"url\" in response;\n}\nexports.isFullPage = isFullPage;\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse`.\n */\nfunction isFullDatabase(response) {\n    return \"title\" in response;\n}\nexports.isFullDatabase = isFullDatabase;\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse` or a full\n * `PageObjectResponse`.\n */\nfunction isFullPageOrDatabase(response) {\n    if (response.object === \"database\") {\n        return isFullDatabase(response);\n    }\n    else {\n        return isFullPage(response);\n    }\n}\nexports.isFullPageOrDatabase = isFullPageOrDatabase;\n/**\n * @returns `true` if `response` is a full `UserObjectResponse`.\n */\nfunction isFullUser(response) {\n    return \"type\" in response;\n}\nexports.isFullUser = isFullUser;\n/**\n * @returns `true` if `response` is a full `CommentObjectResponse`.\n */\nfunction isFullComment(response) {\n    return \"created_by\" in response;\n}\nexports.isFullComment = isFullComment;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFullPageOrDatabase = exports.isFullComment = exports.isFullUser = exports.isFullPage = exports.isFullDatabase = exports.isFullBlock = exports.iteratePaginatedAPI = exports.collectPaginatedAPI = exports.isNotionClientError = exports.RequestTimeoutError = exports.UnknownHTTPResponseError = exports.APIResponseError = exports.ClientErrorCode = exports.APIErrorCode = exports.LogLevel = exports.Client = void 0;\nvar Client_1 = require(\"./Client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return Client_1.default; } });\nvar logging_1 = require(\"./logging\");\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return logging_1.LogLevel; } });\nvar errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"APIErrorCode\", { enumerable: true, get: function () { return errors_1.APIErrorCode; } });\nObject.defineProperty(exports, \"ClientErrorCode\", { enumerable: true, get: function () { return errors_1.ClientErrorCode; } });\nObject.defineProperty(exports, \"APIResponseError\", { enumerable: true, get: function () { return errors_1.APIResponseError; } });\nObject.defineProperty(exports, \"UnknownHTTPResponseError\", { enumerable: true, get: function () { return errors_1.UnknownHTTPResponseError; } });\nObject.defineProperty(exports, \"RequestTimeoutError\", { enumerable: true, get: function () { return errors_1.RequestTimeoutError; } });\n// Error helpers\nObject.defineProperty(exports, \"isNotionClientError\", { enumerable: true, get: function () { return errors_1.isNotionClientError; } });\nvar helpers_1 = require(\"./helpers\");\nObject.defineProperty(exports, \"collectPaginatedAPI\", { enumerable: true, get: function () { return helpers_1.collectPaginatedAPI; } });\nObject.defineProperty(exports, \"iteratePaginatedAPI\", { enumerable: true, get: function () { return helpers_1.iteratePaginatedAPI; } });\nObject.defineProperty(exports, \"isFullBlock\", { enumerable: true, get: function () { return helpers_1.isFullBlock; } });\nObject.defineProperty(exports, \"isFullDatabase\", { enumerable: true, get: function () { return helpers_1.isFullDatabase; } });\nObject.defineProperty(exports, \"isFullPage\", { enumerable: true, get: function () { return helpers_1.isFullPage; } });\nObject.defineProperty(exports, \"isFullUser\", { enumerable: true, get: function () { return helpers_1.isFullUser; } });\nObject.defineProperty(exports, \"isFullComment\", { enumerable: true, get: function () { return helpers_1.isFullComment; } });\nObject.defineProperty(exports, \"isFullPageOrDatabase\", { enumerable: true, get: function () { return helpers_1.isFullPageOrDatabase; } });\n//# sourceMappingURL=index.js.map","import { isFullUser } from \"@notionhq/client\";\n\nimport { useMapper } from \"../hooks.js\";\n\nimport { Annotation } from \"./Annotation/Annotation.js\";\n\nimport type { RichTextProps } from \"./RichText.js\";\nimport type { MentionRichTextItem } from \"@udus/notion-libs\";\n\ntype Props = Omit<RichTextProps<MentionRichTextItem>, \"richTextItemMapper\">;\n\nexport const Mention: React.FC<Props> = ({ richText: richTextItem }) => {\n  const { Link } = useMapper();\n\n  switch (richTextItem.mention.type) {\n    case \"database\":\n      return (\n        <span className=\"notion_rich_text_type_mention_type_database\">\n          <Link href={`/${richTextItem.mention.database.id}`}>\n            <Annotation richTextItem={richTextItem}>\n              {richTextItem.plain_text}\n            </Annotation>\n          </Link>\n        </span>\n      );\n    case \"date\":\n      return (\n        <span className=\"notion_rich_text_type_mention_type_date\">\n          <Annotation richTextItem={richTextItem}>\n            {richTextItem.plain_text}\n          </Annotation>\n        </span>\n      );\n    case \"link_preview\":\n      return (\n        <span className=\"notion_rich_text_type_mention_type_link_preview\">\n          <Link href={richTextItem.mention.link_preview.url}>\n            <Annotation richTextItem={richTextItem}>\n              {richTextItem.plain_text}\n            </Annotation>\n          </Link>\n        </span>\n      );\n    case \"page\":\n      return (\n        <span className=\"notion_rich_text_type_mention_type_page\">\n          <Link href={`/${richTextItem.mention.page.id}`}>\n            <Annotation richTextItem={richTextItem}>\n              {richTextItem.plain_text}\n            </Annotation>\n          </Link>\n        </span>\n      );\n    case \"template_mention\":\n      console.warn(`${richTextItem.mention.type} is not supported yet.`);\n      return null;\n    case \"user\":\n      return (\n        <span className=\"notion_rich_text_type_mention_type_user\">\n          {isFullUser(richTextItem.mention.user) ? (\n            <img\n              className=\"notion_rich_text_type_mention_type_user_avatar\"\n              src={richTextItem.mention.user.avatar_url ?? undefined}\n              alt=\"user avater\"\n            />\n          ) : (\n            \"@\"\n          )}\n          <Annotation richTextItem={richTextItem}>\n            {richTextItem.plain_text.replace(\"@\", \"\")}\n          </Annotation>\n        </span>\n      );\n    default:\n      console.error(`unknown mention type.`);\n      return null;\n  }\n};\n","import { createContext, useContext, type FC, type ReactNode } from \"react\";\n\nimport { InlineEquation } from \"../RichText/InlineEquation.js\";\nimport { Mention } from \"../RichText/Mention.js\";\nimport { Text } from \"../RichText/Text.js\";\n\nexport const RichTextItemContext = createContext({\n  text: Text,\n  equation: InlineEquation,\n  mention: Mention,\n});\n\nexport const RichTextItemProvider: FC<{\n  mapper?: object;\n  children: ReactNode;\n}> = ({ mapper, children }) => {\n  if (!mapper) {\n    return children;\n  }\n\n  const richTextItemMapper = useContext(RichTextItemContext);\n\n  return (\n    <RichTextItemContext.Provider value={{ ...richTextItemMapper, ...mapper }}>\n      {children}\n    </RichTextItemContext.Provider>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\n\nimport type {\n  BlockObject,\n  Heading1BlockObject,\n  Heading2BlockObject,\n  Heading3BlockObject,\n  ToggleBlockObject,\n} from \"@udus/notion-libs\";\n\nexport type BlockProps<T extends BlockObject> = {\n  block: T;\n  blocks: Array<BlockObject>;\n};\n\ntype Props = BlockProps<BlockObject>;\n\nexport const Block: React.FC<Props> = ({ block, blocks = [] }) => {\n  return (\n    <div className=\"notion_block\">\n      <BlockComponent block={block} blocks={blocks} />\n    </div>\n  );\n};\n\nconst BlockComponent: React.FC<Props> = ({ block, blocks }) => {\n  const { blockMapper } = useMapper();\n\n  switch (block.type) {\n    case \"audio\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"bookmark\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"breadcrumb\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"bulleted_list\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"bulleted_list_item\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"callout\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"child_database\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"child_page\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"code\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"column\": {\n      console.warn(\n        `top level column block is not supported. column block must be child of column_list block.`\n      );\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"column_list\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"divider\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"embed\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"equation\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"file\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"heading_1\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"heading_2\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"heading_3\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"image\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"link_preview\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"link_to_page\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"numbered_list\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"numbered_list_item\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"paragraph\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"pdf\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"quote\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"synced_block\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"table\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"table_of_contents\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"table_row\": {\n      console.warn(\n        `top level table_row block is not supported. table_row block must be child of table block.`\n      );\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"template\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"to_do\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"toggle\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"unsupported\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    case \"video\": {\n      const BlockComponent = blockMapper[block.type];\n      return <BlockComponent block={block} blocks={blocks} />;\n    }\n    default: {\n      // @ts-expect-error: to log when an unexpected 'block.type' is encountered, which is not in the type.\n      console.warn(`${block.type as { type: never }} is never.`);\n      return null;\n    }\n  }\n};\nexport type TogglableBlockObjectComponent =\n  | ToggleBlockObject\n  | Heading1BlockObject\n  | Heading2BlockObject\n  | Heading3BlockObject;\n","import React from \"react\";\n\nimport { type LinkProps } from \"../Link.js\";\nimport { AnnotationProvider } from \"../Mapper/Annotation.js\";\nimport { BlockProvider } from \"../Mapper/Block.js\";\nimport { LinkProvider } from \"../Mapper/Link.js\";\nimport { RichTextItemProvider } from \"../Mapper/RichText.js\";\n\nimport { Block } from \"./Block.js\";\n\nimport type { BlockObject } from \"@udus/notion-libs\";\n\ntype Props = {\n  blocks: Array<BlockObject>;\n  blockMapper?: object;\n  richTextItemMapper?: object;\n  annotationMapper?: object;\n  LinkComponent?: React.ComponentType<LinkProps>;\n};\n\nexport const Blocks: React.FC<Props> = function ({\n  blocks,\n  blockMapper,\n  richTextItemMapper,\n  annotationMapper,\n  LinkComponent,\n}) {\n  return (\n    <BlockProvider mapper={blockMapper}>\n      <RichTextItemProvider mapper={richTextItemMapper}>\n        <AnnotationProvider mapper={annotationMapper}>\n          <LinkProvider link={LinkComponent}>\n            {blocks.map((block) => {\n              return <Block key={block.id} block={block} blocks={blocks} />;\n            })}\n          </LinkProvider>\n        </AnnotationProvider>\n      </RichTextItemProvider>\n    </BlockProvider>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { BulletedListItemBlockObject } from \"@udus/notion-libs\";\nimport type React from \"react\";\n\ntype Props = BlockProps<BulletedListItemBlockObject>;\n\nexport const BulletedListItem: React.FC<Props> = ({ block }) => {\n  return (\n    <li\n      id={block.id}\n      className={`notion_bulleted_list_item notion_color_${block.bulleted_list_item.color}`}\n    >\n      <RichText richText={block.bulleted_list_item.rich_text} />\n      <div>\n        {block.bulleted_list_item.children && (\n          <Blocks blocks={block.bulleted_list_item.children} />\n        )}\n      </div>\n    </li>\n  );\n};\n","import { BulletedListItem } from \"./BulletedListItem.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { BulletedListBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<BulletedListBlockObject>;\n\nexport const BulletedList: React.FC<Props> = ({ block, blocks }) => {\n  return (\n    <ul className=\"notion_bulleted_list\">\n      {block.bulleted_list.items.map((item) => {\n        return <BulletedListItem key={item.id} block={item} blocks={blocks} />;\n      })}\n    </ul>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\nimport { Icon } from \"./Icon.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { CalloutBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<CalloutBlockObject>;\n\nexport const Callout: React.FC<Props> = ({ block }) => {\n  return (\n    <div\n      id={block.id}\n      className={`notion_callout notion_color_${block.callout.color}`}\n    >\n      <span className=\"notion_callout_icon\">\n        <Icon icon={block.callout.icon} />\n      </span>\n      <div className=\"notion_callout_content\">\n        <span>\n          <RichText richText={block.callout.rich_text} />\n        </span>\n        {block.callout.children && <Blocks blocks={block.callout.children} />}\n      </div>\n    </div>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\n\nimport { Icon } from \"./Icon.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ChildDatabaseBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<ChildDatabaseBlockObject>;\n\nexport const ChildDatabase: React.FC<Props> = ({ block }) => {\n  const { Link } = useMapper();\n  return (\n    <div id={block.id} className=\"notion_child_database\">\n      <Link href={`/${block.id}`}>\n        <span className=\"notion_child_database_icon\">\n          {<Icon icon={block.child_database.database?.icon ?? null} />}\n        </span>\n        <span className=\"notion_child_database_title\">\n          {block.child_database.title || \"Unknown database\"}\n        </span>\n      </Link>\n    </div>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\n\nimport { Icon } from \"./Icon.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ChildPageBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<ChildPageBlockObject>;\n\nexport const ChildPage: React.FC<Props> = ({ block }) => {\n  const { Link } = useMapper();\n  return (\n    <div id={block.id} className=\"notion_child_page\">\n      <Link href={`/${block.id}`}>\n        <span className=\"notion_child_page_icon\">\n          {<Icon icon={block.child_page.page?.icon ?? null} />}\n        </span>\n        <span className=\"notion_child_page_title\">\n          {block.child_page.title || \"Unknown page\"}\n        </span>\n      </Link>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { CodeBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<CodeBlockObject>;\n\nexport const Code: React.FC<Props> = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion_code\">\n      <div className=\"notion_code_header\">\n        <div className=\"notion_code_langage\">{block.code.language}</div>\n      </div>\n      <pre className=\"notion_code_body\">\n        <code>\n          <RichText richText={block.code.rich_text} />\n        </code>\n      </pre>\n      {block.code.caption && (\n        <div className=\"notion_caption\">\n          <RichText richText={block.code.caption} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ColumnListBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<ColumnListBlockObject>;\n\nexport const ColumnList: React.FC<Props> = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion_column_list\">\n      {block.column_list.columns &&\n        block.column_list.columns.map(\n          (column) =>\n            column.column.children && (\n              <div key={column.id} className=\"notion_column\">\n                <Blocks blocks={column.column.children} />\n              </div>\n            )\n        )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { EmbedBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<EmbedBlockObject>;\n\nexport const Embed: React.FC<Props> = ({ block }) => {\n  if (block.embed.oembed) {\n    return (\n      <div>\n        <div\n          dangerouslySetInnerHTML={{\n            __html:\n              block.embed.oembed.type === \"rich\" ? block.embed.oembed.html : \"\",\n          }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div id={block.id} className=\"notion_embed\">\n      <iframe src={block.embed.url} title=\"notion embed content\" />\n      <div className=\"notion_caption notion_embed_caption\">\n        <RichText richText={block.embed.caption} />\n      </div>\n    </div>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { FileBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<FileBlockObject>;\n\nexport const File: React.FC<Props> = ({ block }) => {\n  const { Link } = useMapper();\n\n  const fileUrl =\n    block.file.type == \"external\"\n      ? block.file.external.url\n      : block.file.type == \"file\"\n      ? block.file.file.url\n      : \"\";\n  const filename = decodeURIComponent(\n    new URL(fileUrl).pathname.split(\"/\").slice(-1)[0]\n  );\n\n  return (\n    <div id={block.id} className=\"notion_file\">\n      <Link href={fileUrl}>\n        <div className=\"notion_file_title\">\n          <img\n            src=\"https://www.notion.so/icons/document_gray.svg\"\n            alt=\"File icon in a file block\"\n            width={20}\n            height={20}\n          />{\" \"}\n          {filename}\n        </div>\n      </Link>\n      <div className=\"notion_caption notion_file_caption\">\n        <RichText richText={block.file.caption} />\n      </div>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { Heading1BlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<Heading1BlockObject>;\n\nexport const Heading1: React.FC<Props> = ({ block }) => {\n  return (\n    <>\n      {block.heading_1.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion_heading notion_heading_1 notion_toggle notion_color_${block.heading_1.color}`}\n        >\n          <summary className=\"notion_toggle_summary\">\n            <h1>\n              <RichText richText={block.heading_1.rich_text} />\n            </h1>\n          </summary>\n          <div className=\"notion_toggle_details\">\n            {block.heading_1.children && (\n              <Blocks blocks={block.heading_1.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion_heading notion_heading_1 notion_color_${block.heading_1.color}`}\n        >\n          <RichText richText={block.heading_1.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { Heading2BlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<Heading2BlockObject>;\n\nexport const Heading2: React.FC<Props> = ({ block }) => {\n  return (\n    <>\n      {block.heading_2.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion_heading notion_heading_2 notion_toggle notion_color_${block.heading_2.color}`}\n        >\n          <summary className=\"notion_toggle_summary\">\n            <h2>\n              <RichText richText={block.heading_2.rich_text} />\n            </h2>\n          </summary>\n          <div className=\"notion_toggle_details\">\n            {block.heading_2.children && (\n              <Blocks blocks={block.heading_2.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion_heading notion_heading_2 notion_color_${block.heading_2.color}`}\n        >\n          <RichText richText={block.heading_2.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { Heading3BlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<Heading3BlockObject>;\n\nexport const Heading3: React.FC<Props> = ({ block }) => {\n  return (\n    <>\n      {block.heading_3.is_toggleable ? (\n        <details\n          id={block.id}\n          className={`notion_heading notion_heading_3 notion_toggle notion_color_${block.heading_3.color}`}\n        >\n          <summary className=\"notion_toggle_summary\">\n            <h3>\n              <RichText richText={block.heading_3.rich_text} />\n            </h3>\n          </summary>\n          <div className=\"notion_toggle_details\">\n            {block.heading_3.children && (\n              <Blocks blocks={block.heading_3.children} />\n            )}\n          </div>\n        </details>\n      ) : (\n        <h1\n          id={block.id}\n          className={`notion_heading notion_heading_3 notion_color_${block.heading_3.color}`}\n        >\n          <RichText richText={block.heading_3.rich_text} />\n        </h1>\n      )}\n    </>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ImageBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<ImageBlockObject>;\n\nexport const Image: React.FC<Props> = ({ block }) => {\n  return (\n    <div id={block.id} className=\"notion_image\">\n      <img\n        src={\n          block.image.type == \"external\"\n            ? block.image.external.url\n            : block.image.type == \"file\"\n            ? block.image.file.url\n            : \"\"\n        }\n        alt={block.image.caption.map((b) => b.plain_text).join(\"\")}\n      />\n      <div className=\"notion_caption notion_image_caption\">\n        <RichText richText={block.image.caption} />\n      </div>\n    </div>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { LinkPreviewBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<LinkPreviewBlockObject>;\n\nexport const LinkPreview: React.FC<Props> = ({ block }) => {\n  const { Link } = useMapper();\n\n  return (\n    <div className=\"notion_link_preview\">\n      <Link href={block.link_preview.url}>\n        <div className=\"notion_link_preview_container\">\n          <div className=\"notion_link_preview_content\">\n            <div className=\"notion_link_preview_title\">\n              {block.link_preview?.site_meta?.title\n                ? block.link_preview.site_meta.title\n                : block.link_preview.url}\n            </div>\n            <div className=\"notion_link_preview_description\">\n              {block.link_preview?.site_meta?.description\n                ? block.link_preview.site_meta.description\n                : block.link_preview.url}\n            </div>\n            <div className=\"notion_link_preview_url\">\n              <span className=\"notion_link_preview_favicon\">\n                <img\n                  src={\n                    block.link_preview?.site_meta?.favicon\n                      ? block.link_preview.site_meta?.favicon\n                      : `https://www.google.com/s2/favicons?domain=${block.link_preview.url}`\n                  }\n                  alt=\"link preview favicon\"\n                />\n              </span>\n              <span className=\"notion_link_preview_link_url\">\n                {block.link_preview.url}\n              </span>\n            </div>\n          </div>\n          {block.link_preview?.site_meta?.image && (\n            <div className=\"notion_link_preview_cover\">\n              <img\n                src={block.link_preview.site_meta.image}\n                alt=\"link preview og image\"\n              />\n            </div>\n          )}\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import { extractTitleProperty } from \"../../utils.js\";\nimport { useMapper } from \"../hooks.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport { Icon } from \"./Icon.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { LinkToPageBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<LinkToPageBlockObject>;\n\nexport const LinkToPage: React.FC<Props> = ({ block }) => {\n  const { Link } = useMapper();\n\n  if (block.link_to_page.type === \"page_id\" && block.link_to_page.page) {\n    const titleRichText = extractTitleProperty(block.link_to_page.page);\n    return (\n      <div id={block.id} className=\"notion_link_to_page\">\n        <Link href={`/${block.id}`}>\n          <span className=\"notion_link_to_page_icon\">\n            {<Icon icon={block.link_to_page.page?.icon ?? null} />}\n          </span>\n          <span className=\"notion_link_to_page_title\">\n            <RichText richText={titleRichText} />\n          </span>\n        </Link>\n      </div>\n    );\n  }\n  if (\n    block.link_to_page.type === \"database_id\" &&\n    block.link_to_page.database\n  ) {\n    const titleRichTexts = extractTitleProperty(block.link_to_page.database);\n    return (\n      <div id={block.id} className=\"notion_link_to_page\">\n        <Link href={`/${block.id}`}>\n          <span className=\"notion_link_to_page_icon\">\n            {<Icon icon={block.link_to_page.database?.icon ?? null} />}\n          </span>\n          <span className=\"notion_link_to_page_title\">\n            <RichText richText={titleRichTexts} />\n          </span>\n        </Link>\n      </div>\n    );\n  }\n  if (block.link_to_page.type === \"comment_id\" && block.link_to_page.comments) {\n    console.warn(\"comment type link_to_page block is not supported yet.\");\n  }\n\n  return null;\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { NumberedListItemBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<NumberedListItemBlockObject>;\n\nexport const NumberedListItem: React.FC<Props> = ({ block }) => {\n  return (\n    <li\n      id={block.id}\n      className={`notion_numbered_list_item notion_color_${block.numbered_list_item.color}`}\n    >\n      <RichText richText={block.numbered_list_item.rich_text} />\n      <div>\n        {block.numbered_list_item.children && (\n          <Blocks blocks={block.numbered_list_item.children} />\n        )}\n      </div>\n    </li>\n  );\n};\n","import { NumberedListItem } from \"./NumberedListItem.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { NumberedListBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<NumberedListBlockObject>;\n\nexport const NumberedList: React.FC<Props> = ({ block, blocks }) => {\n  return (\n    <ol className=\"notion_numbered_list\">\n      {block.numbered_list.items.map((item) => {\n        return <NumberedListItem key={item.id} block={item} blocks={blocks} />;\n      })}\n    </ol>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ParagraphBlockObject } from \"@udus/notion-libs\";\nimport type React from \"react\";\n\ntype Props = BlockProps<ParagraphBlockObject>;\n\nexport const Paragraph: React.FC<Props> = ({ block }) => {\n  return (\n    <div\n      id={block.id}\n      className={`notion_paragraph notion_color_${block.paragraph.color}`}\n    >\n      <p>\n        <RichText richText={block.paragraph.rich_text} />\n      </p>\n      {block.paragraph.children && (\n        <div className={\"notion_paragraph_children\"}>\n          <Blocks blocks={block.paragraph.children} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { PdfBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<PdfBlockObject>;\n\nexport const Pdf: React.FC<Props> = ({ block }) => {\n  const pdfUrl =\n    block.pdf.type == \"external\"\n      ? block.pdf.external.url\n      : block.pdf.type == \"file\"\n      ? block.pdf.file.url\n      : \"\";\n  return (\n    <div id={block.id} className=\"notion_pdf\">\n      <object\n        type=\"application/pdf\"\n        data={\n          block.pdf.type == \"external\"\n            ? block.pdf.external.url\n            : block.pdf.type == \"file\"\n            ? block.pdf.file.url\n            : \"\"\n        }\n      >\n        Your browser does not support pdfs. You can download pdf file\n        <a href={pdfUrl}>here</a>.\n      </object>\n      <div className=\"notion_caption notion_pdf_caption\">\n        <RichText richText={block.pdf.caption} />\n      </div>\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { QuoteBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<QuoteBlockObject>;\n\nexport const Quote: React.FC<Props> = ({ block }) => {\n  return (\n    <blockquote\n      id={block.id}\n      className={`notion_quote notion_color_${block.quote.color}`}\n    >\n      <RichText richText={block.quote.rich_text} />\n      {block.quote.children && (\n        <div className={\"notion_quote_children\"}>\n          <Blocks blocks={block.quote.children} />\n        </div>\n      )}\n    </blockquote>\n  );\n};\n","import { Block, type BlockProps } from \"./Block.js\";\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { SyncedBlockBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<SyncedBlockBlockObject>;\n\nexport const SyncedBlock: React.FC<Props> = ({ block, blocks }) => {\n  return (\n    <div className=\"notion_synced_block\">\n      {block.synced_block.synced_from === null\n        ? block.synced_block.children && (\n            <div className={\"notion_synced_block_original\"}>\n              <Blocks blocks={block.synced_block.children} />\n            </div>\n          )\n        : block.synced_block.synced_from.block && (\n            <div className={\"notion_synced_block_duplicated\"}>\n              <Block\n                block={block.synced_block.synced_from.block}\n                blocks={blocks}\n              />\n            </div>\n          )}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type {\n  TableCellBlockObjectComponent,\n  TableRowBlockObject,\n  TableBlockObject,\n} from \"@udus/notion-libs\";\n\ntype Props = BlockProps<TableBlockObject>;\n\nexport const Table: React.FC<Props> = ({ block }) => {\n  return (\n    <table id={block.id} className=\"notion_table\">\n      <tbody>\n        {block.table.table_rows &&\n          block.table.table_rows.map((table_row, index) => {\n            if (block.table.has_row_header && index === 0) {\n              return (\n                <TableRowRowHeader key={table_row.id} table_row={table_row} />\n              );\n            }\n            if (block.table.has_column_header) {\n              return (\n                <TableRowColumnHeader\n                  key={table_row.id}\n                  table_row={table_row}\n                />\n              );\n            }\n            return (\n              <TableRowNoHeader key={table_row.id} table_row={table_row} />\n            );\n          })}\n      </tbody>\n    </table>\n  );\n};\n\nconst TableRowRowHeader: React.FC<{\n  table_row: TableRowBlockObject;\n}> = ({ table_row }) => {\n  return (\n    <tr id={table_row.id} className=\"notion_table_row\">\n      {table_row.table_row.cells.map((cell) => (\n        <Th key={table_row.id} cell={cell} />\n      ))}\n    </tr>\n  );\n};\n\nconst TableRowColumnHeader: React.FC<{\n  table_row: TableRowBlockObject;\n}> = ({ table_row }) => {\n  return (\n    <tr id={table_row.id} className=\"notion_table_row\">\n      {table_row.table_row.cells.map((cell, index) => {\n        return index === 0 ? (\n          <Th key={table_row.id} cell={cell} />\n        ) : (\n          <Td key={table_row.id} cell={cell} />\n        );\n      })}\n    </tr>\n  );\n};\n\nconst TableRowNoHeader: React.FC<{\n  table_row: TableRowBlockObject;\n}> = ({ table_row }) => {\n  return (\n    <tr id={table_row.id} className=\"notion_table_row\">\n      {table_row.table_row.cells.map((cell) => (\n        <Td key={table_row.id} cell={cell} />\n      ))}\n    </tr>\n  );\n};\n\nconst Th: React.FC<{\n  cell: TableCellBlockObjectComponent;\n}> = ({ cell }) => {\n  return (\n    <th>\n      <RichText richText={cell} />\n    </th>\n  );\n};\n\nconst Td: React.FC<{\n  cell: TableCellBlockObjectComponent;\n}> = ({ cell }) => {\n  return (\n    <td>\n      <RichText richText={cell} />\n    </td>\n  );\n};\n","import { useMapper } from \"../hooks.js\";\nimport { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type {\n  TableOfContentsBlockObject,\n  Heading3BlockObject,\n  Heading2BlockObject,\n  Heading1BlockObject,\n} from \"@udus/notion-libs\";\n\ntype Props = BlockProps<TableOfContentsBlockObject>;\n\nexport const TableOfContents: React.FC<Props> = ({ block, blocks }) => {\n  const { Link } = useMapper();\n  const headings = blocks?.filter(\n    (\n      block\n    ): block is\n      | Heading1BlockObject\n      | Heading2BlockObject\n      | Heading3BlockObject =>\n      block.type === \"heading_1\" ||\n      block.type === \"heading_2\" ||\n      block.type === \"heading_3\"\n  );\n  return (\n    <div\n      id={block.id}\n      className={`notion_table_of_contents notion_color_${block.table_of_contents.color}`}\n    >\n      {headings &&\n        headings.map((heading) => {\n          return (\n            <div key={heading.id} className=\"notion_table_of_contents_item\">\n              <div className={`notion_table_of_contents_item_${heading.type}`}>\n                <Link href={`#${heading.id}`}>\n                  {/* @ts-expect-error: because heading objects always have a 'rich_text' property  */}\n                  <RichText richText={heading[heading.type].rich_text} />\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ToDoBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<ToDoBlockObject>;\n\nexport const ToDo: React.FC<Props> = ({ block }) => {\n  const isChecked = block.to_do.checked;\n  return (\n    <div\n      id={block.id}\n      className={`notion_to_do notion_color_${block.to_do.color}`}\n    >\n      <div className=\"notion_to_do_content\">\n        <span className=\"notion_to_do_icon\">\n          {isChecked ? <CheckedBox /> : <CheckBox />}\n        </span>\n        <span className={`notion_to_do_text ${isChecked ? \"checked\" : \"\"}`}>\n          <RichText richText={block.to_do.rich_text} />\n        </span>\n      </div>\n      {block.to_do.children && (\n        <div className=\"notion_to_do_children\">\n          <Blocks blocks={block.to_do.children} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst CheckBox = () => (\n  <span className=\"notion_checkbox\">\n    <svg viewBox=\"0 0 16 16\">\n      <path d=\"M1.5,1.5 L1.5,14.5 L14.5,14.5 L14.5,1.5 L1.5,1.5 Z M0,0 L16,0 L16,16 L0,16 L0,0 Z\"></path>\n    </svg>\n  </span>\n);\n\nconst CheckedBox = () => (\n  <span className=\"notion_checkbox checked\">\n    <svg viewBox=\"0 0 14 14\">\n      <polygon points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"></polygon>\n    </svg>\n  </span>\n);\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport { Blocks } from \"./Blocks.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { ToggleBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<ToggleBlockObject>;\n\nexport const Toggle: React.FC<Props> = ({ block }) => {\n  return (\n    <details\n      id={block.id}\n      className={`notion_toggle notion_color_${block.toggle.color}`}\n    >\n      <summary className=\"notion_toggle_summary\">\n        <RichText richText={block.toggle.rich_text} />\n      </summary>\n      <div className=\"notion_toggle_details\">\n        {block.toggle.children && <Blocks blocks={block.toggle.children} />}\n      </div>\n    </details>\n  );\n};\n","import type { BlockProps } from \"./Block.js\";\nimport type { BlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<BlockObject>;\n\nexport const Unsupported: React.FC<Props> = ({ block }) => {\n  console.warn(`${block.type} is not supported`);\n  return null;\n};\n","import { RichText } from \"../RichText/RichText.js\";\n\nimport type { BlockProps } from \"./Block.js\";\nimport type { VideoBlockObject } from \"@udus/notion-libs\";\n\ntype Props = BlockProps<VideoBlockObject>;\n\nexport const Video: React.FC<Props> = ({ block }) => {\n  if (block.video.type === \"external\" && block.video.oembed) {\n    return (\n      <div\n        dangerouslySetInnerHTML={{\n          __html:\n            block.video.oembed.type === \"video\" ? block.video.oembed.html : \"\",\n        }}\n      />\n    );\n  }\n\n  const videoUrl =\n    block.video.type == \"external\"\n      ? block.video.external.url\n      : block.video.type == \"file\"\n      ? block.video.file.url\n      : \"\";\n\n  return (\n    <div id={block.id} className=\"notion_video\">\n      <video controls src={videoUrl}>\n        Your browser does not support type os. You can download video file\n        <a href={videoUrl}>here</a>.\n      </video>\n      <div className=\"notion_caption notion_video_caption\">\n        <RichText richText={block.video.caption} />\n      </div>\n    </div>\n  );\n};\n","import React, { createContext, useContext } from \"react\";\n\nimport { Audio } from \"../Blocks/Audio.js\";\nimport { Bookmark } from \"../Blocks/Bookmark.js\";\nimport { Breadcrumb } from \"../Blocks/Breadcrumb.js\";\nimport { BulletedList } from \"../Blocks/BulletedList.js\";\nimport { BulletedListItem } from \"../Blocks/BulletedListItem.js\";\nimport { Callout } from \"../Blocks/Callout.js\";\nimport { ChildDatabase } from \"../Blocks/ChildDatabase.js\";\nimport { ChildPage } from \"../Blocks/ChildPage.js\";\nimport { Code } from \"../Blocks/Code.js\";\nimport { ColumnList } from \"../Blocks/ColumnList.js\";\nimport { Divider } from \"../Blocks/Divider.js\";\nimport { Embed } from \"../Blocks/Embed.js\";\nimport { Equation } from \"../Blocks/Equation.js\";\nimport { File } from \"../Blocks/File.js\";\nimport { Heading1 } from \"../Blocks/Heading1.js\";\nimport { Heading2 } from \"../Blocks/Heading2.js\";\nimport { Heading3 } from \"../Blocks/Heading3.js\";\nimport { Image } from \"../Blocks/Image.js\";\nimport { LinkPreview } from \"../Blocks/LinkPreview.js\";\nimport { LinkToPage } from \"../Blocks/LinkToPage.js\";\nimport { NumberedList } from \"../Blocks/NumberedList.js\";\nimport { NumberedListItem } from \"../Blocks/NumberedListItem.js\";\nimport { Paragraph } from \"../Blocks/Paragraph.js\";\nimport { Pdf } from \"../Blocks/Pdf.js\";\nimport { Quote } from \"../Blocks/Quote.js\";\nimport { SyncedBlock } from \"../Blocks/SyncedBlock.js\";\nimport { Table } from \"../Blocks/Table.js\";\nimport { TableOfContents } from \"../Blocks/TableOfContents.js\";\nimport { ToDo } from \"../Blocks/ToDo.js\";\nimport { Toggle } from \"../Blocks/Toggle.js\";\nimport { Unsupported } from \"../Blocks/Unsupported.js\";\nimport { Video } from \"../Blocks/Video.js\";\n\nexport const BlockContext = createContext({\n  audio: Audio,\n  bookmark: Bookmark,\n  breadcrumb: Breadcrumb,\n  bulleted_list: BulletedList,\n  bulleted_list_item: BulletedListItem,\n  callout: Callout,\n  child_database: ChildDatabase,\n  child_page: ChildPage,\n  code: Code,\n  column: Unsupported,\n  column_list: ColumnList,\n  divider: Divider,\n  embed: Embed,\n  equation: Equation,\n  file: File,\n  heading_1: Heading1,\n  heading_2: Heading2,\n  heading_3: Heading3,\n  image: Image,\n  link_preview: LinkPreview,\n  link_to_page: LinkToPage,\n  numbered_list: NumberedList,\n  numbered_list_item: NumberedListItem,\n  paragraph: Paragraph,\n  pdf: Pdf,\n  quote: Quote,\n  synced_block: SyncedBlock,\n  table: Table,\n  table_of_contents: TableOfContents,\n  table_row: Unsupported,\n  template: Unsupported,\n  to_do: ToDo,\n  toggle: Toggle,\n  unsupported: Unsupported,\n  video: Video,\n});\n\nexport const BlockProvider: React.FC<{\n  mapper?: object;\n  children: React.ReactNode;\n}> = ({ mapper, children }) => {\n  if (!mapper) {\n    return children;\n  }\n\n  const blockMapper = useContext(BlockContext);\n\n  return (\n    <BlockContext.Provider value={{ ...blockMapper, ...mapper }}>\n      {children}\n    </BlockContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\n\nimport { AnnotationContext } from \"./Mapper/Annotation.js\";\nimport { BlockContext } from \"./Mapper/Block.js\";\nimport { LinkContext } from \"./Mapper/Link.js\";\nimport { RichTextItemContext } from \"./Mapper/RichText.js\";\n\nexport const useMapper = () => {\n  const blockMapper = useContext(BlockContext);\n  const richTextItemMapper = useContext(RichTextItemContext);\n  const annotationMapper = useContext(AnnotationContext);\n  const Link = useContext(LinkContext);\n  return {\n    blockMapper,\n    richTextItemMapper,\n    annotationMapper,\n    Link,\n  };\n};\n","import { useMapper } from \"../hooks.js\";\n\nimport { Annotation } from \"./Annotation/Annotation.js\";\n\nimport type { RichTextProps } from \"./RichText.js\";\nimport type { TextRichTextItem } from \"@udus/notion-libs\";\n\ntype Props = Omit<RichTextProps<TextRichTextItem>, \"richTextItemMapper\">;\n\nexport const Text: React.FC<Props> = ({ richText: richTextItem }) => {\n  const { Link } = useMapper();\n\n  return (\n    <span className=\"notion_rich_text_type_text\">\n      <Annotation richTextItem={richTextItem}>\n        {richTextItem.text.link ? (\n          <Link href={richTextItem.text.link?.url}>\n            {richTextItem.text.content}\n          </Link>\n        ) : (\n          richTextItem.text.content\n        )}\n      </Annotation>\n    </span>\n  );\n};\n"],"names":["Annotation","richTextItem","children","annotationMapper","useMapper","element","BoldAnnotation","jsx","ItalicAnnotation","StrikethroughAnnotation","UnderlineAnnotation","InlineCodeAnnotation","ColorAnnotation","Fragment","AnnotationContext","createContext","Color","Bold","Italic","Strikethrough","Underline","InlineCode","AnnotationProvider","mapper","useContext","RichTextItem","props","RichTextItemContent","richTextItemMapper","TypeText","TypeEquation","TypeMention","RichText","richText","item","index","Audio","block","audioUrl","jsxs","Bookmark","Link","_b","_a","_d","_c","_f","_e","_g","_i","_h","extractTitleProperty","page_or_database","property","Icon","icon","DefaultIcon","Breadcrumb","pageOrDatabase","array","t","LinkContext","LinkProvider","link","InlineEquation","katex","utils","assertNever","value","pick","base","keys","entries","key","isObject","o","exports","utils_1","require$$0","LogLevel","makeConsoleLogger","name","level","message","extraInfo","logLevelSeverity","APIErrorCode","ClientErrorCode","NotionClientErrorBase","isNotionClientError","error","isNotionClientErrorWithCode","codes","RequestTimeoutError","promise","timeoutMS","resolve","reject","timeoutId","HTTPResponseError","args","code","status","headers","rawBodyText","httpResponseErrorCodes","isHTTPResponseError","UnknownHTTPResponseError","apiErrorCodes","APIResponseError","buildRequestError","response","bodyText","apiErrorResponseBody","parseAPIErrorResponseBody","body","parsed","isAPIErrorCode","apiEndpoints","p","getGlobal","global","globalObject","module","__classPrivateFieldSet","this","receiver","state","kind","f","__classPrivateFieldGet","_Client_auth","_Client_logLevel","_Client_logger","_Client_prefixUrl","_Client_timeoutMs","_Client_notionVersion","_Client_fetch","_Client_agent","_Client_userAgent","Client_1","logging_1","errors_1","require$$1","require$$2","api_endpoints_1","require$$3","node_fetch_1","require$$4","package_json_1","require$$5","Client","options","path","method","query","auth","bodyAsJsonString","url","val","authorizationHeader","unencodedCredential","Buffer","responseText","responseJson","authHeaderValue","helpers","iteratePaginatedAPI","listFn","firstPageArgs","nextCursor","collectPaginatedAPI","results","isFullBlock","isFullPage","isFullDatabase","isFullPageOrDatabase","isFullUser","isFullComment","helpers_1","Mention","RichTextItemContext","Text","RichTextItemProvider","Block","blocks","BlockComponent","blockMapper","BlockComponent2","Blocks","LinkComponent","BlockProvider","BulletedListItem","BulletedList","Callout","ChildDatabase","ChildPage","Code","ColumnList","column","Embed","File","fileUrl","filename","Heading1","Heading2","Heading3","Image","b","LinkPreview","LinkToPage","titleRichText","titleRichTexts","NumberedListItem","NumberedList","Paragraph","Pdf","pdfUrl","Quote","SyncedBlock","Table","table_row","TableRowRowHeader","TableRowColumnHeader","TableRowNoHeader","cell","Th","Td","TableOfContents","headings","block2","heading","ToDo","isChecked","CheckedBox","CheckBox","Toggle","Unsupported","Video","videoUrl","BlockContext","Divider","Equation"],"mappings":"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","x_google_ignoreList":[11,12,13,14,15,16,17,18]}